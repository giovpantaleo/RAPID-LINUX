// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stats_messages.proto

#ifndef PROTOBUF_stats_5fmessages_2eproto__INCLUDED
#define PROTOBUF_stats_5fmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "stats_common.pb.h"
// @@protoc_insertion_point(includes)
namespace protocol {
class flex_cell_global_eutra_id;
class flex_cell_global_eutra_idDefaultTypeInternal;
extern flex_cell_global_eutra_idDefaultTypeInternal _flex_cell_global_eutra_id_default_instance_;
class flex_cell_stats_report;
class flex_cell_stats_reportDefaultTypeInternal;
extern flex_cell_stats_reportDefaultTypeInternal _flex_cell_stats_report_default_instance_;
class flex_cell_stats_request;
class flex_cell_stats_requestDefaultTypeInternal;
extern flex_cell_stats_requestDefaultTypeInternal _flex_cell_stats_request_default_instance_;
class flex_complete_stats_request;
class flex_complete_stats_requestDefaultTypeInternal;
extern flex_complete_stats_requestDefaultTypeInternal _flex_complete_stats_request_default_instance_;
class flex_complete_stats_request_repeated;
class flex_complete_stats_request_repeatedDefaultTypeInternal;
extern flex_complete_stats_request_repeatedDefaultTypeInternal _flex_complete_stats_request_repeated_default_instance_;
class flex_csi_a12;
class flex_csi_a12DefaultTypeInternal;
extern flex_csi_a12DefaultTypeInternal _flex_csi_a12_default_instance_;
class flex_csi_a20;
class flex_csi_a20DefaultTypeInternal;
extern flex_csi_a20DefaultTypeInternal _flex_csi_a20_default_instance_;
class flex_csi_a22;
class flex_csi_a22DefaultTypeInternal;
extern flex_csi_a22DefaultTypeInternal _flex_csi_a22_default_instance_;
class flex_csi_a30;
class flex_csi_a30DefaultTypeInternal;
extern flex_csi_a30DefaultTypeInternal _flex_csi_a30_default_instance_;
class flex_csi_a31;
class flex_csi_a31DefaultTypeInternal;
extern flex_csi_a31DefaultTypeInternal _flex_csi_a31_default_instance_;
class flex_csi_p10;
class flex_csi_p10DefaultTypeInternal;
extern flex_csi_p10DefaultTypeInternal _flex_csi_p10_default_instance_;
class flex_csi_p11;
class flex_csi_p11DefaultTypeInternal;
extern flex_csi_p11DefaultTypeInternal _flex_csi_p11_default_instance_;
class flex_csi_p20;
class flex_csi_p20DefaultTypeInternal;
extern flex_csi_p20DefaultTypeInternal _flex_csi_p20_default_instance_;
class flex_csi_p21;
class flex_csi_p21DefaultTypeInternal;
extern flex_csi_p21DefaultTypeInternal _flex_csi_p21_default_instance_;
class flex_dl_cqi_report;
class flex_dl_cqi_reportDefaultTypeInternal;
extern flex_dl_cqi_reportDefaultTypeInternal _flex_dl_cqi_report_default_instance_;
class flex_dl_csi;
class flex_dl_csiDefaultTypeInternal;
extern flex_dl_csiDefaultTypeInternal _flex_dl_csi_default_instance_;
class flex_eutra_cgi_measurements;
class flex_eutra_cgi_measurementsDefaultTypeInternal;
extern flex_eutra_cgi_measurementsDefaultTypeInternal _flex_eutra_cgi_measurements_default_instance_;
class flex_eutra_measurements;
class flex_eutra_measurementsDefaultTypeInternal;
extern flex_eutra_measurementsDefaultTypeInternal _flex_eutra_measurements_default_instance_;
class flex_eutra_ref_signal_meas;
class flex_eutra_ref_signal_measDefaultTypeInternal;
extern flex_eutra_ref_signal_measDefaultTypeInternal _flex_eutra_ref_signal_meas_default_instance_;
class flex_gtp_stats;
class flex_gtp_statsDefaultTypeInternal;
extern flex_gtp_statsDefaultTypeInternal _flex_gtp_stats_default_instance_;
class flex_mac_sdus_dl;
class flex_mac_sdus_dlDefaultTypeInternal;
extern flex_mac_sdus_dlDefaultTypeInternal _flex_mac_sdus_dl_default_instance_;
class flex_mac_stats;
class flex_mac_statsDefaultTypeInternal;
extern flex_mac_statsDefaultTypeInternal _flex_mac_stats_default_instance_;
class flex_msb_cqi;
class flex_msb_cqiDefaultTypeInternal;
extern flex_msb_cqiDefaultTypeInternal _flex_msb_cqi_default_instance_;
class flex_neigh_cells_measurements;
class flex_neigh_cells_measurementsDefaultTypeInternal;
extern flex_neigh_cells_measurementsDefaultTypeInternal _flex_neigh_cells_measurements_default_instance_;
class flex_noise_interference_report;
class flex_noise_interference_reportDefaultTypeInternal;
extern flex_noise_interference_reportDefaultTypeInternal _flex_noise_interference_report_default_instance_;
class flex_paging_buffer_report;
class flex_paging_buffer_reportDefaultTypeInternal;
extern flex_paging_buffer_reportDefaultTypeInternal _flex_paging_buffer_report_default_instance_;
class flex_paging_info;
class flex_paging_infoDefaultTypeInternal;
extern flex_paging_infoDefaultTypeInternal _flex_paging_info_default_instance_;
class flex_pdcp_stats;
class flex_pdcp_statsDefaultTypeInternal;
extern flex_pdcp_statsDefaultTypeInternal _flex_pdcp_stats_default_instance_;
class flex_pucch_dbm;
class flex_pucch_dbmDefaultTypeInternal;
extern flex_pucch_dbmDefaultTypeInternal _flex_pucch_dbm_default_instance_;
class flex_rlc_bsr;
class flex_rlc_bsrDefaultTypeInternal;
extern flex_rlc_bsrDefaultTypeInternal _flex_rlc_bsr_default_instance_;
class flex_rrc_measurements;
class flex_rrc_measurementsDefaultTypeInternal;
extern flex_rrc_measurementsDefaultTypeInternal _flex_rrc_measurements_default_instance_;
class flex_s1ap_ue;
class flex_s1ap_ueDefaultTypeInternal;
extern flex_s1ap_ueDefaultTypeInternal _flex_s1ap_ue_default_instance_;
class flex_ue_stats_report;
class flex_ue_stats_reportDefaultTypeInternal;
extern flex_ue_stats_reportDefaultTypeInternal _flex_ue_stats_report_default_instance_;
class flex_ue_stats_request;
class flex_ue_stats_requestDefaultTypeInternal;
extern flex_ue_stats_requestDefaultTypeInternal _flex_ue_stats_request_default_instance_;
class flex_ul_cqi;
class flex_ul_cqiDefaultTypeInternal;
extern flex_ul_cqiDefaultTypeInternal _flex_ul_cqi_default_instance_;
class flex_ul_cqi_report;
class flex_ul_cqi_reportDefaultTypeInternal;
extern flex_ul_cqi_reportDefaultTypeInternal _flex_ul_cqi_report_default_instance_;
}  // namespace protocol

namespace protocol {

namespace protobuf_stats_5fmessages_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_stats_5fmessages_2eproto

enum flex_stats_type {
  FLST_COMPLETE_STATS = 0,
  FLST_CELL_STATS = 1,
  FLST_UE_STATS = 2
};
bool flex_stats_type_IsValid(int value);
const flex_stats_type flex_stats_type_MIN = FLST_COMPLETE_STATS;
const flex_stats_type flex_stats_type_MAX = FLST_UE_STATS;
const int flex_stats_type_ARRAYSIZE = flex_stats_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* flex_stats_type_descriptor();
inline const ::std::string& flex_stats_type_Name(flex_stats_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    flex_stats_type_descriptor(), value);
}
inline bool flex_stats_type_Parse(
    const ::std::string& name, flex_stats_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<flex_stats_type>(
    flex_stats_type_descriptor(), name, value);
}
enum flex_stats_report_freq {
  FLSRF_ONCE = 0,
  FLSRF_PERIODICAL = 1,
  FLSRF_CONTINUOUS = 2,
  FLSRF_OFF = 3
};
bool flex_stats_report_freq_IsValid(int value);
const flex_stats_report_freq flex_stats_report_freq_MIN = FLSRF_ONCE;
const flex_stats_report_freq flex_stats_report_freq_MAX = FLSRF_OFF;
const int flex_stats_report_freq_ARRAYSIZE = flex_stats_report_freq_MAX + 1;

const ::google::protobuf::EnumDescriptor* flex_stats_report_freq_descriptor();
inline const ::std::string& flex_stats_report_freq_Name(flex_stats_report_freq value) {
  return ::google::protobuf::internal::NameOfEnum(
    flex_stats_report_freq_descriptor(), value);
}
inline bool flex_stats_report_freq_Parse(
    const ::std::string& name, flex_stats_report_freq* value) {
  return ::google::protobuf::internal::ParseNamedEnum<flex_stats_report_freq>(
    flex_stats_report_freq_descriptor(), name, value);
}
enum flex_cell_stats_type {
  FLCST_NOISE_INTERFERENCE = 1
};
bool flex_cell_stats_type_IsValid(int value);
const flex_cell_stats_type flex_cell_stats_type_MIN = FLCST_NOISE_INTERFERENCE;
const flex_cell_stats_type flex_cell_stats_type_MAX = FLCST_NOISE_INTERFERENCE;
const int flex_cell_stats_type_ARRAYSIZE = flex_cell_stats_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* flex_cell_stats_type_descriptor();
inline const ::std::string& flex_cell_stats_type_Name(flex_cell_stats_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    flex_cell_stats_type_descriptor(), value);
}
inline bool flex_cell_stats_type_Parse(
    const ::std::string& name, flex_cell_stats_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<flex_cell_stats_type>(
    flex_cell_stats_type_descriptor(), name, value);
}
enum flex_ue_stats_type {
  FLUST_BSR = 1,
  FLUST_PHR = 2,
  FLUST_RLC_BS = 4,
  FLUST_MAC_CE_BS = 8,
  FLUST_DL_CQI = 16,
  FLUST_PBS = 32,
  FLUST_UL_CQI = 64,
  FLUST_MAC_STATS = 128,
  FLUST_PDCP_STATS = 1024,
  FLUST_GTP_STATS = 2048,
  FLUST_S1AP_STATS = 4096,
  FLUST_RRC_MEASUREMENTS = 65536
};
bool flex_ue_stats_type_IsValid(int value);
const flex_ue_stats_type flex_ue_stats_type_MIN = FLUST_BSR;
const flex_ue_stats_type flex_ue_stats_type_MAX = FLUST_RRC_MEASUREMENTS;
const int flex_ue_stats_type_ARRAYSIZE = flex_ue_stats_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* flex_ue_stats_type_descriptor();
inline const ::std::string& flex_ue_stats_type_Name(flex_ue_stats_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    flex_ue_stats_type_descriptor(), value);
}
inline bool flex_ue_stats_type_Parse(
    const ::std::string& name, flex_ue_stats_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<flex_ue_stats_type>(
    flex_ue_stats_type_descriptor(), name, value);
}
// ===================================================================

class flex_complete_stats_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_complete_stats_request) */ {
 public:
  flex_complete_stats_request();
  virtual ~flex_complete_stats_request();

  flex_complete_stats_request(const flex_complete_stats_request& from);

  inline flex_complete_stats_request& operator=(const flex_complete_stats_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_complete_stats_request& default_instance();

  static inline const flex_complete_stats_request* internal_default_instance() {
    return reinterpret_cast<const flex_complete_stats_request*>(
               &_flex_complete_stats_request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(flex_complete_stats_request* other);

  // implements Message ----------------------------------------------

  inline flex_complete_stats_request* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_complete_stats_request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_complete_stats_request& from);
  void MergeFrom(const flex_complete_stats_request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_complete_stats_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.flex_cell_stats_type cell_reports = 5;
  int cell_reports_size() const;
  void clear_cell_reports();
  static const int kCellReportsFieldNumber = 5;
  ::protocol::flex_cell_stats_type cell_reports(int index) const;
  void set_cell_reports(int index, ::protocol::flex_cell_stats_type value);
  void add_cell_reports(::protocol::flex_cell_stats_type value);
  const ::google::protobuf::RepeatedField<int>& cell_reports() const;
  ::google::protobuf::RepeatedField<int>* mutable_cell_reports();

  // repeated .protocol.flex_ue_stats_type ue_reports = 6;
  int ue_reports_size() const;
  void clear_ue_reports();
  static const int kUeReportsFieldNumber = 6;
  ::protocol::flex_ue_stats_type ue_reports(int index) const;
  void set_ue_reports(int index, ::protocol::flex_ue_stats_type value);
  void add_ue_reports(::protocol::flex_ue_stats_type value);
  const ::google::protobuf::RepeatedField<int>& ue_reports() const;
  ::google::protobuf::RepeatedField<int>* mutable_ue_reports();

  // optional .protocol.flex_stats_report_freq report_frequency = 1;
  bool has_report_frequency() const;
  void clear_report_frequency();
  static const int kReportFrequencyFieldNumber = 1;
  ::protocol::flex_stats_report_freq report_frequency() const;
  void set_report_frequency(::protocol::flex_stats_report_freq value);

  // optional uint32 sf = 2;
  bool has_sf() const;
  void clear_sf();
  static const int kSfFieldNumber = 2;
  ::google::protobuf::uint32 sf() const;
  void set_sf(::google::protobuf::uint32 value);

  // optional uint32 cell_report_flags = 3;
  bool has_cell_report_flags() const;
  void clear_cell_report_flags();
  static const int kCellReportFlagsFieldNumber = 3;
  ::google::protobuf::uint32 cell_report_flags() const;
  void set_cell_report_flags(::google::protobuf::uint32 value);

  // optional uint32 ue_report_flags = 4;
  bool has_ue_report_flags() const;
  void clear_ue_report_flags();
  static const int kUeReportFlagsFieldNumber = 4;
  ::google::protobuf::uint32 ue_report_flags() const;
  void set_ue_report_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_complete_stats_request)
 private:
  void set_has_report_frequency();
  void clear_has_report_frequency();
  void set_has_sf();
  void clear_has_sf();
  void set_has_cell_report_flags();
  void clear_has_cell_report_flags();
  void set_has_ue_report_flags();
  void clear_has_ue_report_flags();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> cell_reports_;
  ::google::protobuf::RepeatedField<int> ue_reports_;
  int report_frequency_;
  ::google::protobuf::uint32 sf_;
  ::google::protobuf::uint32 cell_report_flags_;
  ::google::protobuf::uint32 ue_report_flags_;
  friend struct protobuf_stats_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_cell_stats_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_cell_stats_request) */ {
 public:
  flex_cell_stats_request();
  virtual ~flex_cell_stats_request();

  flex_cell_stats_request(const flex_cell_stats_request& from);

  inline flex_cell_stats_request& operator=(const flex_cell_stats_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_cell_stats_request& default_instance();

  static inline const flex_cell_stats_request* internal_default_instance() {
    return reinterpret_cast<const flex_cell_stats_request*>(
               &_flex_cell_stats_request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(flex_cell_stats_request* other);

  // implements Message ----------------------------------------------

  inline flex_cell_stats_request* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_cell_stats_request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_cell_stats_request& from);
  void MergeFrom(const flex_cell_stats_request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_cell_stats_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 cell = 1;
  int cell_size() const;
  void clear_cell();
  static const int kCellFieldNumber = 1;
  ::google::protobuf::uint32 cell(int index) const;
  void set_cell(int index, ::google::protobuf::uint32 value);
  void add_cell(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cell() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cell();

  // optional uint32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_cell_stats_request)
 private:
  void set_has_flags();
  void clear_has_flags();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cell_;
  ::google::protobuf::uint32 flags_;
  friend struct protobuf_stats_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_ue_stats_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_ue_stats_request) */ {
 public:
  flex_ue_stats_request();
  virtual ~flex_ue_stats_request();

  flex_ue_stats_request(const flex_ue_stats_request& from);

  inline flex_ue_stats_request& operator=(const flex_ue_stats_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_ue_stats_request& default_instance();

  static inline const flex_ue_stats_request* internal_default_instance() {
    return reinterpret_cast<const flex_ue_stats_request*>(
               &_flex_ue_stats_request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(flex_ue_stats_request* other);

  // implements Message ----------------------------------------------

  inline flex_ue_stats_request* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_ue_stats_request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_ue_stats_request& from);
  void MergeFrom(const flex_ue_stats_request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_ue_stats_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 rnti = 1;
  int rnti_size() const;
  void clear_rnti();
  static const int kRntiFieldNumber = 1;
  ::google::protobuf::uint32 rnti(int index) const;
  void set_rnti(int index, ::google::protobuf::uint32 value);
  void add_rnti(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rnti() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rnti();

  // optional uint32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_ue_stats_request)
 private:
  void set_has_flags();
  void clear_has_flags();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rnti_;
  ::google::protobuf::uint32 flags_;
  friend struct protobuf_stats_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_cell_stats_report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_cell_stats_report) */ {
 public:
  flex_cell_stats_report();
  virtual ~flex_cell_stats_report();

  flex_cell_stats_report(const flex_cell_stats_report& from);

  inline flex_cell_stats_report& operator=(const flex_cell_stats_report& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_cell_stats_report& default_instance();

  static inline const flex_cell_stats_report* internal_default_instance() {
    return reinterpret_cast<const flex_cell_stats_report*>(
               &_flex_cell_stats_report_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(flex_cell_stats_report* other);

  // implements Message ----------------------------------------------

  inline flex_cell_stats_report* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_cell_stats_report* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_cell_stats_report& from);
  void MergeFrom(const flex_cell_stats_report& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_cell_stats_report* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.flex_noise_interference_report noise_inter_report = 3;
  bool has_noise_inter_report() const;
  void clear_noise_inter_report();
  static const int kNoiseInterReportFieldNumber = 3;
  const ::protocol::flex_noise_interference_report& noise_inter_report() const;
  ::protocol::flex_noise_interference_report* mutable_noise_inter_report();
  ::protocol::flex_noise_interference_report* release_noise_inter_report();
  void set_allocated_noise_inter_report(::protocol::flex_noise_interference_report* noise_inter_report);

  // optional uint32 carrier_index = 1;
  bool has_carrier_index() const;
  void clear_carrier_index();
  static const int kCarrierIndexFieldNumber = 1;
  ::google::protobuf::uint32 carrier_index() const;
  void set_carrier_index(::google::protobuf::uint32 value);

  // optional uint32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_cell_stats_report)
 private:
  void set_has_carrier_index();
  void clear_has_carrier_index();
  void set_has_flags();
  void clear_has_flags();
  void set_has_noise_inter_report();
  void clear_has_noise_inter_report();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::protocol::flex_noise_interference_report* noise_inter_report_;
  ::google::protobuf::uint32 carrier_index_;
  ::google::protobuf::uint32 flags_;
  friend struct protobuf_stats_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_ue_stats_report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_ue_stats_report) */ {
 public:
  flex_ue_stats_report();
  virtual ~flex_ue_stats_report();

  flex_ue_stats_report(const flex_ue_stats_report& from);

  inline flex_ue_stats_report& operator=(const flex_ue_stats_report& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_ue_stats_report& default_instance();

  static inline const flex_ue_stats_report* internal_default_instance() {
    return reinterpret_cast<const flex_ue_stats_report*>(
               &_flex_ue_stats_report_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(flex_ue_stats_report* other);

  // implements Message ----------------------------------------------

  inline flex_ue_stats_report* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_ue_stats_report* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_ue_stats_report& from);
  void MergeFrom(const flex_ue_stats_report& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_ue_stats_report* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 bsr = 3;
  int bsr_size() const;
  void clear_bsr();
  static const int kBsrFieldNumber = 3;
  ::google::protobuf::uint32 bsr(int index) const;
  void set_bsr(int index, ::google::protobuf::uint32 value);
  void add_bsr(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bsr() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bsr();

  // repeated .protocol.flex_rlc_bsr rlc_report = 5;
  int rlc_report_size() const;
  void clear_rlc_report();
  static const int kRlcReportFieldNumber = 5;
  const ::protocol::flex_rlc_bsr& rlc_report(int index) const;
  ::protocol::flex_rlc_bsr* mutable_rlc_report(int index);
  ::protocol::flex_rlc_bsr* add_rlc_report();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_rlc_bsr >*
      mutable_rlc_report();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_rlc_bsr >&
      rlc_report() const;

  // repeated .protocol.flex_gtp_stats gtp_stats = 13;
  int gtp_stats_size() const;
  void clear_gtp_stats();
  static const int kGtpStatsFieldNumber = 13;
  const ::protocol::flex_gtp_stats& gtp_stats(int index) const;
  ::protocol::flex_gtp_stats* mutable_gtp_stats(int index);
  ::protocol::flex_gtp_stats* add_gtp_stats();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_gtp_stats >*
      mutable_gtp_stats();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_gtp_stats >&
      gtp_stats() const;

  // optional .protocol.flex_dl_cqi_report dl_cqi_report = 7;
  bool has_dl_cqi_report() const;
  void clear_dl_cqi_report();
  static const int kDlCqiReportFieldNumber = 7;
  const ::protocol::flex_dl_cqi_report& dl_cqi_report() const;
  ::protocol::flex_dl_cqi_report* mutable_dl_cqi_report();
  ::protocol::flex_dl_cqi_report* release_dl_cqi_report();
  void set_allocated_dl_cqi_report(::protocol::flex_dl_cqi_report* dl_cqi_report);

  // optional .protocol.flex_paging_buffer_report pbr = 8;
  bool has_pbr() const;
  void clear_pbr();
  static const int kPbrFieldNumber = 8;
  const ::protocol::flex_paging_buffer_report& pbr() const;
  ::protocol::flex_paging_buffer_report* mutable_pbr();
  ::protocol::flex_paging_buffer_report* release_pbr();
  void set_allocated_pbr(::protocol::flex_paging_buffer_report* pbr);

  // optional .protocol.flex_ul_cqi_report ul_cqi_report = 9;
  bool has_ul_cqi_report() const;
  void clear_ul_cqi_report();
  static const int kUlCqiReportFieldNumber = 9;
  const ::protocol::flex_ul_cqi_report& ul_cqi_report() const;
  ::protocol::flex_ul_cqi_report* mutable_ul_cqi_report();
  ::protocol::flex_ul_cqi_report* release_ul_cqi_report();
  void set_allocated_ul_cqi_report(::protocol::flex_ul_cqi_report* ul_cqi_report);

  // optional .protocol.flex_rrc_measurements rrc_measurements = 10;
  bool has_rrc_measurements() const;
  void clear_rrc_measurements();
  static const int kRrcMeasurementsFieldNumber = 10;
  const ::protocol::flex_rrc_measurements& rrc_measurements() const;
  ::protocol::flex_rrc_measurements* mutable_rrc_measurements();
  ::protocol::flex_rrc_measurements* release_rrc_measurements();
  void set_allocated_rrc_measurements(::protocol::flex_rrc_measurements* rrc_measurements);

  // optional .protocol.flex_pdcp_stats pdcp_stats = 11;
  bool has_pdcp_stats() const;
  void clear_pdcp_stats();
  static const int kPdcpStatsFieldNumber = 11;
  const ::protocol::flex_pdcp_stats& pdcp_stats() const;
  ::protocol::flex_pdcp_stats* mutable_pdcp_stats();
  ::protocol::flex_pdcp_stats* release_pdcp_stats();
  void set_allocated_pdcp_stats(::protocol::flex_pdcp_stats* pdcp_stats);

  // optional .protocol.flex_mac_stats mac_stats = 12;
  bool has_mac_stats() const;
  void clear_mac_stats();
  static const int kMacStatsFieldNumber = 12;
  const ::protocol::flex_mac_stats& mac_stats() const;
  ::protocol::flex_mac_stats* mutable_mac_stats();
  ::protocol::flex_mac_stats* release_mac_stats();
  void set_allocated_mac_stats(::protocol::flex_mac_stats* mac_stats);

  // optional .protocol.flex_s1ap_ue s1ap_stats = 14;
  bool has_s1ap_stats() const;
  void clear_s1ap_stats();
  static const int kS1ApStatsFieldNumber = 14;
  const ::protocol::flex_s1ap_ue& s1ap_stats() const;
  ::protocol::flex_s1ap_ue* mutable_s1ap_stats();
  ::protocol::flex_s1ap_ue* release_s1ap_stats();
  void set_allocated_s1ap_stats(::protocol::flex_s1ap_ue* s1ap_stats);

  // optional uint32 rnti = 1;
  bool has_rnti() const;
  void clear_rnti();
  static const int kRntiFieldNumber = 1;
  ::google::protobuf::uint32 rnti() const;
  void set_rnti(::google::protobuf::uint32 value);

  // optional uint32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // optional uint32 phr = 4;
  bool has_phr() const;
  void clear_phr();
  static const int kPhrFieldNumber = 4;
  ::google::protobuf::uint32 phr() const;
  void set_phr(::google::protobuf::uint32 value);

  // optional uint32 pending_mac_ces = 6;
  bool has_pending_mac_ces() const;
  void clear_pending_mac_ces();
  static const int kPendingMacCesFieldNumber = 6;
  ::google::protobuf::uint32 pending_mac_ces() const;
  void set_pending_mac_ces(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_ue_stats_report)
 private:
  void set_has_rnti();
  void clear_has_rnti();
  void set_has_flags();
  void clear_has_flags();
  void set_has_phr();
  void clear_has_phr();
  void set_has_pending_mac_ces();
  void clear_has_pending_mac_ces();
  void set_has_dl_cqi_report();
  void clear_has_dl_cqi_report();
  void set_has_pbr();
  void clear_has_pbr();
  void set_has_ul_cqi_report();
  void clear_has_ul_cqi_report();
  void set_has_rrc_measurements();
  void clear_has_rrc_measurements();
  void set_has_pdcp_stats();
  void clear_has_pdcp_stats();
  void set_has_mac_stats();
  void clear_has_mac_stats();
  void set_has_s1ap_stats();
  void clear_has_s1ap_stats();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bsr_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_rlc_bsr > rlc_report_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_gtp_stats > gtp_stats_;
  ::protocol::flex_dl_cqi_report* dl_cqi_report_;
  ::protocol::flex_paging_buffer_report* pbr_;
  ::protocol::flex_ul_cqi_report* ul_cqi_report_;
  ::protocol::flex_rrc_measurements* rrc_measurements_;
  ::protocol::flex_pdcp_stats* pdcp_stats_;
  ::protocol::flex_mac_stats* mac_stats_;
  ::protocol::flex_s1ap_ue* s1ap_stats_;
  ::google::protobuf::uint32 rnti_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 phr_;
  ::google::protobuf::uint32 pending_mac_ces_;
  friend struct protobuf_stats_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_complete_stats_request_repeated : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_complete_stats_request_repeated) */ {
 public:
  flex_complete_stats_request_repeated();
  virtual ~flex_complete_stats_request_repeated();

  flex_complete_stats_request_repeated(const flex_complete_stats_request_repeated& from);

  inline flex_complete_stats_request_repeated& operator=(const flex_complete_stats_request_repeated& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_complete_stats_request_repeated& default_instance();

  static inline const flex_complete_stats_request_repeated* internal_default_instance() {
    return reinterpret_cast<const flex_complete_stats_request_repeated*>(
               &_flex_complete_stats_request_repeated_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(flex_complete_stats_request_repeated* other);

  // implements Message ----------------------------------------------

  inline flex_complete_stats_request_repeated* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_complete_stats_request_repeated* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_complete_stats_request_repeated& from);
  void MergeFrom(const flex_complete_stats_request_repeated& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_complete_stats_request_repeated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.flex_complete_stats_request reports = 1;
  int reports_size() const;
  void clear_reports();
  static const int kReportsFieldNumber = 1;
  const ::protocol::flex_complete_stats_request& reports(int index) const;
  ::protocol::flex_complete_stats_request* mutable_reports(int index);
  ::protocol::flex_complete_stats_request* add_reports();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_complete_stats_request >*
      mutable_reports();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_complete_stats_request >&
      reports() const;

  // @@protoc_insertion_point(class_scope:protocol.flex_complete_stats_request_repeated)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_complete_stats_request > reports_;
  friend struct protobuf_stats_5fmessages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// flex_complete_stats_request

// optional .protocol.flex_stats_report_freq report_frequency = 1;
inline bool flex_complete_stats_request::has_report_frequency() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_complete_stats_request::set_has_report_frequency() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_complete_stats_request::clear_has_report_frequency() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_complete_stats_request::clear_report_frequency() {
  report_frequency_ = 0;
  clear_has_report_frequency();
}
inline ::protocol::flex_stats_report_freq flex_complete_stats_request::report_frequency() const {
  // @@protoc_insertion_point(field_get:protocol.flex_complete_stats_request.report_frequency)
  return static_cast< ::protocol::flex_stats_report_freq >(report_frequency_);
}
inline void flex_complete_stats_request::set_report_frequency(::protocol::flex_stats_report_freq value) {
  assert(::protocol::flex_stats_report_freq_IsValid(value));
  set_has_report_frequency();
  report_frequency_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_complete_stats_request.report_frequency)
}

// optional uint32 sf = 2;
inline bool flex_complete_stats_request::has_sf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_complete_stats_request::set_has_sf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_complete_stats_request::clear_has_sf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_complete_stats_request::clear_sf() {
  sf_ = 0u;
  clear_has_sf();
}
inline ::google::protobuf::uint32 flex_complete_stats_request::sf() const {
  // @@protoc_insertion_point(field_get:protocol.flex_complete_stats_request.sf)
  return sf_;
}
inline void flex_complete_stats_request::set_sf(::google::protobuf::uint32 value) {
  set_has_sf();
  sf_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_complete_stats_request.sf)
}

// optional uint32 cell_report_flags = 3;
inline bool flex_complete_stats_request::has_cell_report_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_complete_stats_request::set_has_cell_report_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_complete_stats_request::clear_has_cell_report_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_complete_stats_request::clear_cell_report_flags() {
  cell_report_flags_ = 0u;
  clear_has_cell_report_flags();
}
inline ::google::protobuf::uint32 flex_complete_stats_request::cell_report_flags() const {
  // @@protoc_insertion_point(field_get:protocol.flex_complete_stats_request.cell_report_flags)
  return cell_report_flags_;
}
inline void flex_complete_stats_request::set_cell_report_flags(::google::protobuf::uint32 value) {
  set_has_cell_report_flags();
  cell_report_flags_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_complete_stats_request.cell_report_flags)
}

// optional uint32 ue_report_flags = 4;
inline bool flex_complete_stats_request::has_ue_report_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_complete_stats_request::set_has_ue_report_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_complete_stats_request::clear_has_ue_report_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_complete_stats_request::clear_ue_report_flags() {
  ue_report_flags_ = 0u;
  clear_has_ue_report_flags();
}
inline ::google::protobuf::uint32 flex_complete_stats_request::ue_report_flags() const {
  // @@protoc_insertion_point(field_get:protocol.flex_complete_stats_request.ue_report_flags)
  return ue_report_flags_;
}
inline void flex_complete_stats_request::set_ue_report_flags(::google::protobuf::uint32 value) {
  set_has_ue_report_flags();
  ue_report_flags_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_complete_stats_request.ue_report_flags)
}

// repeated .protocol.flex_cell_stats_type cell_reports = 5;
inline int flex_complete_stats_request::cell_reports_size() const {
  return cell_reports_.size();
}
inline void flex_complete_stats_request::clear_cell_reports() {
  cell_reports_.Clear();
}
inline ::protocol::flex_cell_stats_type flex_complete_stats_request::cell_reports(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_complete_stats_request.cell_reports)
  return static_cast< ::protocol::flex_cell_stats_type >(cell_reports_.Get(index));
}
inline void flex_complete_stats_request::set_cell_reports(int index, ::protocol::flex_cell_stats_type value) {
  assert(::protocol::flex_cell_stats_type_IsValid(value));
  cell_reports_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_complete_stats_request.cell_reports)
}
inline void flex_complete_stats_request::add_cell_reports(::protocol::flex_cell_stats_type value) {
  assert(::protocol::flex_cell_stats_type_IsValid(value));
  cell_reports_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_complete_stats_request.cell_reports)
}
inline const ::google::protobuf::RepeatedField<int>&
flex_complete_stats_request::cell_reports() const {
  // @@protoc_insertion_point(field_list:protocol.flex_complete_stats_request.cell_reports)
  return cell_reports_;
}
inline ::google::protobuf::RepeatedField<int>*
flex_complete_stats_request::mutable_cell_reports() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_complete_stats_request.cell_reports)
  return &cell_reports_;
}

// repeated .protocol.flex_ue_stats_type ue_reports = 6;
inline int flex_complete_stats_request::ue_reports_size() const {
  return ue_reports_.size();
}
inline void flex_complete_stats_request::clear_ue_reports() {
  ue_reports_.Clear();
}
inline ::protocol::flex_ue_stats_type flex_complete_stats_request::ue_reports(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_complete_stats_request.ue_reports)
  return static_cast< ::protocol::flex_ue_stats_type >(ue_reports_.Get(index));
}
inline void flex_complete_stats_request::set_ue_reports(int index, ::protocol::flex_ue_stats_type value) {
  assert(::protocol::flex_ue_stats_type_IsValid(value));
  ue_reports_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_complete_stats_request.ue_reports)
}
inline void flex_complete_stats_request::add_ue_reports(::protocol::flex_ue_stats_type value) {
  assert(::protocol::flex_ue_stats_type_IsValid(value));
  ue_reports_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_complete_stats_request.ue_reports)
}
inline const ::google::protobuf::RepeatedField<int>&
flex_complete_stats_request::ue_reports() const {
  // @@protoc_insertion_point(field_list:protocol.flex_complete_stats_request.ue_reports)
  return ue_reports_;
}
inline ::google::protobuf::RepeatedField<int>*
flex_complete_stats_request::mutable_ue_reports() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_complete_stats_request.ue_reports)
  return &ue_reports_;
}

// -------------------------------------------------------------------

// flex_cell_stats_request

// repeated uint32 cell = 1;
inline int flex_cell_stats_request::cell_size() const {
  return cell_.size();
}
inline void flex_cell_stats_request::clear_cell() {
  cell_.Clear();
}
inline ::google::protobuf::uint32 flex_cell_stats_request::cell(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_cell_stats_request.cell)
  return cell_.Get(index);
}
inline void flex_cell_stats_request::set_cell(int index, ::google::protobuf::uint32 value) {
  cell_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_cell_stats_request.cell)
}
inline void flex_cell_stats_request::add_cell(::google::protobuf::uint32 value) {
  cell_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_cell_stats_request.cell)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_cell_stats_request::cell() const {
  // @@protoc_insertion_point(field_list:protocol.flex_cell_stats_request.cell)
  return cell_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_cell_stats_request::mutable_cell() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_cell_stats_request.cell)
  return &cell_;
}

// optional uint32 flags = 2;
inline bool flex_cell_stats_request::has_flags() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_cell_stats_request::set_has_flags() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_cell_stats_request::clear_has_flags() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_cell_stats_request::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 flex_cell_stats_request::flags() const {
  // @@protoc_insertion_point(field_get:protocol.flex_cell_stats_request.flags)
  return flags_;
}
inline void flex_cell_stats_request::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_cell_stats_request.flags)
}

// -------------------------------------------------------------------

// flex_ue_stats_request

// repeated uint32 rnti = 1;
inline int flex_ue_stats_request::rnti_size() const {
  return rnti_.size();
}
inline void flex_ue_stats_request::clear_rnti() {
  rnti_.Clear();
}
inline ::google::protobuf::uint32 flex_ue_stats_request::rnti(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_request.rnti)
  return rnti_.Get(index);
}
inline void flex_ue_stats_request::set_rnti(int index, ::google::protobuf::uint32 value) {
  rnti_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_ue_stats_request.rnti)
}
inline void flex_ue_stats_request::add_rnti(::google::protobuf::uint32 value) {
  rnti_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_ue_stats_request.rnti)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_ue_stats_request::rnti() const {
  // @@protoc_insertion_point(field_list:protocol.flex_ue_stats_request.rnti)
  return rnti_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_ue_stats_request::mutable_rnti() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_ue_stats_request.rnti)
  return &rnti_;
}

// optional uint32 flags = 2;
inline bool flex_ue_stats_request::has_flags() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_ue_stats_request::set_has_flags() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_ue_stats_request::clear_has_flags() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_ue_stats_request::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 flex_ue_stats_request::flags() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_request.flags)
  return flags_;
}
inline void flex_ue_stats_request::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_ue_stats_request.flags)
}

// -------------------------------------------------------------------

// flex_cell_stats_report

// optional uint32 carrier_index = 1;
inline bool flex_cell_stats_report::has_carrier_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_cell_stats_report::set_has_carrier_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_cell_stats_report::clear_has_carrier_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_cell_stats_report::clear_carrier_index() {
  carrier_index_ = 0u;
  clear_has_carrier_index();
}
inline ::google::protobuf::uint32 flex_cell_stats_report::carrier_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_cell_stats_report.carrier_index)
  return carrier_index_;
}
inline void flex_cell_stats_report::set_carrier_index(::google::protobuf::uint32 value) {
  set_has_carrier_index();
  carrier_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_cell_stats_report.carrier_index)
}

// optional uint32 flags = 2;
inline bool flex_cell_stats_report::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_cell_stats_report::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_cell_stats_report::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_cell_stats_report::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 flex_cell_stats_report::flags() const {
  // @@protoc_insertion_point(field_get:protocol.flex_cell_stats_report.flags)
  return flags_;
}
inline void flex_cell_stats_report::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_cell_stats_report.flags)
}

// optional .protocol.flex_noise_interference_report noise_inter_report = 3;
inline bool flex_cell_stats_report::has_noise_inter_report() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_cell_stats_report::set_has_noise_inter_report() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_cell_stats_report::clear_has_noise_inter_report() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_cell_stats_report::clear_noise_inter_report() {
  if (noise_inter_report_ != NULL) noise_inter_report_->::protocol::flex_noise_interference_report::Clear();
  clear_has_noise_inter_report();
}
inline const ::protocol::flex_noise_interference_report& flex_cell_stats_report::noise_inter_report() const {
  // @@protoc_insertion_point(field_get:protocol.flex_cell_stats_report.noise_inter_report)
  return noise_inter_report_ != NULL ? *noise_inter_report_
                         : *::protocol::flex_noise_interference_report::internal_default_instance();
}
inline ::protocol::flex_noise_interference_report* flex_cell_stats_report::mutable_noise_inter_report() {
  set_has_noise_inter_report();
  if (noise_inter_report_ == NULL) {
    noise_inter_report_ = new ::protocol::flex_noise_interference_report;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_cell_stats_report.noise_inter_report)
  return noise_inter_report_;
}
inline ::protocol::flex_noise_interference_report* flex_cell_stats_report::release_noise_inter_report() {
  // @@protoc_insertion_point(field_release:protocol.flex_cell_stats_report.noise_inter_report)
  clear_has_noise_inter_report();
  ::protocol::flex_noise_interference_report* temp = noise_inter_report_;
  noise_inter_report_ = NULL;
  return temp;
}
inline void flex_cell_stats_report::set_allocated_noise_inter_report(::protocol::flex_noise_interference_report* noise_inter_report) {
  delete noise_inter_report_;
  noise_inter_report_ = noise_inter_report;
  if (noise_inter_report) {
    set_has_noise_inter_report();
  } else {
    clear_has_noise_inter_report();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_cell_stats_report.noise_inter_report)
}

// -------------------------------------------------------------------

// flex_ue_stats_report

// optional uint32 rnti = 1;
inline bool flex_ue_stats_report::has_rnti() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void flex_ue_stats_report::set_has_rnti() {
  _has_bits_[0] |= 0x00000080u;
}
inline void flex_ue_stats_report::clear_has_rnti() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void flex_ue_stats_report::clear_rnti() {
  rnti_ = 0u;
  clear_has_rnti();
}
inline ::google::protobuf::uint32 flex_ue_stats_report::rnti() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.rnti)
  return rnti_;
}
inline void flex_ue_stats_report::set_rnti(::google::protobuf::uint32 value) {
  set_has_rnti();
  rnti_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_ue_stats_report.rnti)
}

// optional uint32 flags = 2;
inline bool flex_ue_stats_report::has_flags() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void flex_ue_stats_report::set_has_flags() {
  _has_bits_[0] |= 0x00000100u;
}
inline void flex_ue_stats_report::clear_has_flags() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void flex_ue_stats_report::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 flex_ue_stats_report::flags() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.flags)
  return flags_;
}
inline void flex_ue_stats_report::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_ue_stats_report.flags)
}

// repeated uint32 bsr = 3;
inline int flex_ue_stats_report::bsr_size() const {
  return bsr_.size();
}
inline void flex_ue_stats_report::clear_bsr() {
  bsr_.Clear();
}
inline ::google::protobuf::uint32 flex_ue_stats_report::bsr(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.bsr)
  return bsr_.Get(index);
}
inline void flex_ue_stats_report::set_bsr(int index, ::google::protobuf::uint32 value) {
  bsr_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_ue_stats_report.bsr)
}
inline void flex_ue_stats_report::add_bsr(::google::protobuf::uint32 value) {
  bsr_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_ue_stats_report.bsr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_ue_stats_report::bsr() const {
  // @@protoc_insertion_point(field_list:protocol.flex_ue_stats_report.bsr)
  return bsr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_ue_stats_report::mutable_bsr() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_ue_stats_report.bsr)
  return &bsr_;
}

// optional uint32 phr = 4;
inline bool flex_ue_stats_report::has_phr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void flex_ue_stats_report::set_has_phr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void flex_ue_stats_report::clear_has_phr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void flex_ue_stats_report::clear_phr() {
  phr_ = 0u;
  clear_has_phr();
}
inline ::google::protobuf::uint32 flex_ue_stats_report::phr() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.phr)
  return phr_;
}
inline void flex_ue_stats_report::set_phr(::google::protobuf::uint32 value) {
  set_has_phr();
  phr_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_ue_stats_report.phr)
}

// repeated .protocol.flex_rlc_bsr rlc_report = 5;
inline int flex_ue_stats_report::rlc_report_size() const {
  return rlc_report_.size();
}
inline void flex_ue_stats_report::clear_rlc_report() {
  rlc_report_.Clear();
}
inline const ::protocol::flex_rlc_bsr& flex_ue_stats_report::rlc_report(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.rlc_report)
  return rlc_report_.Get(index);
}
inline ::protocol::flex_rlc_bsr* flex_ue_stats_report::mutable_rlc_report(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_ue_stats_report.rlc_report)
  return rlc_report_.Mutable(index);
}
inline ::protocol::flex_rlc_bsr* flex_ue_stats_report::add_rlc_report() {
  // @@protoc_insertion_point(field_add:protocol.flex_ue_stats_report.rlc_report)
  return rlc_report_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_rlc_bsr >*
flex_ue_stats_report::mutable_rlc_report() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_ue_stats_report.rlc_report)
  return &rlc_report_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_rlc_bsr >&
flex_ue_stats_report::rlc_report() const {
  // @@protoc_insertion_point(field_list:protocol.flex_ue_stats_report.rlc_report)
  return rlc_report_;
}

// optional uint32 pending_mac_ces = 6;
inline bool flex_ue_stats_report::has_pending_mac_ces() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void flex_ue_stats_report::set_has_pending_mac_ces() {
  _has_bits_[0] |= 0x00000400u;
}
inline void flex_ue_stats_report::clear_has_pending_mac_ces() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void flex_ue_stats_report::clear_pending_mac_ces() {
  pending_mac_ces_ = 0u;
  clear_has_pending_mac_ces();
}
inline ::google::protobuf::uint32 flex_ue_stats_report::pending_mac_ces() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.pending_mac_ces)
  return pending_mac_ces_;
}
inline void flex_ue_stats_report::set_pending_mac_ces(::google::protobuf::uint32 value) {
  set_has_pending_mac_ces();
  pending_mac_ces_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_ue_stats_report.pending_mac_ces)
}

// optional .protocol.flex_dl_cqi_report dl_cqi_report = 7;
inline bool flex_ue_stats_report::has_dl_cqi_report() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_ue_stats_report::set_has_dl_cqi_report() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_ue_stats_report::clear_has_dl_cqi_report() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_ue_stats_report::clear_dl_cqi_report() {
  if (dl_cqi_report_ != NULL) dl_cqi_report_->::protocol::flex_dl_cqi_report::Clear();
  clear_has_dl_cqi_report();
}
inline const ::protocol::flex_dl_cqi_report& flex_ue_stats_report::dl_cqi_report() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.dl_cqi_report)
  return dl_cqi_report_ != NULL ? *dl_cqi_report_
                         : *::protocol::flex_dl_cqi_report::internal_default_instance();
}
inline ::protocol::flex_dl_cqi_report* flex_ue_stats_report::mutable_dl_cqi_report() {
  set_has_dl_cqi_report();
  if (dl_cqi_report_ == NULL) {
    dl_cqi_report_ = new ::protocol::flex_dl_cqi_report;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_ue_stats_report.dl_cqi_report)
  return dl_cqi_report_;
}
inline ::protocol::flex_dl_cqi_report* flex_ue_stats_report::release_dl_cqi_report() {
  // @@protoc_insertion_point(field_release:protocol.flex_ue_stats_report.dl_cqi_report)
  clear_has_dl_cqi_report();
  ::protocol::flex_dl_cqi_report* temp = dl_cqi_report_;
  dl_cqi_report_ = NULL;
  return temp;
}
inline void flex_ue_stats_report::set_allocated_dl_cqi_report(::protocol::flex_dl_cqi_report* dl_cqi_report) {
  delete dl_cqi_report_;
  dl_cqi_report_ = dl_cqi_report;
  if (dl_cqi_report) {
    set_has_dl_cqi_report();
  } else {
    clear_has_dl_cqi_report();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_ue_stats_report.dl_cqi_report)
}

// optional .protocol.flex_paging_buffer_report pbr = 8;
inline bool flex_ue_stats_report::has_pbr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_ue_stats_report::set_has_pbr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_ue_stats_report::clear_has_pbr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_ue_stats_report::clear_pbr() {
  if (pbr_ != NULL) pbr_->::protocol::flex_paging_buffer_report::Clear();
  clear_has_pbr();
}
inline const ::protocol::flex_paging_buffer_report& flex_ue_stats_report::pbr() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.pbr)
  return pbr_ != NULL ? *pbr_
                         : *::protocol::flex_paging_buffer_report::internal_default_instance();
}
inline ::protocol::flex_paging_buffer_report* flex_ue_stats_report::mutable_pbr() {
  set_has_pbr();
  if (pbr_ == NULL) {
    pbr_ = new ::protocol::flex_paging_buffer_report;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_ue_stats_report.pbr)
  return pbr_;
}
inline ::protocol::flex_paging_buffer_report* flex_ue_stats_report::release_pbr() {
  // @@protoc_insertion_point(field_release:protocol.flex_ue_stats_report.pbr)
  clear_has_pbr();
  ::protocol::flex_paging_buffer_report* temp = pbr_;
  pbr_ = NULL;
  return temp;
}
inline void flex_ue_stats_report::set_allocated_pbr(::protocol::flex_paging_buffer_report* pbr) {
  delete pbr_;
  pbr_ = pbr;
  if (pbr) {
    set_has_pbr();
  } else {
    clear_has_pbr();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_ue_stats_report.pbr)
}

// optional .protocol.flex_ul_cqi_report ul_cqi_report = 9;
inline bool flex_ue_stats_report::has_ul_cqi_report() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_ue_stats_report::set_has_ul_cqi_report() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_ue_stats_report::clear_has_ul_cqi_report() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_ue_stats_report::clear_ul_cqi_report() {
  if (ul_cqi_report_ != NULL) ul_cqi_report_->::protocol::flex_ul_cqi_report::Clear();
  clear_has_ul_cqi_report();
}
inline const ::protocol::flex_ul_cqi_report& flex_ue_stats_report::ul_cqi_report() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.ul_cqi_report)
  return ul_cqi_report_ != NULL ? *ul_cqi_report_
                         : *::protocol::flex_ul_cqi_report::internal_default_instance();
}
inline ::protocol::flex_ul_cqi_report* flex_ue_stats_report::mutable_ul_cqi_report() {
  set_has_ul_cqi_report();
  if (ul_cqi_report_ == NULL) {
    ul_cqi_report_ = new ::protocol::flex_ul_cqi_report;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_ue_stats_report.ul_cqi_report)
  return ul_cqi_report_;
}
inline ::protocol::flex_ul_cqi_report* flex_ue_stats_report::release_ul_cqi_report() {
  // @@protoc_insertion_point(field_release:protocol.flex_ue_stats_report.ul_cqi_report)
  clear_has_ul_cqi_report();
  ::protocol::flex_ul_cqi_report* temp = ul_cqi_report_;
  ul_cqi_report_ = NULL;
  return temp;
}
inline void flex_ue_stats_report::set_allocated_ul_cqi_report(::protocol::flex_ul_cqi_report* ul_cqi_report) {
  delete ul_cqi_report_;
  ul_cqi_report_ = ul_cqi_report;
  if (ul_cqi_report) {
    set_has_ul_cqi_report();
  } else {
    clear_has_ul_cqi_report();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_ue_stats_report.ul_cqi_report)
}

// optional .protocol.flex_rrc_measurements rrc_measurements = 10;
inline bool flex_ue_stats_report::has_rrc_measurements() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_ue_stats_report::set_has_rrc_measurements() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_ue_stats_report::clear_has_rrc_measurements() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_ue_stats_report::clear_rrc_measurements() {
  if (rrc_measurements_ != NULL) rrc_measurements_->::protocol::flex_rrc_measurements::Clear();
  clear_has_rrc_measurements();
}
inline const ::protocol::flex_rrc_measurements& flex_ue_stats_report::rrc_measurements() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.rrc_measurements)
  return rrc_measurements_ != NULL ? *rrc_measurements_
                         : *::protocol::flex_rrc_measurements::internal_default_instance();
}
inline ::protocol::flex_rrc_measurements* flex_ue_stats_report::mutable_rrc_measurements() {
  set_has_rrc_measurements();
  if (rrc_measurements_ == NULL) {
    rrc_measurements_ = new ::protocol::flex_rrc_measurements;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_ue_stats_report.rrc_measurements)
  return rrc_measurements_;
}
inline ::protocol::flex_rrc_measurements* flex_ue_stats_report::release_rrc_measurements() {
  // @@protoc_insertion_point(field_release:protocol.flex_ue_stats_report.rrc_measurements)
  clear_has_rrc_measurements();
  ::protocol::flex_rrc_measurements* temp = rrc_measurements_;
  rrc_measurements_ = NULL;
  return temp;
}
inline void flex_ue_stats_report::set_allocated_rrc_measurements(::protocol::flex_rrc_measurements* rrc_measurements) {
  delete rrc_measurements_;
  rrc_measurements_ = rrc_measurements;
  if (rrc_measurements) {
    set_has_rrc_measurements();
  } else {
    clear_has_rrc_measurements();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_ue_stats_report.rrc_measurements)
}

// optional .protocol.flex_pdcp_stats pdcp_stats = 11;
inline bool flex_ue_stats_report::has_pdcp_stats() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void flex_ue_stats_report::set_has_pdcp_stats() {
  _has_bits_[0] |= 0x00000010u;
}
inline void flex_ue_stats_report::clear_has_pdcp_stats() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void flex_ue_stats_report::clear_pdcp_stats() {
  if (pdcp_stats_ != NULL) pdcp_stats_->::protocol::flex_pdcp_stats::Clear();
  clear_has_pdcp_stats();
}
inline const ::protocol::flex_pdcp_stats& flex_ue_stats_report::pdcp_stats() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.pdcp_stats)
  return pdcp_stats_ != NULL ? *pdcp_stats_
                         : *::protocol::flex_pdcp_stats::internal_default_instance();
}
inline ::protocol::flex_pdcp_stats* flex_ue_stats_report::mutable_pdcp_stats() {
  set_has_pdcp_stats();
  if (pdcp_stats_ == NULL) {
    pdcp_stats_ = new ::protocol::flex_pdcp_stats;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_ue_stats_report.pdcp_stats)
  return pdcp_stats_;
}
inline ::protocol::flex_pdcp_stats* flex_ue_stats_report::release_pdcp_stats() {
  // @@protoc_insertion_point(field_release:protocol.flex_ue_stats_report.pdcp_stats)
  clear_has_pdcp_stats();
  ::protocol::flex_pdcp_stats* temp = pdcp_stats_;
  pdcp_stats_ = NULL;
  return temp;
}
inline void flex_ue_stats_report::set_allocated_pdcp_stats(::protocol::flex_pdcp_stats* pdcp_stats) {
  delete pdcp_stats_;
  pdcp_stats_ = pdcp_stats;
  if (pdcp_stats) {
    set_has_pdcp_stats();
  } else {
    clear_has_pdcp_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_ue_stats_report.pdcp_stats)
}

// optional .protocol.flex_mac_stats mac_stats = 12;
inline bool flex_ue_stats_report::has_mac_stats() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void flex_ue_stats_report::set_has_mac_stats() {
  _has_bits_[0] |= 0x00000020u;
}
inline void flex_ue_stats_report::clear_has_mac_stats() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void flex_ue_stats_report::clear_mac_stats() {
  if (mac_stats_ != NULL) mac_stats_->::protocol::flex_mac_stats::Clear();
  clear_has_mac_stats();
}
inline const ::protocol::flex_mac_stats& flex_ue_stats_report::mac_stats() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.mac_stats)
  return mac_stats_ != NULL ? *mac_stats_
                         : *::protocol::flex_mac_stats::internal_default_instance();
}
inline ::protocol::flex_mac_stats* flex_ue_stats_report::mutable_mac_stats() {
  set_has_mac_stats();
  if (mac_stats_ == NULL) {
    mac_stats_ = new ::protocol::flex_mac_stats;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_ue_stats_report.mac_stats)
  return mac_stats_;
}
inline ::protocol::flex_mac_stats* flex_ue_stats_report::release_mac_stats() {
  // @@protoc_insertion_point(field_release:protocol.flex_ue_stats_report.mac_stats)
  clear_has_mac_stats();
  ::protocol::flex_mac_stats* temp = mac_stats_;
  mac_stats_ = NULL;
  return temp;
}
inline void flex_ue_stats_report::set_allocated_mac_stats(::protocol::flex_mac_stats* mac_stats) {
  delete mac_stats_;
  mac_stats_ = mac_stats;
  if (mac_stats) {
    set_has_mac_stats();
  } else {
    clear_has_mac_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_ue_stats_report.mac_stats)
}

// repeated .protocol.flex_gtp_stats gtp_stats = 13;
inline int flex_ue_stats_report::gtp_stats_size() const {
  return gtp_stats_.size();
}
inline void flex_ue_stats_report::clear_gtp_stats() {
  gtp_stats_.Clear();
}
inline const ::protocol::flex_gtp_stats& flex_ue_stats_report::gtp_stats(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.gtp_stats)
  return gtp_stats_.Get(index);
}
inline ::protocol::flex_gtp_stats* flex_ue_stats_report::mutable_gtp_stats(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_ue_stats_report.gtp_stats)
  return gtp_stats_.Mutable(index);
}
inline ::protocol::flex_gtp_stats* flex_ue_stats_report::add_gtp_stats() {
  // @@protoc_insertion_point(field_add:protocol.flex_ue_stats_report.gtp_stats)
  return gtp_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_gtp_stats >*
flex_ue_stats_report::mutable_gtp_stats() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_ue_stats_report.gtp_stats)
  return &gtp_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_gtp_stats >&
flex_ue_stats_report::gtp_stats() const {
  // @@protoc_insertion_point(field_list:protocol.flex_ue_stats_report.gtp_stats)
  return gtp_stats_;
}

// optional .protocol.flex_s1ap_ue s1ap_stats = 14;
inline bool flex_ue_stats_report::has_s1ap_stats() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void flex_ue_stats_report::set_has_s1ap_stats() {
  _has_bits_[0] |= 0x00000040u;
}
inline void flex_ue_stats_report::clear_has_s1ap_stats() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void flex_ue_stats_report::clear_s1ap_stats() {
  if (s1ap_stats_ != NULL) s1ap_stats_->::protocol::flex_s1ap_ue::Clear();
  clear_has_s1ap_stats();
}
inline const ::protocol::flex_s1ap_ue& flex_ue_stats_report::s1ap_stats() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ue_stats_report.s1ap_stats)
  return s1ap_stats_ != NULL ? *s1ap_stats_
                         : *::protocol::flex_s1ap_ue::internal_default_instance();
}
inline ::protocol::flex_s1ap_ue* flex_ue_stats_report::mutable_s1ap_stats() {
  set_has_s1ap_stats();
  if (s1ap_stats_ == NULL) {
    s1ap_stats_ = new ::protocol::flex_s1ap_ue;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_ue_stats_report.s1ap_stats)
  return s1ap_stats_;
}
inline ::protocol::flex_s1ap_ue* flex_ue_stats_report::release_s1ap_stats() {
  // @@protoc_insertion_point(field_release:protocol.flex_ue_stats_report.s1ap_stats)
  clear_has_s1ap_stats();
  ::protocol::flex_s1ap_ue* temp = s1ap_stats_;
  s1ap_stats_ = NULL;
  return temp;
}
inline void flex_ue_stats_report::set_allocated_s1ap_stats(::protocol::flex_s1ap_ue* s1ap_stats) {
  delete s1ap_stats_;
  s1ap_stats_ = s1ap_stats;
  if (s1ap_stats) {
    set_has_s1ap_stats();
  } else {
    clear_has_s1ap_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_ue_stats_report.s1ap_stats)
}

// -------------------------------------------------------------------

// flex_complete_stats_request_repeated

// repeated .protocol.flex_complete_stats_request reports = 1;
inline int flex_complete_stats_request_repeated::reports_size() const {
  return reports_.size();
}
inline void flex_complete_stats_request_repeated::clear_reports() {
  reports_.Clear();
}
inline const ::protocol::flex_complete_stats_request& flex_complete_stats_request_repeated::reports(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_complete_stats_request_repeated.reports)
  return reports_.Get(index);
}
inline ::protocol::flex_complete_stats_request* flex_complete_stats_request_repeated::mutable_reports(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_complete_stats_request_repeated.reports)
  return reports_.Mutable(index);
}
inline ::protocol::flex_complete_stats_request* flex_complete_stats_request_repeated::add_reports() {
  // @@protoc_insertion_point(field_add:protocol.flex_complete_stats_request_repeated.reports)
  return reports_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_complete_stats_request >*
flex_complete_stats_request_repeated::mutable_reports() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_complete_stats_request_repeated.reports)
  return &reports_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_complete_stats_request >&
flex_complete_stats_request_repeated::reports() const {
  // @@protoc_insertion_point(field_list:protocol.flex_complete_stats_request_repeated.reports)
  return reports_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protocol::flex_stats_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::flex_stats_type>() {
  return ::protocol::flex_stats_type_descriptor();
}
template <> struct is_proto_enum< ::protocol::flex_stats_report_freq> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::flex_stats_report_freq>() {
  return ::protocol::flex_stats_report_freq_descriptor();
}
template <> struct is_proto_enum< ::protocol::flex_cell_stats_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::flex_cell_stats_type>() {
  return ::protocol::flex_cell_stats_type_descriptor();
}
template <> struct is_proto_enum< ::protocol::flex_ue_stats_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::flex_ue_stats_type>() {
  return ::protocol::flex_ue_stats_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_stats_5fmessages_2eproto__INCLUDED
