// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stats_common.proto

#ifndef PROTOBUF_stats_5fcommon_2eproto__INCLUDED
#define PROTOBUF_stats_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "config_common.pb.h"
// @@protoc_insertion_point(includes)
namespace protocol {
class flex_a1_event;
class flex_a1_eventDefaultTypeInternal;
extern flex_a1_eventDefaultTypeInternal _flex_a1_event_default_instance_;
class flex_a2_event;
class flex_a2_eventDefaultTypeInternal;
extern flex_a2_eventDefaultTypeInternal _flex_a2_event_default_instance_;
class flex_a3_event;
class flex_a3_eventDefaultTypeInternal;
extern flex_a3_eventDefaultTypeInternal _flex_a3_event_default_instance_;
class flex_a4_event;
class flex_a4_eventDefaultTypeInternal;
extern flex_a4_eventDefaultTypeInternal _flex_a4_event_default_instance_;
class flex_a5_event;
class flex_a5_eventDefaultTypeInternal;
extern flex_a5_eventDefaultTypeInternal _flex_a5_event_default_instance_;
class flex_cell_global_eutra_id;
class flex_cell_global_eutra_idDefaultTypeInternal;
extern flex_cell_global_eutra_idDefaultTypeInternal _flex_cell_global_eutra_id_default_instance_;
class flex_cqi_config;
class flex_cqi_configDefaultTypeInternal;
extern flex_cqi_configDefaultTypeInternal _flex_cqi_config_default_instance_;
class flex_csi_a12;
class flex_csi_a12DefaultTypeInternal;
extern flex_csi_a12DefaultTypeInternal _flex_csi_a12_default_instance_;
class flex_csi_a20;
class flex_csi_a20DefaultTypeInternal;
extern flex_csi_a20DefaultTypeInternal _flex_csi_a20_default_instance_;
class flex_csi_a22;
class flex_csi_a22DefaultTypeInternal;
extern flex_csi_a22DefaultTypeInternal _flex_csi_a22_default_instance_;
class flex_csi_a30;
class flex_csi_a30DefaultTypeInternal;
extern flex_csi_a30DefaultTypeInternal _flex_csi_a30_default_instance_;
class flex_csi_a31;
class flex_csi_a31DefaultTypeInternal;
extern flex_csi_a31DefaultTypeInternal _flex_csi_a31_default_instance_;
class flex_csi_p10;
class flex_csi_p10DefaultTypeInternal;
extern flex_csi_p10DefaultTypeInternal _flex_csi_p10_default_instance_;
class flex_csi_p11;
class flex_csi_p11DefaultTypeInternal;
extern flex_csi_p11DefaultTypeInternal _flex_csi_p11_default_instance_;
class flex_csi_p20;
class flex_csi_p20DefaultTypeInternal;
extern flex_csi_p20DefaultTypeInternal _flex_csi_p20_default_instance_;
class flex_csi_p21;
class flex_csi_p21DefaultTypeInternal;
extern flex_csi_p21DefaultTypeInternal _flex_csi_p21_default_instance_;
class flex_dl_cqi_report;
class flex_dl_cqi_reportDefaultTypeInternal;
extern flex_dl_cqi_reportDefaultTypeInternal _flex_dl_cqi_report_default_instance_;
class flex_dl_csi;
class flex_dl_csiDefaultTypeInternal;
extern flex_dl_csiDefaultTypeInternal _flex_dl_csi_default_instance_;
class flex_drx_config;
class flex_drx_configDefaultTypeInternal;
extern flex_drx_configDefaultTypeInternal _flex_drx_config_default_instance_;
class flex_eutra_cgi_measurements;
class flex_eutra_cgi_measurementsDefaultTypeInternal;
extern flex_eutra_cgi_measurementsDefaultTypeInternal _flex_eutra_cgi_measurements_default_instance_;
class flex_eutra_measurements;
class flex_eutra_measurementsDefaultTypeInternal;
extern flex_eutra_measurementsDefaultTypeInternal _flex_eutra_measurements_default_instance_;
class flex_eutra_ref_signal_meas;
class flex_eutra_ref_signal_measDefaultTypeInternal;
extern flex_eutra_ref_signal_measDefaultTypeInternal _flex_eutra_ref_signal_meas_default_instance_;
class flex_gtp_stats;
class flex_gtp_statsDefaultTypeInternal;
extern flex_gtp_statsDefaultTypeInternal _flex_gtp_stats_default_instance_;
class flex_gummei;
class flex_gummeiDefaultTypeInternal;
extern flex_gummeiDefaultTypeInternal _flex_gummei_default_instance_;
class flex_lc_config;
class flex_lc_configDefaultTypeInternal;
extern flex_lc_configDefaultTypeInternal _flex_lc_config_default_instance_;
class flex_mac_sdus_dl;
class flex_mac_sdus_dlDefaultTypeInternal;
extern flex_mac_sdus_dlDefaultTypeInternal _flex_mac_sdus_dl_default_instance_;
class flex_mac_stats;
class flex_mac_statsDefaultTypeInternal;
extern flex_mac_statsDefaultTypeInternal _flex_mac_stats_default_instance_;
class flex_measurement_event;
class flex_measurement_eventDefaultTypeInternal;
extern flex_measurement_eventDefaultTypeInternal _flex_measurement_event_default_instance_;
class flex_measurement_info;
class flex_measurement_infoDefaultTypeInternal;
extern flex_measurement_infoDefaultTypeInternal _flex_measurement_info_default_instance_;
class flex_msb_cqi;
class flex_msb_cqiDefaultTypeInternal;
extern flex_msb_cqiDefaultTypeInternal _flex_msb_cqi_default_instance_;
class flex_neigh_cells_measurements;
class flex_neigh_cells_measurementsDefaultTypeInternal;
extern flex_neigh_cells_measurementsDefaultTypeInternal _flex_neigh_cells_measurements_default_instance_;
class flex_noise_interference_report;
class flex_noise_interference_reportDefaultTypeInternal;
extern flex_noise_interference_reportDefaultTypeInternal _flex_noise_interference_report_default_instance_;
class flex_paging_buffer_report;
class flex_paging_buffer_reportDefaultTypeInternal;
extern flex_paging_buffer_reportDefaultTypeInternal _flex_paging_buffer_report_default_instance_;
class flex_paging_info;
class flex_paging_infoDefaultTypeInternal;
extern flex_paging_infoDefaultTypeInternal _flex_paging_info_default_instance_;
class flex_pdcp_stats;
class flex_pdcp_statsDefaultTypeInternal;
extern flex_pdcp_statsDefaultTypeInternal _flex_pdcp_stats_default_instance_;
class flex_per_event;
class flex_per_eventDefaultTypeInternal;
extern flex_per_eventDefaultTypeInternal _flex_per_event_default_instance_;
class flex_plmn;
class flex_plmnDefaultTypeInternal;
extern flex_plmnDefaultTypeInternal _flex_plmn_default_instance_;
class flex_pucch_dbm;
class flex_pucch_dbmDefaultTypeInternal;
extern flex_pucch_dbmDefaultTypeInternal _flex_pucch_dbm_default_instance_;
class flex_rlc_bsr;
class flex_rlc_bsrDefaultTypeInternal;
extern flex_rlc_bsrDefaultTypeInternal _flex_rlc_bsr_default_instance_;
class flex_rrc_measurements;
class flex_rrc_measurementsDefaultTypeInternal;
extern flex_rrc_measurementsDefaultTypeInternal _flex_rrc_measurements_default_instance_;
class flex_s1ap_mme;
class flex_s1ap_mmeDefaultTypeInternal;
extern flex_s1ap_mmeDefaultTypeInternal _flex_s1ap_mme_default_instance_;
class flex_s1ap_ue;
class flex_s1ap_ueDefaultTypeInternal;
extern flex_s1ap_ueDefaultTypeInternal _flex_s1ap_ue_default_instance_;
class flex_scell_config;
class flex_scell_configDefaultTypeInternal;
extern flex_scell_configDefaultTypeInternal _flex_scell_config_default_instance_;
class flex_si_config;
class flex_si_configDefaultTypeInternal;
extern flex_si_configDefaultTypeInternal _flex_si_config_default_instance_;
class flex_si_message;
class flex_si_messageDefaultTypeInternal;
extern flex_si_messageDefaultTypeInternal _flex_si_message_default_instance_;
class flex_slice;
class flex_sliceDefaultTypeInternal;
extern flex_sliceDefaultTypeInternal _flex_slice_default_instance_;
class flex_slice_dl_ul_config;
class flex_slice_dl_ul_configDefaultTypeInternal;
extern flex_slice_dl_ul_configDefaultTypeInternal _flex_slice_dl_ul_config_default_instance_;
class flex_slice_static;
class flex_slice_staticDefaultTypeInternal;
extern flex_slice_staticDefaultTypeInternal _flex_slice_static_default_instance_;
class flex_sps_config;
class flex_sps_configDefaultTypeInternal;
extern flex_sps_configDefaultTypeInternal _flex_sps_config_default_instance_;
class flex_sr_config;
class flex_sr_configDefaultTypeInternal;
extern flex_sr_configDefaultTypeInternal _flex_sr_config_default_instance_;
class flex_ue_capabilities;
class flex_ue_capabilitiesDefaultTypeInternal;
extern flex_ue_capabilitiesDefaultTypeInternal _flex_ue_capabilities_default_instance_;
class flex_ul_cqi;
class flex_ul_cqiDefaultTypeInternal;
extern flex_ul_cqiDefaultTypeInternal _flex_ul_cqi_default_instance_;
class flex_ul_cqi_report;
class flex_ul_cqi_reportDefaultTypeInternal;
extern flex_ul_cqi_reportDefaultTypeInternal _flex_ul_cqi_report_default_instance_;
}  // namespace protocol

namespace protocol {

namespace protobuf_stats_5fcommon_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_stats_5fcommon_2eproto

enum flex_ce_type {
  FLPCET_TA = 1,
  FLPCET_DRX = 2,
  FLPCET_CR = 4,
  FLPCET_CA = 8
};
bool flex_ce_type_IsValid(int value);
const flex_ce_type flex_ce_type_MIN = FLPCET_TA;
const flex_ce_type flex_ce_type_MAX = FLPCET_CA;
const int flex_ce_type_ARRAYSIZE = flex_ce_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* flex_ce_type_descriptor();
inline const ::std::string& flex_ce_type_Name(flex_ce_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    flex_ce_type_descriptor(), value);
}
inline bool flex_ce_type_Parse(
    const ::std::string& name, flex_ce_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<flex_ce_type>(
    flex_ce_type_descriptor(), name, value);
}
enum flex_csi_type {
  FLCSIT_P10 = 0,
  FLCSIT_P11 = 1,
  FLCSIT_P20 = 2,
  FLCSIT_P21 = 3,
  FLCSIT_A12 = 4,
  FLCSIT_A22 = 5,
  FLCSIT_A20 = 6,
  FLCSIT_A30 = 7,
  FLCSIT_A31 = 8
};
bool flex_csi_type_IsValid(int value);
const flex_csi_type flex_csi_type_MIN = FLCSIT_P10;
const flex_csi_type flex_csi_type_MAX = FLCSIT_A31;
const int flex_csi_type_ARRAYSIZE = flex_csi_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* flex_csi_type_descriptor();
inline const ::std::string& flex_csi_type_Name(flex_csi_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    flex_csi_type_descriptor(), value);
}
inline bool flex_csi_type_Parse(
    const ::std::string& name, flex_csi_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<flex_csi_type>(
    flex_csi_type_descriptor(), name, value);
}
enum flex_ul_cqi_type {
  FLUCT_SRS = 0,
  FLUCT_PUSCH = 1,
  FLUCT_PUCCH_1 = 2,
  FLUCT_PUCCH_2 = 3,
  FLUCT_PRACH = 4
};
bool flex_ul_cqi_type_IsValid(int value);
const flex_ul_cqi_type flex_ul_cqi_type_MIN = FLUCT_SRS;
const flex_ul_cqi_type flex_ul_cqi_type_MAX = FLUCT_PRACH;
const int flex_ul_cqi_type_ARRAYSIZE = flex_ul_cqi_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* flex_ul_cqi_type_descriptor();
inline const ::std::string& flex_ul_cqi_type_Name(flex_ul_cqi_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    flex_ul_cqi_type_descriptor(), value);
}
inline bool flex_ul_cqi_type_Parse(
    const ::std::string& name, flex_ul_cqi_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<flex_ul_cqi_type>(
    flex_ul_cqi_type_descriptor(), name, value);
}
// ===================================================================

class flex_rlc_bsr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_rlc_bsr) */ {
 public:
  flex_rlc_bsr();
  virtual ~flex_rlc_bsr();

  flex_rlc_bsr(const flex_rlc_bsr& from);

  inline flex_rlc_bsr& operator=(const flex_rlc_bsr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_rlc_bsr& default_instance();

  static inline const flex_rlc_bsr* internal_default_instance() {
    return reinterpret_cast<const flex_rlc_bsr*>(
               &_flex_rlc_bsr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(flex_rlc_bsr* other);

  // implements Message ----------------------------------------------

  inline flex_rlc_bsr* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_rlc_bsr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_rlc_bsr& from);
  void MergeFrom(const flex_rlc_bsr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_rlc_bsr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 lc_id = 1;
  bool has_lc_id() const;
  void clear_lc_id();
  static const int kLcIdFieldNumber = 1;
  ::google::protobuf::uint32 lc_id() const;
  void set_lc_id(::google::protobuf::uint32 value);

  // optional uint32 tx_queue_size = 2;
  bool has_tx_queue_size() const;
  void clear_tx_queue_size();
  static const int kTxQueueSizeFieldNumber = 2;
  ::google::protobuf::uint32 tx_queue_size() const;
  void set_tx_queue_size(::google::protobuf::uint32 value);

  // optional uint32 tx_queue_hol_delay = 3;
  bool has_tx_queue_hol_delay() const;
  void clear_tx_queue_hol_delay();
  static const int kTxQueueHolDelayFieldNumber = 3;
  ::google::protobuf::uint32 tx_queue_hol_delay() const;
  void set_tx_queue_hol_delay(::google::protobuf::uint32 value);

  // optional uint32 retransmission_queue_size = 4;
  bool has_retransmission_queue_size() const;
  void clear_retransmission_queue_size();
  static const int kRetransmissionQueueSizeFieldNumber = 4;
  ::google::protobuf::uint32 retransmission_queue_size() const;
  void set_retransmission_queue_size(::google::protobuf::uint32 value);

  // optional uint32 retransmission_queue_hol_delay = 5;
  bool has_retransmission_queue_hol_delay() const;
  void clear_retransmission_queue_hol_delay();
  static const int kRetransmissionQueueHolDelayFieldNumber = 5;
  ::google::protobuf::uint32 retransmission_queue_hol_delay() const;
  void set_retransmission_queue_hol_delay(::google::protobuf::uint32 value);

  // optional uint32 status_pdu_size = 6;
  bool has_status_pdu_size() const;
  void clear_status_pdu_size();
  static const int kStatusPduSizeFieldNumber = 6;
  ::google::protobuf::uint32 status_pdu_size() const;
  void set_status_pdu_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_rlc_bsr)
 private:
  void set_has_lc_id();
  void clear_has_lc_id();
  void set_has_tx_queue_size();
  void clear_has_tx_queue_size();
  void set_has_tx_queue_hol_delay();
  void clear_has_tx_queue_hol_delay();
  void set_has_retransmission_queue_size();
  void clear_has_retransmission_queue_size();
  void set_has_retransmission_queue_hol_delay();
  void clear_has_retransmission_queue_hol_delay();
  void set_has_status_pdu_size();
  void clear_has_status_pdu_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 lc_id_;
  ::google::protobuf::uint32 tx_queue_size_;
  ::google::protobuf::uint32 tx_queue_hol_delay_;
  ::google::protobuf::uint32 retransmission_queue_size_;
  ::google::protobuf::uint32 retransmission_queue_hol_delay_;
  ::google::protobuf::uint32 status_pdu_size_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_csi_p10 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_csi_p10) */ {
 public:
  flex_csi_p10();
  virtual ~flex_csi_p10();

  flex_csi_p10(const flex_csi_p10& from);

  inline flex_csi_p10& operator=(const flex_csi_p10& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_csi_p10& default_instance();

  static inline const flex_csi_p10* internal_default_instance() {
    return reinterpret_cast<const flex_csi_p10*>(
               &_flex_csi_p10_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(flex_csi_p10* other);

  // implements Message ----------------------------------------------

  inline flex_csi_p10* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_csi_p10* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_csi_p10& from);
  void MergeFrom(const flex_csi_p10& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_csi_p10* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wb_cqi = 1;
  bool has_wb_cqi() const;
  void clear_wb_cqi();
  static const int kWbCqiFieldNumber = 1;
  ::google::protobuf::uint32 wb_cqi() const;
  void set_wb_cqi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_csi_p10)
 private:
  void set_has_wb_cqi();
  void clear_has_wb_cqi();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 wb_cqi_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_csi_p11 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_csi_p11) */ {
 public:
  flex_csi_p11();
  virtual ~flex_csi_p11();

  flex_csi_p11(const flex_csi_p11& from);

  inline flex_csi_p11& operator=(const flex_csi_p11& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_csi_p11& default_instance();

  static inline const flex_csi_p11* internal_default_instance() {
    return reinterpret_cast<const flex_csi_p11*>(
               &_flex_csi_p11_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(flex_csi_p11* other);

  // implements Message ----------------------------------------------

  inline flex_csi_p11* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_csi_p11* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_csi_p11& from);
  void MergeFrom(const flex_csi_p11& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_csi_p11* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 wb_cqi = 1;
  int wb_cqi_size() const;
  void clear_wb_cqi();
  static const int kWbCqiFieldNumber = 1;
  ::google::protobuf::uint32 wb_cqi(int index) const;
  void set_wb_cqi(int index, ::google::protobuf::uint32 value);
  void add_wb_cqi(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wb_cqi() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wb_cqi();

  // optional uint32 wb_pmi = 2;
  bool has_wb_pmi() const;
  void clear_wb_pmi();
  static const int kWbPmiFieldNumber = 2;
  ::google::protobuf::uint32 wb_pmi() const;
  void set_wb_pmi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_csi_p11)
 private:
  void set_has_wb_pmi();
  void clear_has_wb_pmi();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wb_cqi_;
  ::google::protobuf::uint32 wb_pmi_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_csi_p20 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_csi_p20) */ {
 public:
  flex_csi_p20();
  virtual ~flex_csi_p20();

  flex_csi_p20(const flex_csi_p20& from);

  inline flex_csi_p20& operator=(const flex_csi_p20& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_csi_p20& default_instance();

  static inline const flex_csi_p20* internal_default_instance() {
    return reinterpret_cast<const flex_csi_p20*>(
               &_flex_csi_p20_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(flex_csi_p20* other);

  // implements Message ----------------------------------------------

  inline flex_csi_p20* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_csi_p20* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_csi_p20& from);
  void MergeFrom(const flex_csi_p20& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_csi_p20* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wb_cqi = 1;
  bool has_wb_cqi() const;
  void clear_wb_cqi();
  static const int kWbCqiFieldNumber = 1;
  ::google::protobuf::uint32 wb_cqi() const;
  void set_wb_cqi(::google::protobuf::uint32 value);

  // optional uint32 sb_cqi = 2;
  bool has_sb_cqi() const;
  void clear_sb_cqi();
  static const int kSbCqiFieldNumber = 2;
  ::google::protobuf::uint32 sb_cqi() const;
  void set_sb_cqi(::google::protobuf::uint32 value);

  // optional uint32 bandwidth_part_index = 3;
  bool has_bandwidth_part_index() const;
  void clear_bandwidth_part_index();
  static const int kBandwidthPartIndexFieldNumber = 3;
  ::google::protobuf::uint32 bandwidth_part_index() const;
  void set_bandwidth_part_index(::google::protobuf::uint32 value);

  // optional uint32 sb_index = 4;
  bool has_sb_index() const;
  void clear_sb_index();
  static const int kSbIndexFieldNumber = 4;
  ::google::protobuf::uint32 sb_index() const;
  void set_sb_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_csi_p20)
 private:
  void set_has_wb_cqi();
  void clear_has_wb_cqi();
  void set_has_sb_cqi();
  void clear_has_sb_cqi();
  void set_has_bandwidth_part_index();
  void clear_has_bandwidth_part_index();
  void set_has_sb_index();
  void clear_has_sb_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 wb_cqi_;
  ::google::protobuf::uint32 sb_cqi_;
  ::google::protobuf::uint32 bandwidth_part_index_;
  ::google::protobuf::uint32 sb_index_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_csi_p21 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_csi_p21) */ {
 public:
  flex_csi_p21();
  virtual ~flex_csi_p21();

  flex_csi_p21(const flex_csi_p21& from);

  inline flex_csi_p21& operator=(const flex_csi_p21& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_csi_p21& default_instance();

  static inline const flex_csi_p21* internal_default_instance() {
    return reinterpret_cast<const flex_csi_p21*>(
               &_flex_csi_p21_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(flex_csi_p21* other);

  // implements Message ----------------------------------------------

  inline flex_csi_p21* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_csi_p21* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_csi_p21& from);
  void MergeFrom(const flex_csi_p21& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_csi_p21* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 wb_cqi = 1;
  int wb_cqi_size() const;
  void clear_wb_cqi();
  static const int kWbCqiFieldNumber = 1;
  ::google::protobuf::uint32 wb_cqi(int index) const;
  void set_wb_cqi(int index, ::google::protobuf::uint32 value);
  void add_wb_cqi(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wb_cqi() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wb_cqi();

  // repeated uint32 sb_cqi = 3;
  int sb_cqi_size() const;
  void clear_sb_cqi();
  static const int kSbCqiFieldNumber = 3;
  ::google::protobuf::uint32 sb_cqi(int index) const;
  void set_sb_cqi(int index, ::google::protobuf::uint32 value);
  void add_sb_cqi(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sb_cqi() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sb_cqi();

  // optional uint32 wb_pmi = 2;
  bool has_wb_pmi() const;
  void clear_wb_pmi();
  static const int kWbPmiFieldNumber = 2;
  ::google::protobuf::uint32 wb_pmi() const;
  void set_wb_pmi(::google::protobuf::uint32 value);

  // optional uint32 badwidth_part_index = 4;
  bool has_badwidth_part_index() const;
  void clear_badwidth_part_index();
  static const int kBadwidthPartIndexFieldNumber = 4;
  ::google::protobuf::uint32 badwidth_part_index() const;
  void set_badwidth_part_index(::google::protobuf::uint32 value);

  // optional uint32 sb_index = 5;
  bool has_sb_index() const;
  void clear_sb_index();
  static const int kSbIndexFieldNumber = 5;
  ::google::protobuf::uint32 sb_index() const;
  void set_sb_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_csi_p21)
 private:
  void set_has_wb_pmi();
  void clear_has_wb_pmi();
  void set_has_badwidth_part_index();
  void clear_has_badwidth_part_index();
  void set_has_sb_index();
  void clear_has_sb_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wb_cqi_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sb_cqi_;
  ::google::protobuf::uint32 wb_pmi_;
  ::google::protobuf::uint32 badwidth_part_index_;
  ::google::protobuf::uint32 sb_index_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_csi_a12 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_csi_a12) */ {
 public:
  flex_csi_a12();
  virtual ~flex_csi_a12();

  flex_csi_a12(const flex_csi_a12& from);

  inline flex_csi_a12& operator=(const flex_csi_a12& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_csi_a12& default_instance();

  static inline const flex_csi_a12* internal_default_instance() {
    return reinterpret_cast<const flex_csi_a12*>(
               &_flex_csi_a12_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(flex_csi_a12* other);

  // implements Message ----------------------------------------------

  inline flex_csi_a12* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_csi_a12* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_csi_a12& from);
  void MergeFrom(const flex_csi_a12& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_csi_a12* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 wb_cqi = 1;
  int wb_cqi_size() const;
  void clear_wb_cqi();
  static const int kWbCqiFieldNumber = 1;
  ::google::protobuf::uint32 wb_cqi(int index) const;
  void set_wb_cqi(int index, ::google::protobuf::uint32 value);
  void add_wb_cqi(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wb_cqi() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wb_cqi();

  // repeated uint32 sb_pmi = 2;
  int sb_pmi_size() const;
  void clear_sb_pmi();
  static const int kSbPmiFieldNumber = 2;
  ::google::protobuf::uint32 sb_pmi(int index) const;
  void set_sb_pmi(int index, ::google::protobuf::uint32 value);
  void add_sb_pmi(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sb_pmi() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sb_pmi();

  // @@protoc_insertion_point(class_scope:protocol.flex_csi_a12)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wb_cqi_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sb_pmi_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_csi_a22 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_csi_a22) */ {
 public:
  flex_csi_a22();
  virtual ~flex_csi_a22();

  flex_csi_a22(const flex_csi_a22& from);

  inline flex_csi_a22& operator=(const flex_csi_a22& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_csi_a22& default_instance();

  static inline const flex_csi_a22* internal_default_instance() {
    return reinterpret_cast<const flex_csi_a22*>(
               &_flex_csi_a22_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(flex_csi_a22* other);

  // implements Message ----------------------------------------------

  inline flex_csi_a22* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_csi_a22* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_csi_a22& from);
  void MergeFrom(const flex_csi_a22& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_csi_a22* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 wb_cqi = 1;
  int wb_cqi_size() const;
  void clear_wb_cqi();
  static const int kWbCqiFieldNumber = 1;
  ::google::protobuf::uint32 wb_cqi(int index) const;
  void set_wb_cqi(int index, ::google::protobuf::uint32 value);
  void add_wb_cqi(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wb_cqi() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wb_cqi();

  // repeated uint32 sb_cqi = 2;
  int sb_cqi_size() const;
  void clear_sb_cqi();
  static const int kSbCqiFieldNumber = 2;
  ::google::protobuf::uint32 sb_cqi(int index) const;
  void set_sb_cqi(int index, ::google::protobuf::uint32 value);
  void add_sb_cqi(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sb_cqi() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sb_cqi();

  // repeated uint32 sb_list = 5;
  int sb_list_size() const;
  void clear_sb_list();
  static const int kSbListFieldNumber = 5;
  ::google::protobuf::uint32 sb_list(int index) const;
  void set_sb_list(int index, ::google::protobuf::uint32 value);
  void add_sb_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sb_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sb_list();

  // optional uint32 wb_pmi = 3;
  bool has_wb_pmi() const;
  void clear_wb_pmi();
  static const int kWbPmiFieldNumber = 3;
  ::google::protobuf::uint32 wb_pmi() const;
  void set_wb_pmi(::google::protobuf::uint32 value);

  // optional uint32 sb_pmi = 4;
  bool has_sb_pmi() const;
  void clear_sb_pmi();
  static const int kSbPmiFieldNumber = 4;
  ::google::protobuf::uint32 sb_pmi() const;
  void set_sb_pmi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_csi_a22)
 private:
  void set_has_wb_pmi();
  void clear_has_wb_pmi();
  void set_has_sb_pmi();
  void clear_has_sb_pmi();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wb_cqi_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sb_cqi_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sb_list_;
  ::google::protobuf::uint32 wb_pmi_;
  ::google::protobuf::uint32 sb_pmi_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_csi_a20 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_csi_a20) */ {
 public:
  flex_csi_a20();
  virtual ~flex_csi_a20();

  flex_csi_a20(const flex_csi_a20& from);

  inline flex_csi_a20& operator=(const flex_csi_a20& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_csi_a20& default_instance();

  static inline const flex_csi_a20* internal_default_instance() {
    return reinterpret_cast<const flex_csi_a20*>(
               &_flex_csi_a20_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(flex_csi_a20* other);

  // implements Message ----------------------------------------------

  inline flex_csi_a20* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_csi_a20* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_csi_a20& from);
  void MergeFrom(const flex_csi_a20& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_csi_a20* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 sb_list = 3;
  int sb_list_size() const;
  void clear_sb_list();
  static const int kSbListFieldNumber = 3;
  ::google::protobuf::uint32 sb_list(int index) const;
  void set_sb_list(int index, ::google::protobuf::uint32 value);
  void add_sb_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sb_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sb_list();

  // optional uint32 wb_cqi = 1;
  bool has_wb_cqi() const;
  void clear_wb_cqi();
  static const int kWbCqiFieldNumber = 1;
  ::google::protobuf::uint32 wb_cqi() const;
  void set_wb_cqi(::google::protobuf::uint32 value);

  // optional uint32 sb_cqi = 2;
  bool has_sb_cqi() const;
  void clear_sb_cqi();
  static const int kSbCqiFieldNumber = 2;
  ::google::protobuf::uint32 sb_cqi() const;
  void set_sb_cqi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_csi_a20)
 private:
  void set_has_wb_cqi();
  void clear_has_wb_cqi();
  void set_has_sb_cqi();
  void clear_has_sb_cqi();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sb_list_;
  ::google::protobuf::uint32 wb_cqi_;
  ::google::protobuf::uint32 sb_cqi_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_csi_a30 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_csi_a30) */ {
 public:
  flex_csi_a30();
  virtual ~flex_csi_a30();

  flex_csi_a30(const flex_csi_a30& from);

  inline flex_csi_a30& operator=(const flex_csi_a30& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_csi_a30& default_instance();

  static inline const flex_csi_a30* internal_default_instance() {
    return reinterpret_cast<const flex_csi_a30*>(
               &_flex_csi_a30_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(flex_csi_a30* other);

  // implements Message ----------------------------------------------

  inline flex_csi_a30* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_csi_a30* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_csi_a30& from);
  void MergeFrom(const flex_csi_a30& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_csi_a30* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 sb_cqi = 2;
  int sb_cqi_size() const;
  void clear_sb_cqi();
  static const int kSbCqiFieldNumber = 2;
  ::google::protobuf::uint32 sb_cqi(int index) const;
  void set_sb_cqi(int index, ::google::protobuf::uint32 value);
  void add_sb_cqi(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sb_cqi() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sb_cqi();

  // optional uint32 wb_cqi = 1;
  bool has_wb_cqi() const;
  void clear_wb_cqi();
  static const int kWbCqiFieldNumber = 1;
  ::google::protobuf::uint32 wb_cqi() const;
  void set_wb_cqi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_csi_a30)
 private:
  void set_has_wb_cqi();
  void clear_has_wb_cqi();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sb_cqi_;
  ::google::protobuf::uint32 wb_cqi_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_csi_a31 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_csi_a31) */ {
 public:
  flex_csi_a31();
  virtual ~flex_csi_a31();

  flex_csi_a31(const flex_csi_a31& from);

  inline flex_csi_a31& operator=(const flex_csi_a31& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_csi_a31& default_instance();

  static inline const flex_csi_a31* internal_default_instance() {
    return reinterpret_cast<const flex_csi_a31*>(
               &_flex_csi_a31_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(flex_csi_a31* other);

  // implements Message ----------------------------------------------

  inline flex_csi_a31* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_csi_a31* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_csi_a31& from);
  void MergeFrom(const flex_csi_a31& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_csi_a31* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 wb_cqi = 1;
  int wb_cqi_size() const;
  void clear_wb_cqi();
  static const int kWbCqiFieldNumber = 1;
  ::google::protobuf::uint32 wb_cqi(int index) const;
  void set_wb_cqi(int index, ::google::protobuf::uint32 value);
  void add_wb_cqi(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wb_cqi() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wb_cqi();

  // repeated .protocol.flex_msb_cqi sb_cqi = 2;
  int sb_cqi_size() const;
  void clear_sb_cqi();
  static const int kSbCqiFieldNumber = 2;
  const ::protocol::flex_msb_cqi& sb_cqi(int index) const;
  ::protocol::flex_msb_cqi* mutable_sb_cqi(int index);
  ::protocol::flex_msb_cqi* add_sb_cqi();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_msb_cqi >*
      mutable_sb_cqi();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_msb_cqi >&
      sb_cqi() const;

  // optional uint32 wb_pmi = 3;
  bool has_wb_pmi() const;
  void clear_wb_pmi();
  static const int kWbPmiFieldNumber = 3;
  ::google::protobuf::uint32 wb_pmi() const;
  void set_wb_pmi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_csi_a31)
 private:
  void set_has_wb_pmi();
  void clear_has_wb_pmi();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wb_cqi_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_msb_cqi > sb_cqi_;
  ::google::protobuf::uint32 wb_pmi_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_msb_cqi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_msb_cqi) */ {
 public:
  flex_msb_cqi();
  virtual ~flex_msb_cqi();

  flex_msb_cqi(const flex_msb_cqi& from);

  inline flex_msb_cqi& operator=(const flex_msb_cqi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_msb_cqi& default_instance();

  static inline const flex_msb_cqi* internal_default_instance() {
    return reinterpret_cast<const flex_msb_cqi*>(
               &_flex_msb_cqi_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(flex_msb_cqi* other);

  // implements Message ----------------------------------------------

  inline flex_msb_cqi* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_msb_cqi* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_msb_cqi& from);
  void MergeFrom(const flex_msb_cqi& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_msb_cqi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 sb_cqi = 1;
  int sb_cqi_size() const;
  void clear_sb_cqi();
  static const int kSbCqiFieldNumber = 1;
  ::google::protobuf::uint32 sb_cqi(int index) const;
  void set_sb_cqi(int index, ::google::protobuf::uint32 value);
  void add_sb_cqi(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sb_cqi() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sb_cqi();

  // @@protoc_insertion_point(class_scope:protocol.flex_msb_cqi)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sb_cqi_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_dl_csi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_dl_csi) */ {
 public:
  flex_dl_csi();
  virtual ~flex_dl_csi();

  flex_dl_csi(const flex_dl_csi& from);

  inline flex_dl_csi& operator=(const flex_dl_csi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_dl_csi& default_instance();

  enum ReportCase {
    kP10Csi = 4,
    kP11Csi = 5,
    kP20Csi = 6,
    kP21Csi = 7,
    kA12Csi = 8,
    kA22Csi = 9,
    kA20Csi = 10,
    kA30Csi = 11,
    kA31Csi = 12,
    REPORT_NOT_SET = 0,
  };

  static inline const flex_dl_csi* internal_default_instance() {
    return reinterpret_cast<const flex_dl_csi*>(
               &_flex_dl_csi_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(flex_dl_csi* other);

  // implements Message ----------------------------------------------

  inline flex_dl_csi* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_dl_csi* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_dl_csi& from);
  void MergeFrom(const flex_dl_csi& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_dl_csi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 serv_cell_index = 1;
  bool has_serv_cell_index() const;
  void clear_serv_cell_index();
  static const int kServCellIndexFieldNumber = 1;
  ::google::protobuf::uint32 serv_cell_index() const;
  void set_serv_cell_index(::google::protobuf::uint32 value);

  // optional uint32 ri = 2;
  bool has_ri() const;
  void clear_ri();
  static const int kRiFieldNumber = 2;
  ::google::protobuf::uint32 ri() const;
  void set_ri(::google::protobuf::uint32 value);

  // optional .protocol.flex_csi_type type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::protocol::flex_csi_type type() const;
  void set_type(::protocol::flex_csi_type value);

  // optional .protocol.flex_csi_p10 p10csi = 4;
  bool has_p10csi() const;
  void clear_p10csi();
  static const int kP10CsiFieldNumber = 4;
  const ::protocol::flex_csi_p10& p10csi() const;
  ::protocol::flex_csi_p10* mutable_p10csi();
  ::protocol::flex_csi_p10* release_p10csi();
  void set_allocated_p10csi(::protocol::flex_csi_p10* p10csi);

  // optional .protocol.flex_csi_p11 p11csi = 5;
  bool has_p11csi() const;
  void clear_p11csi();
  static const int kP11CsiFieldNumber = 5;
  const ::protocol::flex_csi_p11& p11csi() const;
  ::protocol::flex_csi_p11* mutable_p11csi();
  ::protocol::flex_csi_p11* release_p11csi();
  void set_allocated_p11csi(::protocol::flex_csi_p11* p11csi);

  // optional .protocol.flex_csi_p20 p20csi = 6;
  bool has_p20csi() const;
  void clear_p20csi();
  static const int kP20CsiFieldNumber = 6;
  const ::protocol::flex_csi_p20& p20csi() const;
  ::protocol::flex_csi_p20* mutable_p20csi();
  ::protocol::flex_csi_p20* release_p20csi();
  void set_allocated_p20csi(::protocol::flex_csi_p20* p20csi);

  // optional .protocol.flex_csi_p21 p21csi = 7;
  bool has_p21csi() const;
  void clear_p21csi();
  static const int kP21CsiFieldNumber = 7;
  const ::protocol::flex_csi_p21& p21csi() const;
  ::protocol::flex_csi_p21* mutable_p21csi();
  ::protocol::flex_csi_p21* release_p21csi();
  void set_allocated_p21csi(::protocol::flex_csi_p21* p21csi);

  // optional .protocol.flex_csi_a12 a12csi = 8;
  bool has_a12csi() const;
  void clear_a12csi();
  static const int kA12CsiFieldNumber = 8;
  const ::protocol::flex_csi_a12& a12csi() const;
  ::protocol::flex_csi_a12* mutable_a12csi();
  ::protocol::flex_csi_a12* release_a12csi();
  void set_allocated_a12csi(::protocol::flex_csi_a12* a12csi);

  // optional .protocol.flex_csi_a22 a22csi = 9;
  bool has_a22csi() const;
  void clear_a22csi();
  static const int kA22CsiFieldNumber = 9;
  const ::protocol::flex_csi_a22& a22csi() const;
  ::protocol::flex_csi_a22* mutable_a22csi();
  ::protocol::flex_csi_a22* release_a22csi();
  void set_allocated_a22csi(::protocol::flex_csi_a22* a22csi);

  // optional .protocol.flex_csi_a20 a20csi = 10;
  bool has_a20csi() const;
  void clear_a20csi();
  static const int kA20CsiFieldNumber = 10;
  const ::protocol::flex_csi_a20& a20csi() const;
  ::protocol::flex_csi_a20* mutable_a20csi();
  ::protocol::flex_csi_a20* release_a20csi();
  void set_allocated_a20csi(::protocol::flex_csi_a20* a20csi);

  // optional .protocol.flex_csi_a30 a30csi = 11;
  bool has_a30csi() const;
  void clear_a30csi();
  static const int kA30CsiFieldNumber = 11;
  const ::protocol::flex_csi_a30& a30csi() const;
  ::protocol::flex_csi_a30* mutable_a30csi();
  ::protocol::flex_csi_a30* release_a30csi();
  void set_allocated_a30csi(::protocol::flex_csi_a30* a30csi);

  // optional .protocol.flex_csi_a31 a31csi = 12;
  bool has_a31csi() const;
  void clear_a31csi();
  static const int kA31CsiFieldNumber = 12;
  const ::protocol::flex_csi_a31& a31csi() const;
  ::protocol::flex_csi_a31* mutable_a31csi();
  ::protocol::flex_csi_a31* release_a31csi();
  void set_allocated_a31csi(::protocol::flex_csi_a31* a31csi);

  ReportCase report_case() const;
  // @@protoc_insertion_point(class_scope:protocol.flex_dl_csi)
 private:
  void set_has_serv_cell_index();
  void clear_has_serv_cell_index();
  void set_has_ri();
  void clear_has_ri();
  void set_has_type();
  void clear_has_type();
  void set_has_p10csi();
  void set_has_p11csi();
  void set_has_p20csi();
  void set_has_p21csi();
  void set_has_a12csi();
  void set_has_a22csi();
  void set_has_a20csi();
  void set_has_a30csi();
  void set_has_a31csi();

  inline bool has_report() const;
  void clear_report();
  inline void clear_has_report();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 serv_cell_index_;
  ::google::protobuf::uint32 ri_;
  int type_;
  union ReportUnion {
    ReportUnion() {}
    ::protocol::flex_csi_p10* p10csi_;
    ::protocol::flex_csi_p11* p11csi_;
    ::protocol::flex_csi_p20* p20csi_;
    ::protocol::flex_csi_p21* p21csi_;
    ::protocol::flex_csi_a12* a12csi_;
    ::protocol::flex_csi_a22* a22csi_;
    ::protocol::flex_csi_a20* a20csi_;
    ::protocol::flex_csi_a30* a30csi_;
    ::protocol::flex_csi_a31* a31csi_;
  } report_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_dl_cqi_report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_dl_cqi_report) */ {
 public:
  flex_dl_cqi_report();
  virtual ~flex_dl_cqi_report();

  flex_dl_cqi_report(const flex_dl_cqi_report& from);

  inline flex_dl_cqi_report& operator=(const flex_dl_cqi_report& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_dl_cqi_report& default_instance();

  static inline const flex_dl_cqi_report* internal_default_instance() {
    return reinterpret_cast<const flex_dl_cqi_report*>(
               &_flex_dl_cqi_report_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(flex_dl_cqi_report* other);

  // implements Message ----------------------------------------------

  inline flex_dl_cqi_report* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_dl_cqi_report* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_dl_cqi_report& from);
  void MergeFrom(const flex_dl_cqi_report& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_dl_cqi_report* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.flex_dl_csi csi_report = 2;
  int csi_report_size() const;
  void clear_csi_report();
  static const int kCsiReportFieldNumber = 2;
  const ::protocol::flex_dl_csi& csi_report(int index) const;
  ::protocol::flex_dl_csi* mutable_csi_report(int index);
  ::protocol::flex_dl_csi* add_csi_report();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_dl_csi >*
      mutable_csi_report();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_dl_csi >&
      csi_report() const;

  // optional uint32 sfn_sn = 1;
  bool has_sfn_sn() const;
  void clear_sfn_sn();
  static const int kSfnSnFieldNumber = 1;
  ::google::protobuf::uint32 sfn_sn() const;
  void set_sfn_sn(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_dl_cqi_report)
 private:
  void set_has_sfn_sn();
  void clear_has_sfn_sn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_dl_csi > csi_report_;
  ::google::protobuf::uint32 sfn_sn_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_paging_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_paging_info) */ {
 public:
  flex_paging_info();
  virtual ~flex_paging_info();

  flex_paging_info(const flex_paging_info& from);

  inline flex_paging_info& operator=(const flex_paging_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_paging_info& default_instance();

  static inline const flex_paging_info* internal_default_instance() {
    return reinterpret_cast<const flex_paging_info*>(
               &_flex_paging_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(flex_paging_info* other);

  // implements Message ----------------------------------------------

  inline flex_paging_info* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_paging_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_paging_info& from);
  void MergeFrom(const flex_paging_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_paging_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 paging_index = 1;
  bool has_paging_index() const;
  void clear_paging_index();
  static const int kPagingIndexFieldNumber = 1;
  ::google::protobuf::uint32 paging_index() const;
  void set_paging_index(::google::protobuf::uint32 value);

  // optional uint32 paging_message_size = 2;
  bool has_paging_message_size() const;
  void clear_paging_message_size();
  static const int kPagingMessageSizeFieldNumber = 2;
  ::google::protobuf::uint32 paging_message_size() const;
  void set_paging_message_size(::google::protobuf::uint32 value);

  // optional uint32 paging_subframe = 3;
  bool has_paging_subframe() const;
  void clear_paging_subframe();
  static const int kPagingSubframeFieldNumber = 3;
  ::google::protobuf::uint32 paging_subframe() const;
  void set_paging_subframe(::google::protobuf::uint32 value);

  // optional uint32 carrier_index = 4;
  bool has_carrier_index() const;
  void clear_carrier_index();
  static const int kCarrierIndexFieldNumber = 4;
  ::google::protobuf::uint32 carrier_index() const;
  void set_carrier_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_paging_info)
 private:
  void set_has_paging_index();
  void clear_has_paging_index();
  void set_has_paging_message_size();
  void clear_has_paging_message_size();
  void set_has_paging_subframe();
  void clear_has_paging_subframe();
  void set_has_carrier_index();
  void clear_has_carrier_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 paging_index_;
  ::google::protobuf::uint32 paging_message_size_;
  ::google::protobuf::uint32 paging_subframe_;
  ::google::protobuf::uint32 carrier_index_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_paging_buffer_report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_paging_buffer_report) */ {
 public:
  flex_paging_buffer_report();
  virtual ~flex_paging_buffer_report();

  flex_paging_buffer_report(const flex_paging_buffer_report& from);

  inline flex_paging_buffer_report& operator=(const flex_paging_buffer_report& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_paging_buffer_report& default_instance();

  static inline const flex_paging_buffer_report* internal_default_instance() {
    return reinterpret_cast<const flex_paging_buffer_report*>(
               &_flex_paging_buffer_report_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(flex_paging_buffer_report* other);

  // implements Message ----------------------------------------------

  inline flex_paging_buffer_report* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_paging_buffer_report* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_paging_buffer_report& from);
  void MergeFrom(const flex_paging_buffer_report& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_paging_buffer_report* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.flex_paging_info paging_info = 1;
  int paging_info_size() const;
  void clear_paging_info();
  static const int kPagingInfoFieldNumber = 1;
  const ::protocol::flex_paging_info& paging_info(int index) const;
  ::protocol::flex_paging_info* mutable_paging_info(int index);
  ::protocol::flex_paging_info* add_paging_info();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_paging_info >*
      mutable_paging_info();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_paging_info >&
      paging_info() const;

  // @@protoc_insertion_point(class_scope:protocol.flex_paging_buffer_report)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_paging_info > paging_info_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_ul_cqi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_ul_cqi) */ {
 public:
  flex_ul_cqi();
  virtual ~flex_ul_cqi();

  flex_ul_cqi(const flex_ul_cqi& from);

  inline flex_ul_cqi& operator=(const flex_ul_cqi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_ul_cqi& default_instance();

  static inline const flex_ul_cqi* internal_default_instance() {
    return reinterpret_cast<const flex_ul_cqi*>(
               &_flex_ul_cqi_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(flex_ul_cqi* other);

  // implements Message ----------------------------------------------

  inline flex_ul_cqi* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_ul_cqi* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_ul_cqi& from);
  void MergeFrom(const flex_ul_cqi& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_ul_cqi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 sinr = 2;
  int sinr_size() const;
  void clear_sinr();
  static const int kSinrFieldNumber = 2;
  ::google::protobuf::uint32 sinr(int index) const;
  void set_sinr(int index, ::google::protobuf::uint32 value);
  void add_sinr(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sinr() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sinr();

  // optional .protocol.flex_ul_cqi_type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::protocol::flex_ul_cqi_type type() const;
  void set_type(::protocol::flex_ul_cqi_type value);

  // optional uint32 serv_cell_index = 3;
  bool has_serv_cell_index() const;
  void clear_serv_cell_index();
  static const int kServCellIndexFieldNumber = 3;
  ::google::protobuf::uint32 serv_cell_index() const;
  void set_serv_cell_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_ul_cqi)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_serv_cell_index();
  void clear_has_serv_cell_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sinr_;
  int type_;
  ::google::protobuf::uint32 serv_cell_index_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_ul_cqi_report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_ul_cqi_report) */ {
 public:
  flex_ul_cqi_report();
  virtual ~flex_ul_cqi_report();

  flex_ul_cqi_report(const flex_ul_cqi_report& from);

  inline flex_ul_cqi_report& operator=(const flex_ul_cqi_report& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_ul_cqi_report& default_instance();

  static inline const flex_ul_cqi_report* internal_default_instance() {
    return reinterpret_cast<const flex_ul_cqi_report*>(
               &_flex_ul_cqi_report_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(flex_ul_cqi_report* other);

  // implements Message ----------------------------------------------

  inline flex_ul_cqi_report* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_ul_cqi_report* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_ul_cqi_report& from);
  void MergeFrom(const flex_ul_cqi_report& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_ul_cqi_report* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.flex_ul_cqi cqi_meas = 2;
  int cqi_meas_size() const;
  void clear_cqi_meas();
  static const int kCqiMeasFieldNumber = 2;
  const ::protocol::flex_ul_cqi& cqi_meas(int index) const;
  ::protocol::flex_ul_cqi* mutable_cqi_meas(int index);
  ::protocol::flex_ul_cqi* add_cqi_meas();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_ul_cqi >*
      mutable_cqi_meas();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_ul_cqi >&
      cqi_meas() const;

  // repeated .protocol.flex_pucch_dbm pucch_dbm = 3;
  int pucch_dbm_size() const;
  void clear_pucch_dbm();
  static const int kPucchDbmFieldNumber = 3;
  const ::protocol::flex_pucch_dbm& pucch_dbm(int index) const;
  ::protocol::flex_pucch_dbm* mutable_pucch_dbm(int index);
  ::protocol::flex_pucch_dbm* add_pucch_dbm();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_pucch_dbm >*
      mutable_pucch_dbm();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_pucch_dbm >&
      pucch_dbm() const;

  // optional uint32 sfn_sn = 1;
  bool has_sfn_sn() const;
  void clear_sfn_sn();
  static const int kSfnSnFieldNumber = 1;
  ::google::protobuf::uint32 sfn_sn() const;
  void set_sfn_sn(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_ul_cqi_report)
 private:
  void set_has_sfn_sn();
  void clear_has_sfn_sn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_ul_cqi > cqi_meas_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_pucch_dbm > pucch_dbm_;
  ::google::protobuf::uint32 sfn_sn_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_pucch_dbm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_pucch_dbm) */ {
 public:
  flex_pucch_dbm();
  virtual ~flex_pucch_dbm();

  flex_pucch_dbm(const flex_pucch_dbm& from);

  inline flex_pucch_dbm& operator=(const flex_pucch_dbm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_pucch_dbm& default_instance();

  static inline const flex_pucch_dbm* internal_default_instance() {
    return reinterpret_cast<const flex_pucch_dbm*>(
               &_flex_pucch_dbm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(flex_pucch_dbm* other);

  // implements Message ----------------------------------------------

  inline flex_pucch_dbm* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_pucch_dbm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_pucch_dbm& from);
  void MergeFrom(const flex_pucch_dbm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_pucch_dbm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 p0_pucch_dbm = 1;
  bool has_p0_pucch_dbm() const;
  void clear_p0_pucch_dbm();
  static const int kP0PucchDbmFieldNumber = 1;
  ::google::protobuf::int32 p0_pucch_dbm() const;
  void set_p0_pucch_dbm(::google::protobuf::int32 value);

  // optional uint32 serv_cell_index = 2;
  bool has_serv_cell_index() const;
  void clear_serv_cell_index();
  static const int kServCellIndexFieldNumber = 2;
  ::google::protobuf::uint32 serv_cell_index() const;
  void set_serv_cell_index(::google::protobuf::uint32 value);

  // optional uint32 p0_pucch_updated = 3;
  bool has_p0_pucch_updated() const;
  void clear_p0_pucch_updated();
  static const int kP0PucchUpdatedFieldNumber = 3;
  ::google::protobuf::uint32 p0_pucch_updated() const;
  void set_p0_pucch_updated(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_pucch_dbm)
 private:
  void set_has_p0_pucch_dbm();
  void clear_has_p0_pucch_dbm();
  void set_has_serv_cell_index();
  void clear_has_serv_cell_index();
  void set_has_p0_pucch_updated();
  void clear_has_p0_pucch_updated();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 p0_pucch_dbm_;
  ::google::protobuf::uint32 serv_cell_index_;
  ::google::protobuf::uint32 p0_pucch_updated_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_noise_interference_report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_noise_interference_report) */ {
 public:
  flex_noise_interference_report();
  virtual ~flex_noise_interference_report();

  flex_noise_interference_report(const flex_noise_interference_report& from);

  inline flex_noise_interference_report& operator=(const flex_noise_interference_report& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_noise_interference_report& default_instance();

  static inline const flex_noise_interference_report* internal_default_instance() {
    return reinterpret_cast<const flex_noise_interference_report*>(
               &_flex_noise_interference_report_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(flex_noise_interference_report* other);

  // implements Message ----------------------------------------------

  inline flex_noise_interference_report* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_noise_interference_report* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_noise_interference_report& from);
  void MergeFrom(const flex_noise_interference_report& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_noise_interference_report* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sfn_sf = 1;
  bool has_sfn_sf() const;
  void clear_sfn_sf();
  static const int kSfnSfFieldNumber = 1;
  ::google::protobuf::uint32 sfn_sf() const;
  void set_sfn_sf(::google::protobuf::uint32 value);

  // optional uint32 rip = 2;
  bool has_rip() const;
  void clear_rip();
  static const int kRipFieldNumber = 2;
  ::google::protobuf::uint32 rip() const;
  void set_rip(::google::protobuf::uint32 value);

  // optional uint32 tnp = 3;
  bool has_tnp() const;
  void clear_tnp();
  static const int kTnpFieldNumber = 3;
  ::google::protobuf::uint32 tnp() const;
  void set_tnp(::google::protobuf::uint32 value);

  // optional int32 p0_nominal_pucch = 4;
  bool has_p0_nominal_pucch() const;
  void clear_p0_nominal_pucch();
  static const int kP0NominalPucchFieldNumber = 4;
  ::google::protobuf::int32 p0_nominal_pucch() const;
  void set_p0_nominal_pucch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_noise_interference_report)
 private:
  void set_has_sfn_sf();
  void clear_has_sfn_sf();
  void set_has_rip();
  void clear_has_rip();
  void set_has_tnp();
  void clear_has_tnp();
  void set_has_p0_nominal_pucch();
  void clear_has_p0_nominal_pucch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 sfn_sf_;
  ::google::protobuf::uint32 rip_;
  ::google::protobuf::uint32 tnp_;
  ::google::protobuf::int32 p0_nominal_pucch_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_rrc_measurements : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_rrc_measurements) */ {
 public:
  flex_rrc_measurements();
  virtual ~flex_rrc_measurements();

  flex_rrc_measurements(const flex_rrc_measurements& from);

  inline flex_rrc_measurements& operator=(const flex_rrc_measurements& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_rrc_measurements& default_instance();

  static inline const flex_rrc_measurements* internal_default_instance() {
    return reinterpret_cast<const flex_rrc_measurements*>(
               &_flex_rrc_measurements_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(flex_rrc_measurements* other);

  // implements Message ----------------------------------------------

  inline flex_rrc_measurements* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_rrc_measurements* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_rrc_measurements& from);
  void MergeFrom(const flex_rrc_measurements& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_rrc_measurements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.flex_neigh_cells_measurements neigh_meas = 4;
  bool has_neigh_meas() const;
  void clear_neigh_meas();
  static const int kNeighMeasFieldNumber = 4;
  const ::protocol::flex_neigh_cells_measurements& neigh_meas() const;
  ::protocol::flex_neigh_cells_measurements* mutable_neigh_meas();
  ::protocol::flex_neigh_cells_measurements* release_neigh_meas();
  void set_allocated_neigh_meas(::protocol::flex_neigh_cells_measurements* neigh_meas);

  // optional int32 measid = 1;
  bool has_measid() const;
  void clear_measid();
  static const int kMeasidFieldNumber = 1;
  ::google::protobuf::int32 measid() const;
  void set_measid(::google::protobuf::int32 value);

  // optional int32 pcell_rsrp = 2;
  bool has_pcell_rsrp() const;
  void clear_pcell_rsrp();
  static const int kPcellRsrpFieldNumber = 2;
  ::google::protobuf::int32 pcell_rsrp() const;
  void set_pcell_rsrp(::google::protobuf::int32 value);

  // optional int32 pcell_rsrq = 3;
  bool has_pcell_rsrq() const;
  void clear_pcell_rsrq();
  static const int kPcellRsrqFieldNumber = 3;
  ::google::protobuf::int32 pcell_rsrq() const;
  void set_pcell_rsrq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_rrc_measurements)
 private:
  void set_has_measid();
  void clear_has_measid();
  void set_has_pcell_rsrp();
  void clear_has_pcell_rsrp();
  void set_has_pcell_rsrq();
  void clear_has_pcell_rsrq();
  void set_has_neigh_meas();
  void clear_has_neigh_meas();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::protocol::flex_neigh_cells_measurements* neigh_meas_;
  ::google::protobuf::int32 measid_;
  ::google::protobuf::int32 pcell_rsrp_;
  ::google::protobuf::int32 pcell_rsrq_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_neigh_cells_measurements : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_neigh_cells_measurements) */ {
 public:
  flex_neigh_cells_measurements();
  virtual ~flex_neigh_cells_measurements();

  flex_neigh_cells_measurements(const flex_neigh_cells_measurements& from);

  inline flex_neigh_cells_measurements& operator=(const flex_neigh_cells_measurements& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_neigh_cells_measurements& default_instance();

  static inline const flex_neigh_cells_measurements* internal_default_instance() {
    return reinterpret_cast<const flex_neigh_cells_measurements*>(
               &_flex_neigh_cells_measurements_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(flex_neigh_cells_measurements* other);

  // implements Message ----------------------------------------------

  inline flex_neigh_cells_measurements* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_neigh_cells_measurements* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_neigh_cells_measurements& from);
  void MergeFrom(const flex_neigh_cells_measurements& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_neigh_cells_measurements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.flex_eutra_measurements eutra_meas = 1;
  int eutra_meas_size() const;
  void clear_eutra_meas();
  static const int kEutraMeasFieldNumber = 1;
  const ::protocol::flex_eutra_measurements& eutra_meas(int index) const;
  ::protocol::flex_eutra_measurements* mutable_eutra_meas(int index);
  ::protocol::flex_eutra_measurements* add_eutra_meas();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_eutra_measurements >*
      mutable_eutra_meas();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_eutra_measurements >&
      eutra_meas() const;

  // @@protoc_insertion_point(class_scope:protocol.flex_neigh_cells_measurements)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_eutra_measurements > eutra_meas_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_eutra_measurements : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_eutra_measurements) */ {
 public:
  flex_eutra_measurements();
  virtual ~flex_eutra_measurements();

  flex_eutra_measurements(const flex_eutra_measurements& from);

  inline flex_eutra_measurements& operator=(const flex_eutra_measurements& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_eutra_measurements& default_instance();

  static inline const flex_eutra_measurements* internal_default_instance() {
    return reinterpret_cast<const flex_eutra_measurements*>(
               &_flex_eutra_measurements_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(flex_eutra_measurements* other);

  // implements Message ----------------------------------------------

  inline flex_eutra_measurements* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_eutra_measurements* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_eutra_measurements& from);
  void MergeFrom(const flex_eutra_measurements& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_eutra_measurements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.flex_eutra_cgi_measurements cgi_meas = 2;
  bool has_cgi_meas() const;
  void clear_cgi_meas();
  static const int kCgiMeasFieldNumber = 2;
  const ::protocol::flex_eutra_cgi_measurements& cgi_meas() const;
  ::protocol::flex_eutra_cgi_measurements* mutable_cgi_meas();
  ::protocol::flex_eutra_cgi_measurements* release_cgi_meas();
  void set_allocated_cgi_meas(::protocol::flex_eutra_cgi_measurements* cgi_meas);

  // optional .protocol.flex_eutra_ref_signal_meas meas_result = 3;
  bool has_meas_result() const;
  void clear_meas_result();
  static const int kMeasResultFieldNumber = 3;
  const ::protocol::flex_eutra_ref_signal_meas& meas_result() const;
  ::protocol::flex_eutra_ref_signal_meas* mutable_meas_result();
  ::protocol::flex_eutra_ref_signal_meas* release_meas_result();
  void set_allocated_meas_result(::protocol::flex_eutra_ref_signal_meas* meas_result);

  // optional int32 phys_cell_id = 1;
  bool has_phys_cell_id() const;
  void clear_phys_cell_id();
  static const int kPhysCellIdFieldNumber = 1;
  ::google::protobuf::int32 phys_cell_id() const;
  void set_phys_cell_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_eutra_measurements)
 private:
  void set_has_phys_cell_id();
  void clear_has_phys_cell_id();
  void set_has_cgi_meas();
  void clear_has_cgi_meas();
  void set_has_meas_result();
  void clear_has_meas_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::protocol::flex_eutra_cgi_measurements* cgi_meas_;
  ::protocol::flex_eutra_ref_signal_meas* meas_result_;
  ::google::protobuf::int32 phys_cell_id_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_eutra_cgi_measurements : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_eutra_cgi_measurements) */ {
 public:
  flex_eutra_cgi_measurements();
  virtual ~flex_eutra_cgi_measurements();

  flex_eutra_cgi_measurements(const flex_eutra_cgi_measurements& from);

  inline flex_eutra_cgi_measurements& operator=(const flex_eutra_cgi_measurements& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_eutra_cgi_measurements& default_instance();

  static inline const flex_eutra_cgi_measurements* internal_default_instance() {
    return reinterpret_cast<const flex_eutra_cgi_measurements*>(
               &_flex_eutra_cgi_measurements_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(flex_eutra_cgi_measurements* other);

  // implements Message ----------------------------------------------

  inline flex_eutra_cgi_measurements* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_eutra_cgi_measurements* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_eutra_cgi_measurements& from);
  void MergeFrom(const flex_eutra_cgi_measurements& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_eutra_cgi_measurements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.flex_plmn plmn = 3;
  int plmn_size() const;
  void clear_plmn();
  static const int kPlmnFieldNumber = 3;
  const ::protocol::flex_plmn& plmn(int index) const;
  ::protocol::flex_plmn* mutable_plmn(int index);
  ::protocol::flex_plmn* add_plmn();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_plmn >*
      mutable_plmn();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_plmn >&
      plmn() const;

  // optional .protocol.flex_cell_global_eutra_id cgi = 1;
  bool has_cgi() const;
  void clear_cgi();
  static const int kCgiFieldNumber = 1;
  const ::protocol::flex_cell_global_eutra_id& cgi() const;
  ::protocol::flex_cell_global_eutra_id* mutable_cgi();
  ::protocol::flex_cell_global_eutra_id* release_cgi();
  void set_allocated_cgi(::protocol::flex_cell_global_eutra_id* cgi);

  // optional uint32 tracking_area_code = 2;
  bool has_tracking_area_code() const;
  void clear_tracking_area_code();
  static const int kTrackingAreaCodeFieldNumber = 2;
  ::google::protobuf::uint32 tracking_area_code() const;
  void set_tracking_area_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_eutra_cgi_measurements)
 private:
  void set_has_cgi();
  void clear_has_cgi();
  void set_has_tracking_area_code();
  void clear_has_tracking_area_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_plmn > plmn_;
  ::protocol::flex_cell_global_eutra_id* cgi_;
  ::google::protobuf::uint32 tracking_area_code_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_cell_global_eutra_id : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_cell_global_eutra_id) */ {
 public:
  flex_cell_global_eutra_id();
  virtual ~flex_cell_global_eutra_id();

  flex_cell_global_eutra_id(const flex_cell_global_eutra_id& from);

  inline flex_cell_global_eutra_id& operator=(const flex_cell_global_eutra_id& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_cell_global_eutra_id& default_instance();

  static inline const flex_cell_global_eutra_id* internal_default_instance() {
    return reinterpret_cast<const flex_cell_global_eutra_id*>(
               &_flex_cell_global_eutra_id_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(flex_cell_global_eutra_id* other);

  // implements Message ----------------------------------------------

  inline flex_cell_global_eutra_id* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_cell_global_eutra_id* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_cell_global_eutra_id& from);
  void MergeFrom(const flex_cell_global_eutra_id& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_cell_global_eutra_id* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.flex_plmn plmn = 1;
  bool has_plmn() const;
  void clear_plmn();
  static const int kPlmnFieldNumber = 1;
  const ::protocol::flex_plmn& plmn() const;
  ::protocol::flex_plmn* mutable_plmn();
  ::protocol::flex_plmn* release_plmn();
  void set_allocated_plmn(::protocol::flex_plmn* plmn);

  // optional uint32 cell_id = 2;
  bool has_cell_id() const;
  void clear_cell_id();
  static const int kCellIdFieldNumber = 2;
  ::google::protobuf::uint32 cell_id() const;
  void set_cell_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_cell_global_eutra_id)
 private:
  void set_has_plmn();
  void clear_has_plmn();
  void set_has_cell_id();
  void clear_has_cell_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::protocol::flex_plmn* plmn_;
  ::google::protobuf::uint32 cell_id_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_eutra_ref_signal_meas : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_eutra_ref_signal_meas) */ {
 public:
  flex_eutra_ref_signal_meas();
  virtual ~flex_eutra_ref_signal_meas();

  flex_eutra_ref_signal_meas(const flex_eutra_ref_signal_meas& from);

  inline flex_eutra_ref_signal_meas& operator=(const flex_eutra_ref_signal_meas& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_eutra_ref_signal_meas& default_instance();

  static inline const flex_eutra_ref_signal_meas* internal_default_instance() {
    return reinterpret_cast<const flex_eutra_ref_signal_meas*>(
               &_flex_eutra_ref_signal_meas_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(flex_eutra_ref_signal_meas* other);

  // implements Message ----------------------------------------------

  inline flex_eutra_ref_signal_meas* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_eutra_ref_signal_meas* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_eutra_ref_signal_meas& from);
  void MergeFrom(const flex_eutra_ref_signal_meas& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_eutra_ref_signal_meas* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rsrp = 1;
  bool has_rsrp() const;
  void clear_rsrp();
  static const int kRsrpFieldNumber = 1;
  ::google::protobuf::int32 rsrp() const;
  void set_rsrp(::google::protobuf::int32 value);

  // optional int32 rsrq = 2;
  bool has_rsrq() const;
  void clear_rsrq();
  static const int kRsrqFieldNumber = 2;
  ::google::protobuf::int32 rsrq() const;
  void set_rsrq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_eutra_ref_signal_meas)
 private:
  void set_has_rsrp();
  void clear_has_rsrp();
  void set_has_rsrq();
  void clear_has_rsrq();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 rsrp_;
  ::google::protobuf::int32 rsrq_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_pdcp_stats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_pdcp_stats) */ {
 public:
  flex_pdcp_stats();
  virtual ~flex_pdcp_stats();

  flex_pdcp_stats(const flex_pdcp_stats& from);

  inline flex_pdcp_stats& operator=(const flex_pdcp_stats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_pdcp_stats& default_instance();

  static inline const flex_pdcp_stats* internal_default_instance() {
    return reinterpret_cast<const flex_pdcp_stats*>(
               &_flex_pdcp_stats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(flex_pdcp_stats* other);

  // implements Message ----------------------------------------------

  inline flex_pdcp_stats* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_pdcp_stats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_pdcp_stats& from);
  void MergeFrom(const flex_pdcp_stats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_pdcp_stats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pkt_tx = 1;
  bool has_pkt_tx() const;
  void clear_pkt_tx();
  static const int kPktTxFieldNumber = 1;
  ::google::protobuf::uint32 pkt_tx() const;
  void set_pkt_tx(::google::protobuf::uint32 value);

  // optional uint32 pkt_tx_bytes = 2;
  bool has_pkt_tx_bytes() const;
  void clear_pkt_tx_bytes();
  static const int kPktTxBytesFieldNumber = 2;
  ::google::protobuf::uint32 pkt_tx_bytes() const;
  void set_pkt_tx_bytes(::google::protobuf::uint32 value);

  // optional uint32 pkt_tx_sn = 3;
  bool has_pkt_tx_sn() const;
  void clear_pkt_tx_sn();
  static const int kPktTxSnFieldNumber = 3;
  ::google::protobuf::uint32 pkt_tx_sn() const;
  void set_pkt_tx_sn(::google::protobuf::uint32 value);

  // optional uint32 pkt_tx_w = 4;
  bool has_pkt_tx_w() const;
  void clear_pkt_tx_w();
  static const int kPktTxWFieldNumber = 4;
  ::google::protobuf::uint32 pkt_tx_w() const;
  void set_pkt_tx_w(::google::protobuf::uint32 value);

  // optional uint32 pkt_tx_bytes_w = 5;
  bool has_pkt_tx_bytes_w() const;
  void clear_pkt_tx_bytes_w();
  static const int kPktTxBytesWFieldNumber = 5;
  ::google::protobuf::uint32 pkt_tx_bytes_w() const;
  void set_pkt_tx_bytes_w(::google::protobuf::uint32 value);

  // optional uint32 pkt_tx_aiat = 7;
  bool has_pkt_tx_aiat() const;
  void clear_pkt_tx_aiat();
  static const int kPktTxAiatFieldNumber = 7;
  ::google::protobuf::uint32 pkt_tx_aiat() const;
  void set_pkt_tx_aiat(::google::protobuf::uint32 value);

  // optional uint32 pkt_tx_aiat_w = 8;
  bool has_pkt_tx_aiat_w() const;
  void clear_pkt_tx_aiat_w();
  static const int kPktTxAiatWFieldNumber = 8;
  ::google::protobuf::uint32 pkt_tx_aiat_w() const;
  void set_pkt_tx_aiat_w(::google::protobuf::uint32 value);

  // optional uint32 pkt_rx = 9;
  bool has_pkt_rx() const;
  void clear_pkt_rx();
  static const int kPktRxFieldNumber = 9;
  ::google::protobuf::uint32 pkt_rx() const;
  void set_pkt_rx(::google::protobuf::uint32 value);

  // optional uint32 pkt_rx_bytes = 10;
  bool has_pkt_rx_bytes() const;
  void clear_pkt_rx_bytes();
  static const int kPktRxBytesFieldNumber = 10;
  ::google::protobuf::uint32 pkt_rx_bytes() const;
  void set_pkt_rx_bytes(::google::protobuf::uint32 value);

  // optional uint32 pkt_rx_sn = 11;
  bool has_pkt_rx_sn() const;
  void clear_pkt_rx_sn();
  static const int kPktRxSnFieldNumber = 11;
  ::google::protobuf::uint32 pkt_rx_sn() const;
  void set_pkt_rx_sn(::google::protobuf::uint32 value);

  // optional uint32 pkt_rx_w = 12;
  bool has_pkt_rx_w() const;
  void clear_pkt_rx_w();
  static const int kPktRxWFieldNumber = 12;
  ::google::protobuf::uint32 pkt_rx_w() const;
  void set_pkt_rx_w(::google::protobuf::uint32 value);

  // optional uint32 pkt_rx_bytes_w = 13;
  bool has_pkt_rx_bytes_w() const;
  void clear_pkt_rx_bytes_w();
  static const int kPktRxBytesWFieldNumber = 13;
  ::google::protobuf::uint32 pkt_rx_bytes_w() const;
  void set_pkt_rx_bytes_w(::google::protobuf::uint32 value);

  // optional uint32 pkt_rx_aiat = 14;
  bool has_pkt_rx_aiat() const;
  void clear_pkt_rx_aiat();
  static const int kPktRxAiatFieldNumber = 14;
  ::google::protobuf::uint32 pkt_rx_aiat() const;
  void set_pkt_rx_aiat(::google::protobuf::uint32 value);

  // optional uint32 pkt_rx_aiat_w = 15;
  bool has_pkt_rx_aiat_w() const;
  void clear_pkt_rx_aiat_w();
  static const int kPktRxAiatWFieldNumber = 15;
  ::google::protobuf::uint32 pkt_rx_aiat_w() const;
  void set_pkt_rx_aiat_w(::google::protobuf::uint32 value);

  // optional uint64 sfn = 17;
  bool has_sfn() const;
  void clear_sfn();
  static const int kSfnFieldNumber = 17;
  ::google::protobuf::uint64 sfn() const;
  void set_sfn(::google::protobuf::uint64 value);

  // optional uint32 pkt_rx_oo = 16;
  bool has_pkt_rx_oo() const;
  void clear_pkt_rx_oo();
  static const int kPktRxOoFieldNumber = 16;
  ::google::protobuf::uint32 pkt_rx_oo() const;
  void set_pkt_rx_oo(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_pdcp_stats)
 private:
  void set_has_pkt_tx();
  void clear_has_pkt_tx();
  void set_has_pkt_tx_bytes();
  void clear_has_pkt_tx_bytes();
  void set_has_pkt_tx_sn();
  void clear_has_pkt_tx_sn();
  void set_has_pkt_tx_w();
  void clear_has_pkt_tx_w();
  void set_has_pkt_tx_bytes_w();
  void clear_has_pkt_tx_bytes_w();
  void set_has_pkt_tx_aiat();
  void clear_has_pkt_tx_aiat();
  void set_has_pkt_tx_aiat_w();
  void clear_has_pkt_tx_aiat_w();
  void set_has_pkt_rx();
  void clear_has_pkt_rx();
  void set_has_pkt_rx_bytes();
  void clear_has_pkt_rx_bytes();
  void set_has_pkt_rx_sn();
  void clear_has_pkt_rx_sn();
  void set_has_pkt_rx_w();
  void clear_has_pkt_rx_w();
  void set_has_pkt_rx_bytes_w();
  void clear_has_pkt_rx_bytes_w();
  void set_has_pkt_rx_aiat();
  void clear_has_pkt_rx_aiat();
  void set_has_pkt_rx_aiat_w();
  void clear_has_pkt_rx_aiat_w();
  void set_has_pkt_rx_oo();
  void clear_has_pkt_rx_oo();
  void set_has_sfn();
  void clear_has_sfn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 pkt_tx_;
  ::google::protobuf::uint32 pkt_tx_bytes_;
  ::google::protobuf::uint32 pkt_tx_sn_;
  ::google::protobuf::uint32 pkt_tx_w_;
  ::google::protobuf::uint32 pkt_tx_bytes_w_;
  ::google::protobuf::uint32 pkt_tx_aiat_;
  ::google::protobuf::uint32 pkt_tx_aiat_w_;
  ::google::protobuf::uint32 pkt_rx_;
  ::google::protobuf::uint32 pkt_rx_bytes_;
  ::google::protobuf::uint32 pkt_rx_sn_;
  ::google::protobuf::uint32 pkt_rx_w_;
  ::google::protobuf::uint32 pkt_rx_bytes_w_;
  ::google::protobuf::uint32 pkt_rx_aiat_;
  ::google::protobuf::uint32 pkt_rx_aiat_w_;
  ::google::protobuf::uint64 sfn_;
  ::google::protobuf::uint32 pkt_rx_oo_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_mac_stats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_mac_stats) */ {
 public:
  flex_mac_stats();
  virtual ~flex_mac_stats();

  flex_mac_stats(const flex_mac_stats& from);

  inline flex_mac_stats& operator=(const flex_mac_stats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_mac_stats& default_instance();

  static inline const flex_mac_stats* internal_default_instance() {
    return reinterpret_cast<const flex_mac_stats*>(
               &_flex_mac_stats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(flex_mac_stats* other);

  // implements Message ----------------------------------------------

  inline flex_mac_stats* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_mac_stats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_mac_stats& from);
  void MergeFrom(const flex_mac_stats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_mac_stats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.flex_mac_sdus_dl mac_sdus_dl = 21;
  int mac_sdus_dl_size() const;
  void clear_mac_sdus_dl();
  static const int kMacSdusDlFieldNumber = 21;
  const ::protocol::flex_mac_sdus_dl& mac_sdus_dl(int index) const;
  ::protocol::flex_mac_sdus_dl* mutable_mac_sdus_dl(int index);
  ::protocol::flex_mac_sdus_dl* add_mac_sdus_dl();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_mac_sdus_dl >*
      mutable_mac_sdus_dl();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_mac_sdus_dl >&
      mac_sdus_dl() const;

  // optional uint32 tbs_dl = 1;
  bool has_tbs_dl() const;
  void clear_tbs_dl();
  static const int kTbsDlFieldNumber = 1;
  ::google::protobuf::uint32 tbs_dl() const;
  void set_tbs_dl(::google::protobuf::uint32 value);

  // optional uint32 tbs_ul = 2;
  bool has_tbs_ul() const;
  void clear_tbs_ul();
  static const int kTbsUlFieldNumber = 2;
  ::google::protobuf::uint32 tbs_ul() const;
  void set_tbs_ul(::google::protobuf::uint32 value);

  // optional uint32 prb_retx_dl = 3;
  bool has_prb_retx_dl() const;
  void clear_prb_retx_dl();
  static const int kPrbRetxDlFieldNumber = 3;
  ::google::protobuf::uint32 prb_retx_dl() const;
  void set_prb_retx_dl(::google::protobuf::uint32 value);

  // optional uint32 prb_retx_ul = 4;
  bool has_prb_retx_ul() const;
  void clear_prb_retx_ul();
  static const int kPrbRetxUlFieldNumber = 4;
  ::google::protobuf::uint32 prb_retx_ul() const;
  void set_prb_retx_ul(::google::protobuf::uint32 value);

  // optional uint32 prb_dl = 5;
  bool has_prb_dl() const;
  void clear_prb_dl();
  static const int kPrbDlFieldNumber = 5;
  ::google::protobuf::uint32 prb_dl() const;
  void set_prb_dl(::google::protobuf::uint32 value);

  // optional uint32 prb_ul = 6;
  bool has_prb_ul() const;
  void clear_prb_ul();
  static const int kPrbUlFieldNumber = 6;
  ::google::protobuf::uint32 prb_ul() const;
  void set_prb_ul(::google::protobuf::uint32 value);

  // optional uint32 mcs1_dl = 7;
  bool has_mcs1_dl() const;
  void clear_mcs1_dl();
  static const int kMcs1DlFieldNumber = 7;
  ::google::protobuf::uint32 mcs1_dl() const;
  void set_mcs1_dl(::google::protobuf::uint32 value);

  // optional uint32 mcs2_dl = 8;
  bool has_mcs2_dl() const;
  void clear_mcs2_dl();
  static const int kMcs2DlFieldNumber = 8;
  ::google::protobuf::uint32 mcs2_dl() const;
  void set_mcs2_dl(::google::protobuf::uint32 value);

  // optional uint32 mcs1_ul = 9;
  bool has_mcs1_ul() const;
  void clear_mcs1_ul();
  static const int kMcs1UlFieldNumber = 9;
  ::google::protobuf::uint32 mcs1_ul() const;
  void set_mcs1_ul(::google::protobuf::uint32 value);

  // optional uint32 mcs2_ul = 10;
  bool has_mcs2_ul() const;
  void clear_mcs2_ul();
  static const int kMcs2UlFieldNumber = 10;
  ::google::protobuf::uint32 mcs2_ul() const;
  void set_mcs2_ul(::google::protobuf::uint32 value);

  // optional uint32 total_bytes_sdus_ul = 11;
  bool has_total_bytes_sdus_ul() const;
  void clear_total_bytes_sdus_ul();
  static const int kTotalBytesSdusUlFieldNumber = 11;
  ::google::protobuf::uint32 total_bytes_sdus_ul() const;
  void set_total_bytes_sdus_ul(::google::protobuf::uint32 value);

  // optional uint32 total_bytes_sdus_dl = 12;
  bool has_total_bytes_sdus_dl() const;
  void clear_total_bytes_sdus_dl();
  static const int kTotalBytesSdusDlFieldNumber = 12;
  ::google::protobuf::uint32 total_bytes_sdus_dl() const;
  void set_total_bytes_sdus_dl(::google::protobuf::uint32 value);

  // optional uint32 total_prb_retx_dl = 13;
  bool has_total_prb_retx_dl() const;
  void clear_total_prb_retx_dl();
  static const int kTotalPrbRetxDlFieldNumber = 13;
  ::google::protobuf::uint32 total_prb_retx_dl() const;
  void set_total_prb_retx_dl(::google::protobuf::uint32 value);

  // optional uint32 total_prb_retx_ul = 14;
  bool has_total_prb_retx_ul() const;
  void clear_total_prb_retx_ul();
  static const int kTotalPrbRetxUlFieldNumber = 14;
  ::google::protobuf::uint32 total_prb_retx_ul() const;
  void set_total_prb_retx_ul(::google::protobuf::uint32 value);

  // optional uint32 total_prb_dl = 15;
  bool has_total_prb_dl() const;
  void clear_total_prb_dl();
  static const int kTotalPrbDlFieldNumber = 15;
  ::google::protobuf::uint32 total_prb_dl() const;
  void set_total_prb_dl(::google::protobuf::uint32 value);

  // optional uint32 total_prb_ul = 16;
  bool has_total_prb_ul() const;
  void clear_total_prb_ul();
  static const int kTotalPrbUlFieldNumber = 16;
  ::google::protobuf::uint32 total_prb_ul() const;
  void set_total_prb_ul(::google::protobuf::uint32 value);

  // optional uint32 total_pdu_dl = 17;
  bool has_total_pdu_dl() const;
  void clear_total_pdu_dl();
  static const int kTotalPduDlFieldNumber = 17;
  ::google::protobuf::uint32 total_pdu_dl() const;
  void set_total_pdu_dl(::google::protobuf::uint32 value);

  // optional uint32 total_pdu_ul = 18;
  bool has_total_pdu_ul() const;
  void clear_total_pdu_ul();
  static const int kTotalPduUlFieldNumber = 18;
  ::google::protobuf::uint32 total_pdu_ul() const;
  void set_total_pdu_ul(::google::protobuf::uint32 value);

  // optional uint32 total_tbs_dl = 19;
  bool has_total_tbs_dl() const;
  void clear_total_tbs_dl();
  static const int kTotalTbsDlFieldNumber = 19;
  ::google::protobuf::uint32 total_tbs_dl() const;
  void set_total_tbs_dl(::google::protobuf::uint32 value);

  // optional uint32 total_tbs_ul = 20;
  bool has_total_tbs_ul() const;
  void clear_total_tbs_ul();
  static const int kTotalTbsUlFieldNumber = 20;
  ::google::protobuf::uint32 total_tbs_ul() const;
  void set_total_tbs_ul(::google::protobuf::uint32 value);

  // optional uint32 harq_round = 22;
  bool has_harq_round() const;
  void clear_harq_round();
  static const int kHarqRoundFieldNumber = 22;
  ::google::protobuf::uint32 harq_round() const;
  void set_harq_round(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_mac_stats)
 private:
  void set_has_tbs_dl();
  void clear_has_tbs_dl();
  void set_has_tbs_ul();
  void clear_has_tbs_ul();
  void set_has_prb_retx_dl();
  void clear_has_prb_retx_dl();
  void set_has_prb_retx_ul();
  void clear_has_prb_retx_ul();
  void set_has_prb_dl();
  void clear_has_prb_dl();
  void set_has_prb_ul();
  void clear_has_prb_ul();
  void set_has_mcs1_dl();
  void clear_has_mcs1_dl();
  void set_has_mcs2_dl();
  void clear_has_mcs2_dl();
  void set_has_mcs1_ul();
  void clear_has_mcs1_ul();
  void set_has_mcs2_ul();
  void clear_has_mcs2_ul();
  void set_has_total_bytes_sdus_ul();
  void clear_has_total_bytes_sdus_ul();
  void set_has_total_bytes_sdus_dl();
  void clear_has_total_bytes_sdus_dl();
  void set_has_total_prb_retx_dl();
  void clear_has_total_prb_retx_dl();
  void set_has_total_prb_retx_ul();
  void clear_has_total_prb_retx_ul();
  void set_has_total_prb_dl();
  void clear_has_total_prb_dl();
  void set_has_total_prb_ul();
  void clear_has_total_prb_ul();
  void set_has_total_pdu_dl();
  void clear_has_total_pdu_dl();
  void set_has_total_pdu_ul();
  void clear_has_total_pdu_ul();
  void set_has_total_tbs_dl();
  void clear_has_total_tbs_dl();
  void set_has_total_tbs_ul();
  void clear_has_total_tbs_ul();
  void set_has_harq_round();
  void clear_has_harq_round();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_mac_sdus_dl > mac_sdus_dl_;
  ::google::protobuf::uint32 tbs_dl_;
  ::google::protobuf::uint32 tbs_ul_;
  ::google::protobuf::uint32 prb_retx_dl_;
  ::google::protobuf::uint32 prb_retx_ul_;
  ::google::protobuf::uint32 prb_dl_;
  ::google::protobuf::uint32 prb_ul_;
  ::google::protobuf::uint32 mcs1_dl_;
  ::google::protobuf::uint32 mcs2_dl_;
  ::google::protobuf::uint32 mcs1_ul_;
  ::google::protobuf::uint32 mcs2_ul_;
  ::google::protobuf::uint32 total_bytes_sdus_ul_;
  ::google::protobuf::uint32 total_bytes_sdus_dl_;
  ::google::protobuf::uint32 total_prb_retx_dl_;
  ::google::protobuf::uint32 total_prb_retx_ul_;
  ::google::protobuf::uint32 total_prb_dl_;
  ::google::protobuf::uint32 total_prb_ul_;
  ::google::protobuf::uint32 total_pdu_dl_;
  ::google::protobuf::uint32 total_pdu_ul_;
  ::google::protobuf::uint32 total_tbs_dl_;
  ::google::protobuf::uint32 total_tbs_ul_;
  ::google::protobuf::uint32 harq_round_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_mac_sdus_dl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_mac_sdus_dl) */ {
 public:
  flex_mac_sdus_dl();
  virtual ~flex_mac_sdus_dl();

  flex_mac_sdus_dl(const flex_mac_sdus_dl& from);

  inline flex_mac_sdus_dl& operator=(const flex_mac_sdus_dl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_mac_sdus_dl& default_instance();

  static inline const flex_mac_sdus_dl* internal_default_instance() {
    return reinterpret_cast<const flex_mac_sdus_dl*>(
               &_flex_mac_sdus_dl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(flex_mac_sdus_dl* other);

  // implements Message ----------------------------------------------

  inline flex_mac_sdus_dl* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_mac_sdus_dl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_mac_sdus_dl& from);
  void MergeFrom(const flex_mac_sdus_dl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_mac_sdus_dl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sdu_length = 1;
  bool has_sdu_length() const;
  void clear_sdu_length();
  static const int kSduLengthFieldNumber = 1;
  ::google::protobuf::uint32 sdu_length() const;
  void set_sdu_length(::google::protobuf::uint32 value);

  // optional uint32 lcid = 2;
  bool has_lcid() const;
  void clear_lcid();
  static const int kLcidFieldNumber = 2;
  ::google::protobuf::uint32 lcid() const;
  void set_lcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_mac_sdus_dl)
 private:
  void set_has_sdu_length();
  void clear_has_sdu_length();
  void set_has_lcid();
  void clear_has_lcid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 sdu_length_;
  ::google::protobuf::uint32 lcid_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_gtp_stats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_gtp_stats) */ {
 public:
  flex_gtp_stats();
  virtual ~flex_gtp_stats();

  flex_gtp_stats(const flex_gtp_stats& from);

  inline flex_gtp_stats& operator=(const flex_gtp_stats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_gtp_stats& default_instance();

  static inline const flex_gtp_stats* internal_default_instance() {
    return reinterpret_cast<const flex_gtp_stats*>(
               &_flex_gtp_stats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(flex_gtp_stats* other);

  // implements Message ----------------------------------------------

  inline flex_gtp_stats* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_gtp_stats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_gtp_stats& from);
  void MergeFrom(const flex_gtp_stats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_gtp_stats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string addr_enb = 3;
  bool has_addr_enb() const;
  void clear_addr_enb();
  static const int kAddrEnbFieldNumber = 3;
  const ::std::string& addr_enb() const;
  void set_addr_enb(const ::std::string& value);
  #if LANG_CXX11
  void set_addr_enb(::std::string&& value);
  #endif
  void set_addr_enb(const char* value);
  void set_addr_enb(const char* value, size_t size);
  ::std::string* mutable_addr_enb();
  ::std::string* release_addr_enb();
  void set_allocated_addr_enb(::std::string* addr_enb);

  // optional string addr_sgw = 5;
  bool has_addr_sgw() const;
  void clear_addr_sgw();
  static const int kAddrSgwFieldNumber = 5;
  const ::std::string& addr_sgw() const;
  void set_addr_sgw(const ::std::string& value);
  #if LANG_CXX11
  void set_addr_sgw(::std::string&& value);
  #endif
  void set_addr_sgw(const char* value);
  void set_addr_sgw(const char* value, size_t size);
  ::std::string* mutable_addr_sgw();
  ::std::string* release_addr_sgw();
  void set_allocated_addr_sgw(::std::string* addr_sgw);

  // optional uint32 e_rab_id = 1;
  bool has_e_rab_id() const;
  void clear_e_rab_id();
  static const int kERabIdFieldNumber = 1;
  ::google::protobuf::uint32 e_rab_id() const;
  void set_e_rab_id(::google::protobuf::uint32 value);

  // optional uint32 teid_enb = 2;
  bool has_teid_enb() const;
  void clear_teid_enb();
  static const int kTeidEnbFieldNumber = 2;
  ::google::protobuf::uint32 teid_enb() const;
  void set_teid_enb(::google::protobuf::uint32 value);

  // optional uint32 teid_sgw = 4;
  bool has_teid_sgw() const;
  void clear_teid_sgw();
  static const int kTeidSgwFieldNumber = 4;
  ::google::protobuf::uint32 teid_sgw() const;
  void set_teid_sgw(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_gtp_stats)
 private:
  void set_has_e_rab_id();
  void clear_has_e_rab_id();
  void set_has_teid_enb();
  void clear_has_teid_enb();
  void set_has_addr_enb();
  void clear_has_addr_enb();
  void set_has_teid_sgw();
  void clear_has_teid_sgw();
  void set_has_addr_sgw();
  void clear_has_addr_sgw();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr addr_enb_;
  ::google::protobuf::internal::ArenaStringPtr addr_sgw_;
  ::google::protobuf::uint32 e_rab_id_;
  ::google::protobuf::uint32 teid_enb_;
  ::google::protobuf::uint32 teid_sgw_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_s1ap_ue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_s1ap_ue) */ {
 public:
  flex_s1ap_ue();
  virtual ~flex_s1ap_ue();

  flex_s1ap_ue(const flex_s1ap_ue& from);

  inline flex_s1ap_ue& operator=(const flex_s1ap_ue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_s1ap_ue& default_instance();

  static inline const flex_s1ap_ue* internal_default_instance() {
    return reinterpret_cast<const flex_s1ap_ue*>(
               &_flex_s1ap_ue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(flex_s1ap_ue* other);

  // implements Message ----------------------------------------------

  inline flex_s1ap_ue* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_s1ap_ue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_s1ap_ue& from);
  void MergeFrom(const flex_s1ap_ue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_s1ap_ue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string mme_s1_ip = 1;
  bool has_mme_s1_ip() const;
  void clear_mme_s1_ip();
  static const int kMmeS1IpFieldNumber = 1;
  const ::std::string& mme_s1_ip() const;
  void set_mme_s1_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_mme_s1_ip(::std::string&& value);
  #endif
  void set_mme_s1_ip(const char* value);
  void set_mme_s1_ip(const char* value, size_t size);
  ::std::string* mutable_mme_s1_ip();
  ::std::string* release_mme_s1_ip();
  void set_allocated_mme_s1_ip(::std::string* mme_s1_ip);

  // optional .protocol.flex_plmn selected_plmn = 4;
  bool has_selected_plmn() const;
  void clear_selected_plmn();
  static const int kSelectedPlmnFieldNumber = 4;
  const ::protocol::flex_plmn& selected_plmn() const;
  ::protocol::flex_plmn* mutable_selected_plmn();
  ::protocol::flex_plmn* release_selected_plmn();
  void set_allocated_selected_plmn(::protocol::flex_plmn* selected_plmn);

  // optional uint32 enb_ue_s1ap_id = 2;
  bool has_enb_ue_s1ap_id() const;
  void clear_enb_ue_s1ap_id();
  static const int kEnbUeS1ApIdFieldNumber = 2;
  ::google::protobuf::uint32 enb_ue_s1ap_id() const;
  void set_enb_ue_s1ap_id(::google::protobuf::uint32 value);

  // optional uint32 mme_ue_s1ap_id = 3;
  bool has_mme_ue_s1ap_id() const;
  void clear_mme_ue_s1ap_id();
  static const int kMmeUeS1ApIdFieldNumber = 3;
  ::google::protobuf::uint32 mme_ue_s1ap_id() const;
  void set_mme_ue_s1ap_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_s1ap_ue)
 private:
  void set_has_mme_s1_ip();
  void clear_has_mme_s1_ip();
  void set_has_enb_ue_s1ap_id();
  void clear_has_enb_ue_s1ap_id();
  void set_has_mme_ue_s1ap_id();
  void clear_has_mme_ue_s1ap_id();
  void set_has_selected_plmn();
  void clear_has_selected_plmn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mme_s1_ip_;
  ::protocol::flex_plmn* selected_plmn_;
  ::google::protobuf::uint32 enb_ue_s1ap_id_;
  ::google::protobuf::uint32 mme_ue_s1ap_id_;
  friend struct protobuf_stats_5fcommon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// flex_rlc_bsr

// optional uint32 lc_id = 1;
inline bool flex_rlc_bsr::has_lc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_rlc_bsr::set_has_lc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_rlc_bsr::clear_has_lc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_rlc_bsr::clear_lc_id() {
  lc_id_ = 0u;
  clear_has_lc_id();
}
inline ::google::protobuf::uint32 flex_rlc_bsr::lc_id() const {
  // @@protoc_insertion_point(field_get:protocol.flex_rlc_bsr.lc_id)
  return lc_id_;
}
inline void flex_rlc_bsr::set_lc_id(::google::protobuf::uint32 value) {
  set_has_lc_id();
  lc_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_rlc_bsr.lc_id)
}

// optional uint32 tx_queue_size = 2;
inline bool flex_rlc_bsr::has_tx_queue_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_rlc_bsr::set_has_tx_queue_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_rlc_bsr::clear_has_tx_queue_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_rlc_bsr::clear_tx_queue_size() {
  tx_queue_size_ = 0u;
  clear_has_tx_queue_size();
}
inline ::google::protobuf::uint32 flex_rlc_bsr::tx_queue_size() const {
  // @@protoc_insertion_point(field_get:protocol.flex_rlc_bsr.tx_queue_size)
  return tx_queue_size_;
}
inline void flex_rlc_bsr::set_tx_queue_size(::google::protobuf::uint32 value) {
  set_has_tx_queue_size();
  tx_queue_size_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_rlc_bsr.tx_queue_size)
}

// optional uint32 tx_queue_hol_delay = 3;
inline bool flex_rlc_bsr::has_tx_queue_hol_delay() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_rlc_bsr::set_has_tx_queue_hol_delay() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_rlc_bsr::clear_has_tx_queue_hol_delay() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_rlc_bsr::clear_tx_queue_hol_delay() {
  tx_queue_hol_delay_ = 0u;
  clear_has_tx_queue_hol_delay();
}
inline ::google::protobuf::uint32 flex_rlc_bsr::tx_queue_hol_delay() const {
  // @@protoc_insertion_point(field_get:protocol.flex_rlc_bsr.tx_queue_hol_delay)
  return tx_queue_hol_delay_;
}
inline void flex_rlc_bsr::set_tx_queue_hol_delay(::google::protobuf::uint32 value) {
  set_has_tx_queue_hol_delay();
  tx_queue_hol_delay_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_rlc_bsr.tx_queue_hol_delay)
}

// optional uint32 retransmission_queue_size = 4;
inline bool flex_rlc_bsr::has_retransmission_queue_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_rlc_bsr::set_has_retransmission_queue_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_rlc_bsr::clear_has_retransmission_queue_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_rlc_bsr::clear_retransmission_queue_size() {
  retransmission_queue_size_ = 0u;
  clear_has_retransmission_queue_size();
}
inline ::google::protobuf::uint32 flex_rlc_bsr::retransmission_queue_size() const {
  // @@protoc_insertion_point(field_get:protocol.flex_rlc_bsr.retransmission_queue_size)
  return retransmission_queue_size_;
}
inline void flex_rlc_bsr::set_retransmission_queue_size(::google::protobuf::uint32 value) {
  set_has_retransmission_queue_size();
  retransmission_queue_size_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_rlc_bsr.retransmission_queue_size)
}

// optional uint32 retransmission_queue_hol_delay = 5;
inline bool flex_rlc_bsr::has_retransmission_queue_hol_delay() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void flex_rlc_bsr::set_has_retransmission_queue_hol_delay() {
  _has_bits_[0] |= 0x00000010u;
}
inline void flex_rlc_bsr::clear_has_retransmission_queue_hol_delay() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void flex_rlc_bsr::clear_retransmission_queue_hol_delay() {
  retransmission_queue_hol_delay_ = 0u;
  clear_has_retransmission_queue_hol_delay();
}
inline ::google::protobuf::uint32 flex_rlc_bsr::retransmission_queue_hol_delay() const {
  // @@protoc_insertion_point(field_get:protocol.flex_rlc_bsr.retransmission_queue_hol_delay)
  return retransmission_queue_hol_delay_;
}
inline void flex_rlc_bsr::set_retransmission_queue_hol_delay(::google::protobuf::uint32 value) {
  set_has_retransmission_queue_hol_delay();
  retransmission_queue_hol_delay_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_rlc_bsr.retransmission_queue_hol_delay)
}

// optional uint32 status_pdu_size = 6;
inline bool flex_rlc_bsr::has_status_pdu_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void flex_rlc_bsr::set_has_status_pdu_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void flex_rlc_bsr::clear_has_status_pdu_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void flex_rlc_bsr::clear_status_pdu_size() {
  status_pdu_size_ = 0u;
  clear_has_status_pdu_size();
}
inline ::google::protobuf::uint32 flex_rlc_bsr::status_pdu_size() const {
  // @@protoc_insertion_point(field_get:protocol.flex_rlc_bsr.status_pdu_size)
  return status_pdu_size_;
}
inline void flex_rlc_bsr::set_status_pdu_size(::google::protobuf::uint32 value) {
  set_has_status_pdu_size();
  status_pdu_size_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_rlc_bsr.status_pdu_size)
}

// -------------------------------------------------------------------

// flex_csi_p10

// optional uint32 wb_cqi = 1;
inline bool flex_csi_p10::has_wb_cqi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_csi_p10::set_has_wb_cqi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_csi_p10::clear_has_wb_cqi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_csi_p10::clear_wb_cqi() {
  wb_cqi_ = 0u;
  clear_has_wb_cqi();
}
inline ::google::protobuf::uint32 flex_csi_p10::wb_cqi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p10.wb_cqi)
  return wb_cqi_;
}
inline void flex_csi_p10::set_wb_cqi(::google::protobuf::uint32 value) {
  set_has_wb_cqi();
  wb_cqi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p10.wb_cqi)
}

// -------------------------------------------------------------------

// flex_csi_p11

// repeated uint32 wb_cqi = 1;
inline int flex_csi_p11::wb_cqi_size() const {
  return wb_cqi_.size();
}
inline void flex_csi_p11::clear_wb_cqi() {
  wb_cqi_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_p11::wb_cqi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p11.wb_cqi)
  return wb_cqi_.Get(index);
}
inline void flex_csi_p11::set_wb_cqi(int index, ::google::protobuf::uint32 value) {
  wb_cqi_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p11.wb_cqi)
}
inline void flex_csi_p11::add_wb_cqi(::google::protobuf::uint32 value) {
  wb_cqi_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_p11.wb_cqi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_p11::wb_cqi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_p11.wb_cqi)
  return wb_cqi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_p11::mutable_wb_cqi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_p11.wb_cqi)
  return &wb_cqi_;
}

// optional uint32 wb_pmi = 2;
inline bool flex_csi_p11::has_wb_pmi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_csi_p11::set_has_wb_pmi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_csi_p11::clear_has_wb_pmi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_csi_p11::clear_wb_pmi() {
  wb_pmi_ = 0u;
  clear_has_wb_pmi();
}
inline ::google::protobuf::uint32 flex_csi_p11::wb_pmi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p11.wb_pmi)
  return wb_pmi_;
}
inline void flex_csi_p11::set_wb_pmi(::google::protobuf::uint32 value) {
  set_has_wb_pmi();
  wb_pmi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p11.wb_pmi)
}

// -------------------------------------------------------------------

// flex_csi_p20

// optional uint32 wb_cqi = 1;
inline bool flex_csi_p20::has_wb_cqi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_csi_p20::set_has_wb_cqi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_csi_p20::clear_has_wb_cqi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_csi_p20::clear_wb_cqi() {
  wb_cqi_ = 0u;
  clear_has_wb_cqi();
}
inline ::google::protobuf::uint32 flex_csi_p20::wb_cqi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p20.wb_cqi)
  return wb_cqi_;
}
inline void flex_csi_p20::set_wb_cqi(::google::protobuf::uint32 value) {
  set_has_wb_cqi();
  wb_cqi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p20.wb_cqi)
}

// optional uint32 sb_cqi = 2;
inline bool flex_csi_p20::has_sb_cqi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_csi_p20::set_has_sb_cqi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_csi_p20::clear_has_sb_cqi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_csi_p20::clear_sb_cqi() {
  sb_cqi_ = 0u;
  clear_has_sb_cqi();
}
inline ::google::protobuf::uint32 flex_csi_p20::sb_cqi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p20.sb_cqi)
  return sb_cqi_;
}
inline void flex_csi_p20::set_sb_cqi(::google::protobuf::uint32 value) {
  set_has_sb_cqi();
  sb_cqi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p20.sb_cqi)
}

// optional uint32 bandwidth_part_index = 3;
inline bool flex_csi_p20::has_bandwidth_part_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_csi_p20::set_has_bandwidth_part_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_csi_p20::clear_has_bandwidth_part_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_csi_p20::clear_bandwidth_part_index() {
  bandwidth_part_index_ = 0u;
  clear_has_bandwidth_part_index();
}
inline ::google::protobuf::uint32 flex_csi_p20::bandwidth_part_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p20.bandwidth_part_index)
  return bandwidth_part_index_;
}
inline void flex_csi_p20::set_bandwidth_part_index(::google::protobuf::uint32 value) {
  set_has_bandwidth_part_index();
  bandwidth_part_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p20.bandwidth_part_index)
}

// optional uint32 sb_index = 4;
inline bool flex_csi_p20::has_sb_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_csi_p20::set_has_sb_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_csi_p20::clear_has_sb_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_csi_p20::clear_sb_index() {
  sb_index_ = 0u;
  clear_has_sb_index();
}
inline ::google::protobuf::uint32 flex_csi_p20::sb_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p20.sb_index)
  return sb_index_;
}
inline void flex_csi_p20::set_sb_index(::google::protobuf::uint32 value) {
  set_has_sb_index();
  sb_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p20.sb_index)
}

// -------------------------------------------------------------------

// flex_csi_p21

// repeated uint32 wb_cqi = 1;
inline int flex_csi_p21::wb_cqi_size() const {
  return wb_cqi_.size();
}
inline void flex_csi_p21::clear_wb_cqi() {
  wb_cqi_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_p21::wb_cqi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p21.wb_cqi)
  return wb_cqi_.Get(index);
}
inline void flex_csi_p21::set_wb_cqi(int index, ::google::protobuf::uint32 value) {
  wb_cqi_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p21.wb_cqi)
}
inline void flex_csi_p21::add_wb_cqi(::google::protobuf::uint32 value) {
  wb_cqi_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_p21.wb_cqi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_p21::wb_cqi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_p21.wb_cqi)
  return wb_cqi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_p21::mutable_wb_cqi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_p21.wb_cqi)
  return &wb_cqi_;
}

// optional uint32 wb_pmi = 2;
inline bool flex_csi_p21::has_wb_pmi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_csi_p21::set_has_wb_pmi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_csi_p21::clear_has_wb_pmi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_csi_p21::clear_wb_pmi() {
  wb_pmi_ = 0u;
  clear_has_wb_pmi();
}
inline ::google::protobuf::uint32 flex_csi_p21::wb_pmi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p21.wb_pmi)
  return wb_pmi_;
}
inline void flex_csi_p21::set_wb_pmi(::google::protobuf::uint32 value) {
  set_has_wb_pmi();
  wb_pmi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p21.wb_pmi)
}

// repeated uint32 sb_cqi = 3;
inline int flex_csi_p21::sb_cqi_size() const {
  return sb_cqi_.size();
}
inline void flex_csi_p21::clear_sb_cqi() {
  sb_cqi_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_p21::sb_cqi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p21.sb_cqi)
  return sb_cqi_.Get(index);
}
inline void flex_csi_p21::set_sb_cqi(int index, ::google::protobuf::uint32 value) {
  sb_cqi_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p21.sb_cqi)
}
inline void flex_csi_p21::add_sb_cqi(::google::protobuf::uint32 value) {
  sb_cqi_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_p21.sb_cqi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_p21::sb_cqi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_p21.sb_cqi)
  return sb_cqi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_p21::mutable_sb_cqi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_p21.sb_cqi)
  return &sb_cqi_;
}

// optional uint32 badwidth_part_index = 4;
inline bool flex_csi_p21::has_badwidth_part_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_csi_p21::set_has_badwidth_part_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_csi_p21::clear_has_badwidth_part_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_csi_p21::clear_badwidth_part_index() {
  badwidth_part_index_ = 0u;
  clear_has_badwidth_part_index();
}
inline ::google::protobuf::uint32 flex_csi_p21::badwidth_part_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p21.badwidth_part_index)
  return badwidth_part_index_;
}
inline void flex_csi_p21::set_badwidth_part_index(::google::protobuf::uint32 value) {
  set_has_badwidth_part_index();
  badwidth_part_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p21.badwidth_part_index)
}

// optional uint32 sb_index = 5;
inline bool flex_csi_p21::has_sb_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_csi_p21::set_has_sb_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_csi_p21::clear_has_sb_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_csi_p21::clear_sb_index() {
  sb_index_ = 0u;
  clear_has_sb_index();
}
inline ::google::protobuf::uint32 flex_csi_p21::sb_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_p21.sb_index)
  return sb_index_;
}
inline void flex_csi_p21::set_sb_index(::google::protobuf::uint32 value) {
  set_has_sb_index();
  sb_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_p21.sb_index)
}

// -------------------------------------------------------------------

// flex_csi_a12

// repeated uint32 wb_cqi = 1;
inline int flex_csi_a12::wb_cqi_size() const {
  return wb_cqi_.size();
}
inline void flex_csi_a12::clear_wb_cqi() {
  wb_cqi_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_a12::wb_cqi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a12.wb_cqi)
  return wb_cqi_.Get(index);
}
inline void flex_csi_a12::set_wb_cqi(int index, ::google::protobuf::uint32 value) {
  wb_cqi_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a12.wb_cqi)
}
inline void flex_csi_a12::add_wb_cqi(::google::protobuf::uint32 value) {
  wb_cqi_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_a12.wb_cqi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_a12::wb_cqi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_a12.wb_cqi)
  return wb_cqi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_a12::mutable_wb_cqi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_a12.wb_cqi)
  return &wb_cqi_;
}

// repeated uint32 sb_pmi = 2;
inline int flex_csi_a12::sb_pmi_size() const {
  return sb_pmi_.size();
}
inline void flex_csi_a12::clear_sb_pmi() {
  sb_pmi_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_a12::sb_pmi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a12.sb_pmi)
  return sb_pmi_.Get(index);
}
inline void flex_csi_a12::set_sb_pmi(int index, ::google::protobuf::uint32 value) {
  sb_pmi_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a12.sb_pmi)
}
inline void flex_csi_a12::add_sb_pmi(::google::protobuf::uint32 value) {
  sb_pmi_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_a12.sb_pmi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_a12::sb_pmi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_a12.sb_pmi)
  return sb_pmi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_a12::mutable_sb_pmi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_a12.sb_pmi)
  return &sb_pmi_;
}

// -------------------------------------------------------------------

// flex_csi_a22

// repeated uint32 wb_cqi = 1;
inline int flex_csi_a22::wb_cqi_size() const {
  return wb_cqi_.size();
}
inline void flex_csi_a22::clear_wb_cqi() {
  wb_cqi_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_a22::wb_cqi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a22.wb_cqi)
  return wb_cqi_.Get(index);
}
inline void flex_csi_a22::set_wb_cqi(int index, ::google::protobuf::uint32 value) {
  wb_cqi_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a22.wb_cqi)
}
inline void flex_csi_a22::add_wb_cqi(::google::protobuf::uint32 value) {
  wb_cqi_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_a22.wb_cqi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_a22::wb_cqi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_a22.wb_cqi)
  return wb_cqi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_a22::mutable_wb_cqi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_a22.wb_cqi)
  return &wb_cqi_;
}

// repeated uint32 sb_cqi = 2;
inline int flex_csi_a22::sb_cqi_size() const {
  return sb_cqi_.size();
}
inline void flex_csi_a22::clear_sb_cqi() {
  sb_cqi_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_a22::sb_cqi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a22.sb_cqi)
  return sb_cqi_.Get(index);
}
inline void flex_csi_a22::set_sb_cqi(int index, ::google::protobuf::uint32 value) {
  sb_cqi_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a22.sb_cqi)
}
inline void flex_csi_a22::add_sb_cqi(::google::protobuf::uint32 value) {
  sb_cqi_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_a22.sb_cqi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_a22::sb_cqi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_a22.sb_cqi)
  return sb_cqi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_a22::mutable_sb_cqi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_a22.sb_cqi)
  return &sb_cqi_;
}

// optional uint32 wb_pmi = 3;
inline bool flex_csi_a22::has_wb_pmi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_csi_a22::set_has_wb_pmi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_csi_a22::clear_has_wb_pmi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_csi_a22::clear_wb_pmi() {
  wb_pmi_ = 0u;
  clear_has_wb_pmi();
}
inline ::google::protobuf::uint32 flex_csi_a22::wb_pmi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a22.wb_pmi)
  return wb_pmi_;
}
inline void flex_csi_a22::set_wb_pmi(::google::protobuf::uint32 value) {
  set_has_wb_pmi();
  wb_pmi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a22.wb_pmi)
}

// optional uint32 sb_pmi = 4;
inline bool flex_csi_a22::has_sb_pmi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_csi_a22::set_has_sb_pmi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_csi_a22::clear_has_sb_pmi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_csi_a22::clear_sb_pmi() {
  sb_pmi_ = 0u;
  clear_has_sb_pmi();
}
inline ::google::protobuf::uint32 flex_csi_a22::sb_pmi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a22.sb_pmi)
  return sb_pmi_;
}
inline void flex_csi_a22::set_sb_pmi(::google::protobuf::uint32 value) {
  set_has_sb_pmi();
  sb_pmi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a22.sb_pmi)
}

// repeated uint32 sb_list = 5;
inline int flex_csi_a22::sb_list_size() const {
  return sb_list_.size();
}
inline void flex_csi_a22::clear_sb_list() {
  sb_list_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_a22::sb_list(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a22.sb_list)
  return sb_list_.Get(index);
}
inline void flex_csi_a22::set_sb_list(int index, ::google::protobuf::uint32 value) {
  sb_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a22.sb_list)
}
inline void flex_csi_a22::add_sb_list(::google::protobuf::uint32 value) {
  sb_list_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_a22.sb_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_a22::sb_list() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_a22.sb_list)
  return sb_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_a22::mutable_sb_list() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_a22.sb_list)
  return &sb_list_;
}

// -------------------------------------------------------------------

// flex_csi_a20

// optional uint32 wb_cqi = 1;
inline bool flex_csi_a20::has_wb_cqi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_csi_a20::set_has_wb_cqi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_csi_a20::clear_has_wb_cqi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_csi_a20::clear_wb_cqi() {
  wb_cqi_ = 0u;
  clear_has_wb_cqi();
}
inline ::google::protobuf::uint32 flex_csi_a20::wb_cqi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a20.wb_cqi)
  return wb_cqi_;
}
inline void flex_csi_a20::set_wb_cqi(::google::protobuf::uint32 value) {
  set_has_wb_cqi();
  wb_cqi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a20.wb_cqi)
}

// optional uint32 sb_cqi = 2;
inline bool flex_csi_a20::has_sb_cqi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_csi_a20::set_has_sb_cqi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_csi_a20::clear_has_sb_cqi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_csi_a20::clear_sb_cqi() {
  sb_cqi_ = 0u;
  clear_has_sb_cqi();
}
inline ::google::protobuf::uint32 flex_csi_a20::sb_cqi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a20.sb_cqi)
  return sb_cqi_;
}
inline void flex_csi_a20::set_sb_cqi(::google::protobuf::uint32 value) {
  set_has_sb_cqi();
  sb_cqi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a20.sb_cqi)
}

// repeated uint32 sb_list = 3;
inline int flex_csi_a20::sb_list_size() const {
  return sb_list_.size();
}
inline void flex_csi_a20::clear_sb_list() {
  sb_list_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_a20::sb_list(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a20.sb_list)
  return sb_list_.Get(index);
}
inline void flex_csi_a20::set_sb_list(int index, ::google::protobuf::uint32 value) {
  sb_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a20.sb_list)
}
inline void flex_csi_a20::add_sb_list(::google::protobuf::uint32 value) {
  sb_list_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_a20.sb_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_a20::sb_list() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_a20.sb_list)
  return sb_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_a20::mutable_sb_list() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_a20.sb_list)
  return &sb_list_;
}

// -------------------------------------------------------------------

// flex_csi_a30

// optional uint32 wb_cqi = 1;
inline bool flex_csi_a30::has_wb_cqi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_csi_a30::set_has_wb_cqi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_csi_a30::clear_has_wb_cqi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_csi_a30::clear_wb_cqi() {
  wb_cqi_ = 0u;
  clear_has_wb_cqi();
}
inline ::google::protobuf::uint32 flex_csi_a30::wb_cqi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a30.wb_cqi)
  return wb_cqi_;
}
inline void flex_csi_a30::set_wb_cqi(::google::protobuf::uint32 value) {
  set_has_wb_cqi();
  wb_cqi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a30.wb_cqi)
}

// repeated uint32 sb_cqi = 2;
inline int flex_csi_a30::sb_cqi_size() const {
  return sb_cqi_.size();
}
inline void flex_csi_a30::clear_sb_cqi() {
  sb_cqi_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_a30::sb_cqi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a30.sb_cqi)
  return sb_cqi_.Get(index);
}
inline void flex_csi_a30::set_sb_cqi(int index, ::google::protobuf::uint32 value) {
  sb_cqi_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a30.sb_cqi)
}
inline void flex_csi_a30::add_sb_cqi(::google::protobuf::uint32 value) {
  sb_cqi_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_a30.sb_cqi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_a30::sb_cqi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_a30.sb_cqi)
  return sb_cqi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_a30::mutable_sb_cqi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_a30.sb_cqi)
  return &sb_cqi_;
}

// -------------------------------------------------------------------

// flex_csi_a31

// repeated uint32 wb_cqi = 1;
inline int flex_csi_a31::wb_cqi_size() const {
  return wb_cqi_.size();
}
inline void flex_csi_a31::clear_wb_cqi() {
  wb_cqi_.Clear();
}
inline ::google::protobuf::uint32 flex_csi_a31::wb_cqi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a31.wb_cqi)
  return wb_cqi_.Get(index);
}
inline void flex_csi_a31::set_wb_cqi(int index, ::google::protobuf::uint32 value) {
  wb_cqi_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a31.wb_cqi)
}
inline void flex_csi_a31::add_wb_cqi(::google::protobuf::uint32 value) {
  wb_cqi_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_csi_a31.wb_cqi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_csi_a31::wb_cqi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_a31.wb_cqi)
  return wb_cqi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_csi_a31::mutable_wb_cqi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_a31.wb_cqi)
  return &wb_cqi_;
}

// repeated .protocol.flex_msb_cqi sb_cqi = 2;
inline int flex_csi_a31::sb_cqi_size() const {
  return sb_cqi_.size();
}
inline void flex_csi_a31::clear_sb_cqi() {
  sb_cqi_.Clear();
}
inline const ::protocol::flex_msb_cqi& flex_csi_a31::sb_cqi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a31.sb_cqi)
  return sb_cqi_.Get(index);
}
inline ::protocol::flex_msb_cqi* flex_csi_a31::mutable_sb_cqi(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_csi_a31.sb_cqi)
  return sb_cqi_.Mutable(index);
}
inline ::protocol::flex_msb_cqi* flex_csi_a31::add_sb_cqi() {
  // @@protoc_insertion_point(field_add:protocol.flex_csi_a31.sb_cqi)
  return sb_cqi_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_msb_cqi >*
flex_csi_a31::mutable_sb_cqi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_csi_a31.sb_cqi)
  return &sb_cqi_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_msb_cqi >&
flex_csi_a31::sb_cqi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_csi_a31.sb_cqi)
  return sb_cqi_;
}

// optional uint32 wb_pmi = 3;
inline bool flex_csi_a31::has_wb_pmi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_csi_a31::set_has_wb_pmi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_csi_a31::clear_has_wb_pmi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_csi_a31::clear_wb_pmi() {
  wb_pmi_ = 0u;
  clear_has_wb_pmi();
}
inline ::google::protobuf::uint32 flex_csi_a31::wb_pmi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_csi_a31.wb_pmi)
  return wb_pmi_;
}
inline void flex_csi_a31::set_wb_pmi(::google::protobuf::uint32 value) {
  set_has_wb_pmi();
  wb_pmi_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_csi_a31.wb_pmi)
}

// -------------------------------------------------------------------

// flex_msb_cqi

// repeated uint32 sb_cqi = 1;
inline int flex_msb_cqi::sb_cqi_size() const {
  return sb_cqi_.size();
}
inline void flex_msb_cqi::clear_sb_cqi() {
  sb_cqi_.Clear();
}
inline ::google::protobuf::uint32 flex_msb_cqi::sb_cqi(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_msb_cqi.sb_cqi)
  return sb_cqi_.Get(index);
}
inline void flex_msb_cqi::set_sb_cqi(int index, ::google::protobuf::uint32 value) {
  sb_cqi_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_msb_cqi.sb_cqi)
}
inline void flex_msb_cqi::add_sb_cqi(::google::protobuf::uint32 value) {
  sb_cqi_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_msb_cqi.sb_cqi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_msb_cqi::sb_cqi() const {
  // @@protoc_insertion_point(field_list:protocol.flex_msb_cqi.sb_cqi)
  return sb_cqi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_msb_cqi::mutable_sb_cqi() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_msb_cqi.sb_cqi)
  return &sb_cqi_;
}

// -------------------------------------------------------------------

// flex_dl_csi

// optional uint32 serv_cell_index = 1;
inline bool flex_dl_csi::has_serv_cell_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_dl_csi::set_has_serv_cell_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_dl_csi::clear_has_serv_cell_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_dl_csi::clear_serv_cell_index() {
  serv_cell_index_ = 0u;
  clear_has_serv_cell_index();
}
inline ::google::protobuf::uint32 flex_dl_csi::serv_cell_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.serv_cell_index)
  return serv_cell_index_;
}
inline void flex_dl_csi::set_serv_cell_index(::google::protobuf::uint32 value) {
  set_has_serv_cell_index();
  serv_cell_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_csi.serv_cell_index)
}

// optional uint32 ri = 2;
inline bool flex_dl_csi::has_ri() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_dl_csi::set_has_ri() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_dl_csi::clear_has_ri() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_dl_csi::clear_ri() {
  ri_ = 0u;
  clear_has_ri();
}
inline ::google::protobuf::uint32 flex_dl_csi::ri() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.ri)
  return ri_;
}
inline void flex_dl_csi::set_ri(::google::protobuf::uint32 value) {
  set_has_ri();
  ri_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_csi.ri)
}

// optional .protocol.flex_csi_type type = 3;
inline bool flex_dl_csi::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_dl_csi::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_dl_csi::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_dl_csi::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::protocol::flex_csi_type flex_dl_csi::type() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.type)
  return static_cast< ::protocol::flex_csi_type >(type_);
}
inline void flex_dl_csi::set_type(::protocol::flex_csi_type value) {
  assert(::protocol::flex_csi_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_csi.type)
}

// optional .protocol.flex_csi_p10 p10csi = 4;
inline bool flex_dl_csi::has_p10csi() const {
  return report_case() == kP10Csi;
}
inline void flex_dl_csi::set_has_p10csi() {
  _oneof_case_[0] = kP10Csi;
}
inline void flex_dl_csi::clear_p10csi() {
  if (has_p10csi()) {
    delete report_.p10csi_;
    clear_has_report();
  }
}
inline  const ::protocol::flex_csi_p10& flex_dl_csi::p10csi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.p10csi)
  return has_p10csi()
      ? *report_.p10csi_
      : ::protocol::flex_csi_p10::default_instance();
}
inline ::protocol::flex_csi_p10* flex_dl_csi::mutable_p10csi() {
  if (!has_p10csi()) {
    clear_report();
    set_has_p10csi();
    report_.p10csi_ = new ::protocol::flex_csi_p10;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_csi.p10csi)
  return report_.p10csi_;
}
inline ::protocol::flex_csi_p10* flex_dl_csi::release_p10csi() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_csi.p10csi)
  if (has_p10csi()) {
    clear_has_report();
    ::protocol::flex_csi_p10* temp = report_.p10csi_;
    report_.p10csi_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void flex_dl_csi::set_allocated_p10csi(::protocol::flex_csi_p10* p10csi) {
  clear_report();
  if (p10csi) {
    set_has_p10csi();
    report_.p10csi_ = p10csi;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_csi.p10csi)
}

// optional .protocol.flex_csi_p11 p11csi = 5;
inline bool flex_dl_csi::has_p11csi() const {
  return report_case() == kP11Csi;
}
inline void flex_dl_csi::set_has_p11csi() {
  _oneof_case_[0] = kP11Csi;
}
inline void flex_dl_csi::clear_p11csi() {
  if (has_p11csi()) {
    delete report_.p11csi_;
    clear_has_report();
  }
}
inline  const ::protocol::flex_csi_p11& flex_dl_csi::p11csi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.p11csi)
  return has_p11csi()
      ? *report_.p11csi_
      : ::protocol::flex_csi_p11::default_instance();
}
inline ::protocol::flex_csi_p11* flex_dl_csi::mutable_p11csi() {
  if (!has_p11csi()) {
    clear_report();
    set_has_p11csi();
    report_.p11csi_ = new ::protocol::flex_csi_p11;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_csi.p11csi)
  return report_.p11csi_;
}
inline ::protocol::flex_csi_p11* flex_dl_csi::release_p11csi() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_csi.p11csi)
  if (has_p11csi()) {
    clear_has_report();
    ::protocol::flex_csi_p11* temp = report_.p11csi_;
    report_.p11csi_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void flex_dl_csi::set_allocated_p11csi(::protocol::flex_csi_p11* p11csi) {
  clear_report();
  if (p11csi) {
    set_has_p11csi();
    report_.p11csi_ = p11csi;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_csi.p11csi)
}

// optional .protocol.flex_csi_p20 p20csi = 6;
inline bool flex_dl_csi::has_p20csi() const {
  return report_case() == kP20Csi;
}
inline void flex_dl_csi::set_has_p20csi() {
  _oneof_case_[0] = kP20Csi;
}
inline void flex_dl_csi::clear_p20csi() {
  if (has_p20csi()) {
    delete report_.p20csi_;
    clear_has_report();
  }
}
inline  const ::protocol::flex_csi_p20& flex_dl_csi::p20csi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.p20csi)
  return has_p20csi()
      ? *report_.p20csi_
      : ::protocol::flex_csi_p20::default_instance();
}
inline ::protocol::flex_csi_p20* flex_dl_csi::mutable_p20csi() {
  if (!has_p20csi()) {
    clear_report();
    set_has_p20csi();
    report_.p20csi_ = new ::protocol::flex_csi_p20;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_csi.p20csi)
  return report_.p20csi_;
}
inline ::protocol::flex_csi_p20* flex_dl_csi::release_p20csi() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_csi.p20csi)
  if (has_p20csi()) {
    clear_has_report();
    ::protocol::flex_csi_p20* temp = report_.p20csi_;
    report_.p20csi_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void flex_dl_csi::set_allocated_p20csi(::protocol::flex_csi_p20* p20csi) {
  clear_report();
  if (p20csi) {
    set_has_p20csi();
    report_.p20csi_ = p20csi;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_csi.p20csi)
}

// optional .protocol.flex_csi_p21 p21csi = 7;
inline bool flex_dl_csi::has_p21csi() const {
  return report_case() == kP21Csi;
}
inline void flex_dl_csi::set_has_p21csi() {
  _oneof_case_[0] = kP21Csi;
}
inline void flex_dl_csi::clear_p21csi() {
  if (has_p21csi()) {
    delete report_.p21csi_;
    clear_has_report();
  }
}
inline  const ::protocol::flex_csi_p21& flex_dl_csi::p21csi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.p21csi)
  return has_p21csi()
      ? *report_.p21csi_
      : ::protocol::flex_csi_p21::default_instance();
}
inline ::protocol::flex_csi_p21* flex_dl_csi::mutable_p21csi() {
  if (!has_p21csi()) {
    clear_report();
    set_has_p21csi();
    report_.p21csi_ = new ::protocol::flex_csi_p21;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_csi.p21csi)
  return report_.p21csi_;
}
inline ::protocol::flex_csi_p21* flex_dl_csi::release_p21csi() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_csi.p21csi)
  if (has_p21csi()) {
    clear_has_report();
    ::protocol::flex_csi_p21* temp = report_.p21csi_;
    report_.p21csi_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void flex_dl_csi::set_allocated_p21csi(::protocol::flex_csi_p21* p21csi) {
  clear_report();
  if (p21csi) {
    set_has_p21csi();
    report_.p21csi_ = p21csi;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_csi.p21csi)
}

// optional .protocol.flex_csi_a12 a12csi = 8;
inline bool flex_dl_csi::has_a12csi() const {
  return report_case() == kA12Csi;
}
inline void flex_dl_csi::set_has_a12csi() {
  _oneof_case_[0] = kA12Csi;
}
inline void flex_dl_csi::clear_a12csi() {
  if (has_a12csi()) {
    delete report_.a12csi_;
    clear_has_report();
  }
}
inline  const ::protocol::flex_csi_a12& flex_dl_csi::a12csi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.a12csi)
  return has_a12csi()
      ? *report_.a12csi_
      : ::protocol::flex_csi_a12::default_instance();
}
inline ::protocol::flex_csi_a12* flex_dl_csi::mutable_a12csi() {
  if (!has_a12csi()) {
    clear_report();
    set_has_a12csi();
    report_.a12csi_ = new ::protocol::flex_csi_a12;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_csi.a12csi)
  return report_.a12csi_;
}
inline ::protocol::flex_csi_a12* flex_dl_csi::release_a12csi() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_csi.a12csi)
  if (has_a12csi()) {
    clear_has_report();
    ::protocol::flex_csi_a12* temp = report_.a12csi_;
    report_.a12csi_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void flex_dl_csi::set_allocated_a12csi(::protocol::flex_csi_a12* a12csi) {
  clear_report();
  if (a12csi) {
    set_has_a12csi();
    report_.a12csi_ = a12csi;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_csi.a12csi)
}

// optional .protocol.flex_csi_a22 a22csi = 9;
inline bool flex_dl_csi::has_a22csi() const {
  return report_case() == kA22Csi;
}
inline void flex_dl_csi::set_has_a22csi() {
  _oneof_case_[0] = kA22Csi;
}
inline void flex_dl_csi::clear_a22csi() {
  if (has_a22csi()) {
    delete report_.a22csi_;
    clear_has_report();
  }
}
inline  const ::protocol::flex_csi_a22& flex_dl_csi::a22csi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.a22csi)
  return has_a22csi()
      ? *report_.a22csi_
      : ::protocol::flex_csi_a22::default_instance();
}
inline ::protocol::flex_csi_a22* flex_dl_csi::mutable_a22csi() {
  if (!has_a22csi()) {
    clear_report();
    set_has_a22csi();
    report_.a22csi_ = new ::protocol::flex_csi_a22;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_csi.a22csi)
  return report_.a22csi_;
}
inline ::protocol::flex_csi_a22* flex_dl_csi::release_a22csi() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_csi.a22csi)
  if (has_a22csi()) {
    clear_has_report();
    ::protocol::flex_csi_a22* temp = report_.a22csi_;
    report_.a22csi_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void flex_dl_csi::set_allocated_a22csi(::protocol::flex_csi_a22* a22csi) {
  clear_report();
  if (a22csi) {
    set_has_a22csi();
    report_.a22csi_ = a22csi;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_csi.a22csi)
}

// optional .protocol.flex_csi_a20 a20csi = 10;
inline bool flex_dl_csi::has_a20csi() const {
  return report_case() == kA20Csi;
}
inline void flex_dl_csi::set_has_a20csi() {
  _oneof_case_[0] = kA20Csi;
}
inline void flex_dl_csi::clear_a20csi() {
  if (has_a20csi()) {
    delete report_.a20csi_;
    clear_has_report();
  }
}
inline  const ::protocol::flex_csi_a20& flex_dl_csi::a20csi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.a20csi)
  return has_a20csi()
      ? *report_.a20csi_
      : ::protocol::flex_csi_a20::default_instance();
}
inline ::protocol::flex_csi_a20* flex_dl_csi::mutable_a20csi() {
  if (!has_a20csi()) {
    clear_report();
    set_has_a20csi();
    report_.a20csi_ = new ::protocol::flex_csi_a20;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_csi.a20csi)
  return report_.a20csi_;
}
inline ::protocol::flex_csi_a20* flex_dl_csi::release_a20csi() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_csi.a20csi)
  if (has_a20csi()) {
    clear_has_report();
    ::protocol::flex_csi_a20* temp = report_.a20csi_;
    report_.a20csi_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void flex_dl_csi::set_allocated_a20csi(::protocol::flex_csi_a20* a20csi) {
  clear_report();
  if (a20csi) {
    set_has_a20csi();
    report_.a20csi_ = a20csi;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_csi.a20csi)
}

// optional .protocol.flex_csi_a30 a30csi = 11;
inline bool flex_dl_csi::has_a30csi() const {
  return report_case() == kA30Csi;
}
inline void flex_dl_csi::set_has_a30csi() {
  _oneof_case_[0] = kA30Csi;
}
inline void flex_dl_csi::clear_a30csi() {
  if (has_a30csi()) {
    delete report_.a30csi_;
    clear_has_report();
  }
}
inline  const ::protocol::flex_csi_a30& flex_dl_csi::a30csi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.a30csi)
  return has_a30csi()
      ? *report_.a30csi_
      : ::protocol::flex_csi_a30::default_instance();
}
inline ::protocol::flex_csi_a30* flex_dl_csi::mutable_a30csi() {
  if (!has_a30csi()) {
    clear_report();
    set_has_a30csi();
    report_.a30csi_ = new ::protocol::flex_csi_a30;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_csi.a30csi)
  return report_.a30csi_;
}
inline ::protocol::flex_csi_a30* flex_dl_csi::release_a30csi() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_csi.a30csi)
  if (has_a30csi()) {
    clear_has_report();
    ::protocol::flex_csi_a30* temp = report_.a30csi_;
    report_.a30csi_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void flex_dl_csi::set_allocated_a30csi(::protocol::flex_csi_a30* a30csi) {
  clear_report();
  if (a30csi) {
    set_has_a30csi();
    report_.a30csi_ = a30csi;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_csi.a30csi)
}

// optional .protocol.flex_csi_a31 a31csi = 12;
inline bool flex_dl_csi::has_a31csi() const {
  return report_case() == kA31Csi;
}
inline void flex_dl_csi::set_has_a31csi() {
  _oneof_case_[0] = kA31Csi;
}
inline void flex_dl_csi::clear_a31csi() {
  if (has_a31csi()) {
    delete report_.a31csi_;
    clear_has_report();
  }
}
inline  const ::protocol::flex_csi_a31& flex_dl_csi::a31csi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_csi.a31csi)
  return has_a31csi()
      ? *report_.a31csi_
      : ::protocol::flex_csi_a31::default_instance();
}
inline ::protocol::flex_csi_a31* flex_dl_csi::mutable_a31csi() {
  if (!has_a31csi()) {
    clear_report();
    set_has_a31csi();
    report_.a31csi_ = new ::protocol::flex_csi_a31;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_csi.a31csi)
  return report_.a31csi_;
}
inline ::protocol::flex_csi_a31* flex_dl_csi::release_a31csi() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_csi.a31csi)
  if (has_a31csi()) {
    clear_has_report();
    ::protocol::flex_csi_a31* temp = report_.a31csi_;
    report_.a31csi_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void flex_dl_csi::set_allocated_a31csi(::protocol::flex_csi_a31* a31csi) {
  clear_report();
  if (a31csi) {
    set_has_a31csi();
    report_.a31csi_ = a31csi;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_csi.a31csi)
}

inline bool flex_dl_csi::has_report() const {
  return report_case() != REPORT_NOT_SET;
}
inline void flex_dl_csi::clear_has_report() {
  _oneof_case_[0] = REPORT_NOT_SET;
}
inline flex_dl_csi::ReportCase flex_dl_csi::report_case() const {
  return flex_dl_csi::ReportCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// flex_dl_cqi_report

// optional uint32 sfn_sn = 1;
inline bool flex_dl_cqi_report::has_sfn_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_dl_cqi_report::set_has_sfn_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_dl_cqi_report::clear_has_sfn_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_dl_cqi_report::clear_sfn_sn() {
  sfn_sn_ = 0u;
  clear_has_sfn_sn();
}
inline ::google::protobuf::uint32 flex_dl_cqi_report::sfn_sn() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_cqi_report.sfn_sn)
  return sfn_sn_;
}
inline void flex_dl_cqi_report::set_sfn_sn(::google::protobuf::uint32 value) {
  set_has_sfn_sn();
  sfn_sn_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_cqi_report.sfn_sn)
}

// repeated .protocol.flex_dl_csi csi_report = 2;
inline int flex_dl_cqi_report::csi_report_size() const {
  return csi_report_.size();
}
inline void flex_dl_cqi_report::clear_csi_report() {
  csi_report_.Clear();
}
inline const ::protocol::flex_dl_csi& flex_dl_cqi_report::csi_report(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_cqi_report.csi_report)
  return csi_report_.Get(index);
}
inline ::protocol::flex_dl_csi* flex_dl_cqi_report::mutable_csi_report(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_cqi_report.csi_report)
  return csi_report_.Mutable(index);
}
inline ::protocol::flex_dl_csi* flex_dl_cqi_report::add_csi_report() {
  // @@protoc_insertion_point(field_add:protocol.flex_dl_cqi_report.csi_report)
  return csi_report_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_dl_csi >*
flex_dl_cqi_report::mutable_csi_report() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_dl_cqi_report.csi_report)
  return &csi_report_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_dl_csi >&
flex_dl_cqi_report::csi_report() const {
  // @@protoc_insertion_point(field_list:protocol.flex_dl_cqi_report.csi_report)
  return csi_report_;
}

// -------------------------------------------------------------------

// flex_paging_info

// optional uint32 paging_index = 1;
inline bool flex_paging_info::has_paging_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_paging_info::set_has_paging_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_paging_info::clear_has_paging_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_paging_info::clear_paging_index() {
  paging_index_ = 0u;
  clear_has_paging_index();
}
inline ::google::protobuf::uint32 flex_paging_info::paging_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_paging_info.paging_index)
  return paging_index_;
}
inline void flex_paging_info::set_paging_index(::google::protobuf::uint32 value) {
  set_has_paging_index();
  paging_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_paging_info.paging_index)
}

// optional uint32 paging_message_size = 2;
inline bool flex_paging_info::has_paging_message_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_paging_info::set_has_paging_message_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_paging_info::clear_has_paging_message_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_paging_info::clear_paging_message_size() {
  paging_message_size_ = 0u;
  clear_has_paging_message_size();
}
inline ::google::protobuf::uint32 flex_paging_info::paging_message_size() const {
  // @@protoc_insertion_point(field_get:protocol.flex_paging_info.paging_message_size)
  return paging_message_size_;
}
inline void flex_paging_info::set_paging_message_size(::google::protobuf::uint32 value) {
  set_has_paging_message_size();
  paging_message_size_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_paging_info.paging_message_size)
}

// optional uint32 paging_subframe = 3;
inline bool flex_paging_info::has_paging_subframe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_paging_info::set_has_paging_subframe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_paging_info::clear_has_paging_subframe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_paging_info::clear_paging_subframe() {
  paging_subframe_ = 0u;
  clear_has_paging_subframe();
}
inline ::google::protobuf::uint32 flex_paging_info::paging_subframe() const {
  // @@protoc_insertion_point(field_get:protocol.flex_paging_info.paging_subframe)
  return paging_subframe_;
}
inline void flex_paging_info::set_paging_subframe(::google::protobuf::uint32 value) {
  set_has_paging_subframe();
  paging_subframe_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_paging_info.paging_subframe)
}

// optional uint32 carrier_index = 4;
inline bool flex_paging_info::has_carrier_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_paging_info::set_has_carrier_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_paging_info::clear_has_carrier_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_paging_info::clear_carrier_index() {
  carrier_index_ = 0u;
  clear_has_carrier_index();
}
inline ::google::protobuf::uint32 flex_paging_info::carrier_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_paging_info.carrier_index)
  return carrier_index_;
}
inline void flex_paging_info::set_carrier_index(::google::protobuf::uint32 value) {
  set_has_carrier_index();
  carrier_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_paging_info.carrier_index)
}

// -------------------------------------------------------------------

// flex_paging_buffer_report

// repeated .protocol.flex_paging_info paging_info = 1;
inline int flex_paging_buffer_report::paging_info_size() const {
  return paging_info_.size();
}
inline void flex_paging_buffer_report::clear_paging_info() {
  paging_info_.Clear();
}
inline const ::protocol::flex_paging_info& flex_paging_buffer_report::paging_info(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_paging_buffer_report.paging_info)
  return paging_info_.Get(index);
}
inline ::protocol::flex_paging_info* flex_paging_buffer_report::mutable_paging_info(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_paging_buffer_report.paging_info)
  return paging_info_.Mutable(index);
}
inline ::protocol::flex_paging_info* flex_paging_buffer_report::add_paging_info() {
  // @@protoc_insertion_point(field_add:protocol.flex_paging_buffer_report.paging_info)
  return paging_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_paging_info >*
flex_paging_buffer_report::mutable_paging_info() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_paging_buffer_report.paging_info)
  return &paging_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_paging_info >&
flex_paging_buffer_report::paging_info() const {
  // @@protoc_insertion_point(field_list:protocol.flex_paging_buffer_report.paging_info)
  return paging_info_;
}

// -------------------------------------------------------------------

// flex_ul_cqi

// optional .protocol.flex_ul_cqi_type type = 1;
inline bool flex_ul_cqi::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_ul_cqi::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_ul_cqi::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_ul_cqi::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::protocol::flex_ul_cqi_type flex_ul_cqi::type() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ul_cqi.type)
  return static_cast< ::protocol::flex_ul_cqi_type >(type_);
}
inline void flex_ul_cqi::set_type(::protocol::flex_ul_cqi_type value) {
  assert(::protocol::flex_ul_cqi_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_ul_cqi.type)
}

// repeated uint32 sinr = 2;
inline int flex_ul_cqi::sinr_size() const {
  return sinr_.size();
}
inline void flex_ul_cqi::clear_sinr() {
  sinr_.Clear();
}
inline ::google::protobuf::uint32 flex_ul_cqi::sinr(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_ul_cqi.sinr)
  return sinr_.Get(index);
}
inline void flex_ul_cqi::set_sinr(int index, ::google::protobuf::uint32 value) {
  sinr_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_ul_cqi.sinr)
}
inline void flex_ul_cqi::add_sinr(::google::protobuf::uint32 value) {
  sinr_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_ul_cqi.sinr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_ul_cqi::sinr() const {
  // @@protoc_insertion_point(field_list:protocol.flex_ul_cqi.sinr)
  return sinr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_ul_cqi::mutable_sinr() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_ul_cqi.sinr)
  return &sinr_;
}

// optional uint32 serv_cell_index = 3;
inline bool flex_ul_cqi::has_serv_cell_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_ul_cqi::set_has_serv_cell_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_ul_cqi::clear_has_serv_cell_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_ul_cqi::clear_serv_cell_index() {
  serv_cell_index_ = 0u;
  clear_has_serv_cell_index();
}
inline ::google::protobuf::uint32 flex_ul_cqi::serv_cell_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ul_cqi.serv_cell_index)
  return serv_cell_index_;
}
inline void flex_ul_cqi::set_serv_cell_index(::google::protobuf::uint32 value) {
  set_has_serv_cell_index();
  serv_cell_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_ul_cqi.serv_cell_index)
}

// -------------------------------------------------------------------

// flex_ul_cqi_report

// optional uint32 sfn_sn = 1;
inline bool flex_ul_cqi_report::has_sfn_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_ul_cqi_report::set_has_sfn_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_ul_cqi_report::clear_has_sfn_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_ul_cqi_report::clear_sfn_sn() {
  sfn_sn_ = 0u;
  clear_has_sfn_sn();
}
inline ::google::protobuf::uint32 flex_ul_cqi_report::sfn_sn() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ul_cqi_report.sfn_sn)
  return sfn_sn_;
}
inline void flex_ul_cqi_report::set_sfn_sn(::google::protobuf::uint32 value) {
  set_has_sfn_sn();
  sfn_sn_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_ul_cqi_report.sfn_sn)
}

// repeated .protocol.flex_ul_cqi cqi_meas = 2;
inline int flex_ul_cqi_report::cqi_meas_size() const {
  return cqi_meas_.size();
}
inline void flex_ul_cqi_report::clear_cqi_meas() {
  cqi_meas_.Clear();
}
inline const ::protocol::flex_ul_cqi& flex_ul_cqi_report::cqi_meas(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_ul_cqi_report.cqi_meas)
  return cqi_meas_.Get(index);
}
inline ::protocol::flex_ul_cqi* flex_ul_cqi_report::mutable_cqi_meas(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_ul_cqi_report.cqi_meas)
  return cqi_meas_.Mutable(index);
}
inline ::protocol::flex_ul_cqi* flex_ul_cqi_report::add_cqi_meas() {
  // @@protoc_insertion_point(field_add:protocol.flex_ul_cqi_report.cqi_meas)
  return cqi_meas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_ul_cqi >*
flex_ul_cqi_report::mutable_cqi_meas() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_ul_cqi_report.cqi_meas)
  return &cqi_meas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_ul_cqi >&
flex_ul_cqi_report::cqi_meas() const {
  // @@protoc_insertion_point(field_list:protocol.flex_ul_cqi_report.cqi_meas)
  return cqi_meas_;
}

// repeated .protocol.flex_pucch_dbm pucch_dbm = 3;
inline int flex_ul_cqi_report::pucch_dbm_size() const {
  return pucch_dbm_.size();
}
inline void flex_ul_cqi_report::clear_pucch_dbm() {
  pucch_dbm_.Clear();
}
inline const ::protocol::flex_pucch_dbm& flex_ul_cqi_report::pucch_dbm(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_ul_cqi_report.pucch_dbm)
  return pucch_dbm_.Get(index);
}
inline ::protocol::flex_pucch_dbm* flex_ul_cqi_report::mutable_pucch_dbm(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_ul_cqi_report.pucch_dbm)
  return pucch_dbm_.Mutable(index);
}
inline ::protocol::flex_pucch_dbm* flex_ul_cqi_report::add_pucch_dbm() {
  // @@protoc_insertion_point(field_add:protocol.flex_ul_cqi_report.pucch_dbm)
  return pucch_dbm_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_pucch_dbm >*
flex_ul_cqi_report::mutable_pucch_dbm() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_ul_cqi_report.pucch_dbm)
  return &pucch_dbm_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_pucch_dbm >&
flex_ul_cqi_report::pucch_dbm() const {
  // @@protoc_insertion_point(field_list:protocol.flex_ul_cqi_report.pucch_dbm)
  return pucch_dbm_;
}

// -------------------------------------------------------------------

// flex_pucch_dbm

// optional int32 p0_pucch_dbm = 1;
inline bool flex_pucch_dbm::has_p0_pucch_dbm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_pucch_dbm::set_has_p0_pucch_dbm() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_pucch_dbm::clear_has_p0_pucch_dbm() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_pucch_dbm::clear_p0_pucch_dbm() {
  p0_pucch_dbm_ = 0;
  clear_has_p0_pucch_dbm();
}
inline ::google::protobuf::int32 flex_pucch_dbm::p0_pucch_dbm() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pucch_dbm.p0_pucch_dbm)
  return p0_pucch_dbm_;
}
inline void flex_pucch_dbm::set_p0_pucch_dbm(::google::protobuf::int32 value) {
  set_has_p0_pucch_dbm();
  p0_pucch_dbm_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pucch_dbm.p0_pucch_dbm)
}

// optional uint32 serv_cell_index = 2;
inline bool flex_pucch_dbm::has_serv_cell_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_pucch_dbm::set_has_serv_cell_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_pucch_dbm::clear_has_serv_cell_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_pucch_dbm::clear_serv_cell_index() {
  serv_cell_index_ = 0u;
  clear_has_serv_cell_index();
}
inline ::google::protobuf::uint32 flex_pucch_dbm::serv_cell_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pucch_dbm.serv_cell_index)
  return serv_cell_index_;
}
inline void flex_pucch_dbm::set_serv_cell_index(::google::protobuf::uint32 value) {
  set_has_serv_cell_index();
  serv_cell_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pucch_dbm.serv_cell_index)
}

// optional uint32 p0_pucch_updated = 3;
inline bool flex_pucch_dbm::has_p0_pucch_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_pucch_dbm::set_has_p0_pucch_updated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_pucch_dbm::clear_has_p0_pucch_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_pucch_dbm::clear_p0_pucch_updated() {
  p0_pucch_updated_ = 0u;
  clear_has_p0_pucch_updated();
}
inline ::google::protobuf::uint32 flex_pucch_dbm::p0_pucch_updated() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pucch_dbm.p0_pucch_updated)
  return p0_pucch_updated_;
}
inline void flex_pucch_dbm::set_p0_pucch_updated(::google::protobuf::uint32 value) {
  set_has_p0_pucch_updated();
  p0_pucch_updated_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pucch_dbm.p0_pucch_updated)
}

// -------------------------------------------------------------------

// flex_noise_interference_report

// optional uint32 sfn_sf = 1;
inline bool flex_noise_interference_report::has_sfn_sf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_noise_interference_report::set_has_sfn_sf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_noise_interference_report::clear_has_sfn_sf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_noise_interference_report::clear_sfn_sf() {
  sfn_sf_ = 0u;
  clear_has_sfn_sf();
}
inline ::google::protobuf::uint32 flex_noise_interference_report::sfn_sf() const {
  // @@protoc_insertion_point(field_get:protocol.flex_noise_interference_report.sfn_sf)
  return sfn_sf_;
}
inline void flex_noise_interference_report::set_sfn_sf(::google::protobuf::uint32 value) {
  set_has_sfn_sf();
  sfn_sf_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_noise_interference_report.sfn_sf)
}

// optional uint32 rip = 2;
inline bool flex_noise_interference_report::has_rip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_noise_interference_report::set_has_rip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_noise_interference_report::clear_has_rip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_noise_interference_report::clear_rip() {
  rip_ = 0u;
  clear_has_rip();
}
inline ::google::protobuf::uint32 flex_noise_interference_report::rip() const {
  // @@protoc_insertion_point(field_get:protocol.flex_noise_interference_report.rip)
  return rip_;
}
inline void flex_noise_interference_report::set_rip(::google::protobuf::uint32 value) {
  set_has_rip();
  rip_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_noise_interference_report.rip)
}

// optional uint32 tnp = 3;
inline bool flex_noise_interference_report::has_tnp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_noise_interference_report::set_has_tnp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_noise_interference_report::clear_has_tnp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_noise_interference_report::clear_tnp() {
  tnp_ = 0u;
  clear_has_tnp();
}
inline ::google::protobuf::uint32 flex_noise_interference_report::tnp() const {
  // @@protoc_insertion_point(field_get:protocol.flex_noise_interference_report.tnp)
  return tnp_;
}
inline void flex_noise_interference_report::set_tnp(::google::protobuf::uint32 value) {
  set_has_tnp();
  tnp_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_noise_interference_report.tnp)
}

// optional int32 p0_nominal_pucch = 4;
inline bool flex_noise_interference_report::has_p0_nominal_pucch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_noise_interference_report::set_has_p0_nominal_pucch() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_noise_interference_report::clear_has_p0_nominal_pucch() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_noise_interference_report::clear_p0_nominal_pucch() {
  p0_nominal_pucch_ = 0;
  clear_has_p0_nominal_pucch();
}
inline ::google::protobuf::int32 flex_noise_interference_report::p0_nominal_pucch() const {
  // @@protoc_insertion_point(field_get:protocol.flex_noise_interference_report.p0_nominal_pucch)
  return p0_nominal_pucch_;
}
inline void flex_noise_interference_report::set_p0_nominal_pucch(::google::protobuf::int32 value) {
  set_has_p0_nominal_pucch();
  p0_nominal_pucch_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_noise_interference_report.p0_nominal_pucch)
}

// -------------------------------------------------------------------

// flex_rrc_measurements

// optional int32 measid = 1;
inline bool flex_rrc_measurements::has_measid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_rrc_measurements::set_has_measid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_rrc_measurements::clear_has_measid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_rrc_measurements::clear_measid() {
  measid_ = 0;
  clear_has_measid();
}
inline ::google::protobuf::int32 flex_rrc_measurements::measid() const {
  // @@protoc_insertion_point(field_get:protocol.flex_rrc_measurements.measid)
  return measid_;
}
inline void flex_rrc_measurements::set_measid(::google::protobuf::int32 value) {
  set_has_measid();
  measid_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_rrc_measurements.measid)
}

// optional int32 pcell_rsrp = 2;
inline bool flex_rrc_measurements::has_pcell_rsrp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_rrc_measurements::set_has_pcell_rsrp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_rrc_measurements::clear_has_pcell_rsrp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_rrc_measurements::clear_pcell_rsrp() {
  pcell_rsrp_ = 0;
  clear_has_pcell_rsrp();
}
inline ::google::protobuf::int32 flex_rrc_measurements::pcell_rsrp() const {
  // @@protoc_insertion_point(field_get:protocol.flex_rrc_measurements.pcell_rsrp)
  return pcell_rsrp_;
}
inline void flex_rrc_measurements::set_pcell_rsrp(::google::protobuf::int32 value) {
  set_has_pcell_rsrp();
  pcell_rsrp_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_rrc_measurements.pcell_rsrp)
}

// optional int32 pcell_rsrq = 3;
inline bool flex_rrc_measurements::has_pcell_rsrq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_rrc_measurements::set_has_pcell_rsrq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_rrc_measurements::clear_has_pcell_rsrq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_rrc_measurements::clear_pcell_rsrq() {
  pcell_rsrq_ = 0;
  clear_has_pcell_rsrq();
}
inline ::google::protobuf::int32 flex_rrc_measurements::pcell_rsrq() const {
  // @@protoc_insertion_point(field_get:protocol.flex_rrc_measurements.pcell_rsrq)
  return pcell_rsrq_;
}
inline void flex_rrc_measurements::set_pcell_rsrq(::google::protobuf::int32 value) {
  set_has_pcell_rsrq();
  pcell_rsrq_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_rrc_measurements.pcell_rsrq)
}

// optional .protocol.flex_neigh_cells_measurements neigh_meas = 4;
inline bool flex_rrc_measurements::has_neigh_meas() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_rrc_measurements::set_has_neigh_meas() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_rrc_measurements::clear_has_neigh_meas() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_rrc_measurements::clear_neigh_meas() {
  if (neigh_meas_ != NULL) neigh_meas_->::protocol::flex_neigh_cells_measurements::Clear();
  clear_has_neigh_meas();
}
inline const ::protocol::flex_neigh_cells_measurements& flex_rrc_measurements::neigh_meas() const {
  // @@protoc_insertion_point(field_get:protocol.flex_rrc_measurements.neigh_meas)
  return neigh_meas_ != NULL ? *neigh_meas_
                         : *::protocol::flex_neigh_cells_measurements::internal_default_instance();
}
inline ::protocol::flex_neigh_cells_measurements* flex_rrc_measurements::mutable_neigh_meas() {
  set_has_neigh_meas();
  if (neigh_meas_ == NULL) {
    neigh_meas_ = new ::protocol::flex_neigh_cells_measurements;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_rrc_measurements.neigh_meas)
  return neigh_meas_;
}
inline ::protocol::flex_neigh_cells_measurements* flex_rrc_measurements::release_neigh_meas() {
  // @@protoc_insertion_point(field_release:protocol.flex_rrc_measurements.neigh_meas)
  clear_has_neigh_meas();
  ::protocol::flex_neigh_cells_measurements* temp = neigh_meas_;
  neigh_meas_ = NULL;
  return temp;
}
inline void flex_rrc_measurements::set_allocated_neigh_meas(::protocol::flex_neigh_cells_measurements* neigh_meas) {
  delete neigh_meas_;
  neigh_meas_ = neigh_meas;
  if (neigh_meas) {
    set_has_neigh_meas();
  } else {
    clear_has_neigh_meas();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_rrc_measurements.neigh_meas)
}

// -------------------------------------------------------------------

// flex_neigh_cells_measurements

// repeated .protocol.flex_eutra_measurements eutra_meas = 1;
inline int flex_neigh_cells_measurements::eutra_meas_size() const {
  return eutra_meas_.size();
}
inline void flex_neigh_cells_measurements::clear_eutra_meas() {
  eutra_meas_.Clear();
}
inline const ::protocol::flex_eutra_measurements& flex_neigh_cells_measurements::eutra_meas(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_neigh_cells_measurements.eutra_meas)
  return eutra_meas_.Get(index);
}
inline ::protocol::flex_eutra_measurements* flex_neigh_cells_measurements::mutable_eutra_meas(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_neigh_cells_measurements.eutra_meas)
  return eutra_meas_.Mutable(index);
}
inline ::protocol::flex_eutra_measurements* flex_neigh_cells_measurements::add_eutra_meas() {
  // @@protoc_insertion_point(field_add:protocol.flex_neigh_cells_measurements.eutra_meas)
  return eutra_meas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_eutra_measurements >*
flex_neigh_cells_measurements::mutable_eutra_meas() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_neigh_cells_measurements.eutra_meas)
  return &eutra_meas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_eutra_measurements >&
flex_neigh_cells_measurements::eutra_meas() const {
  // @@protoc_insertion_point(field_list:protocol.flex_neigh_cells_measurements.eutra_meas)
  return eutra_meas_;
}

// -------------------------------------------------------------------

// flex_eutra_measurements

// optional int32 phys_cell_id = 1;
inline bool flex_eutra_measurements::has_phys_cell_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_eutra_measurements::set_has_phys_cell_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_eutra_measurements::clear_has_phys_cell_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_eutra_measurements::clear_phys_cell_id() {
  phys_cell_id_ = 0;
  clear_has_phys_cell_id();
}
inline ::google::protobuf::int32 flex_eutra_measurements::phys_cell_id() const {
  // @@protoc_insertion_point(field_get:protocol.flex_eutra_measurements.phys_cell_id)
  return phys_cell_id_;
}
inline void flex_eutra_measurements::set_phys_cell_id(::google::protobuf::int32 value) {
  set_has_phys_cell_id();
  phys_cell_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_eutra_measurements.phys_cell_id)
}

// optional .protocol.flex_eutra_cgi_measurements cgi_meas = 2;
inline bool flex_eutra_measurements::has_cgi_meas() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_eutra_measurements::set_has_cgi_meas() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_eutra_measurements::clear_has_cgi_meas() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_eutra_measurements::clear_cgi_meas() {
  if (cgi_meas_ != NULL) cgi_meas_->::protocol::flex_eutra_cgi_measurements::Clear();
  clear_has_cgi_meas();
}
inline const ::protocol::flex_eutra_cgi_measurements& flex_eutra_measurements::cgi_meas() const {
  // @@protoc_insertion_point(field_get:protocol.flex_eutra_measurements.cgi_meas)
  return cgi_meas_ != NULL ? *cgi_meas_
                         : *::protocol::flex_eutra_cgi_measurements::internal_default_instance();
}
inline ::protocol::flex_eutra_cgi_measurements* flex_eutra_measurements::mutable_cgi_meas() {
  set_has_cgi_meas();
  if (cgi_meas_ == NULL) {
    cgi_meas_ = new ::protocol::flex_eutra_cgi_measurements;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_eutra_measurements.cgi_meas)
  return cgi_meas_;
}
inline ::protocol::flex_eutra_cgi_measurements* flex_eutra_measurements::release_cgi_meas() {
  // @@protoc_insertion_point(field_release:protocol.flex_eutra_measurements.cgi_meas)
  clear_has_cgi_meas();
  ::protocol::flex_eutra_cgi_measurements* temp = cgi_meas_;
  cgi_meas_ = NULL;
  return temp;
}
inline void flex_eutra_measurements::set_allocated_cgi_meas(::protocol::flex_eutra_cgi_measurements* cgi_meas) {
  delete cgi_meas_;
  cgi_meas_ = cgi_meas;
  if (cgi_meas) {
    set_has_cgi_meas();
  } else {
    clear_has_cgi_meas();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_eutra_measurements.cgi_meas)
}

// optional .protocol.flex_eutra_ref_signal_meas meas_result = 3;
inline bool flex_eutra_measurements::has_meas_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_eutra_measurements::set_has_meas_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_eutra_measurements::clear_has_meas_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_eutra_measurements::clear_meas_result() {
  if (meas_result_ != NULL) meas_result_->::protocol::flex_eutra_ref_signal_meas::Clear();
  clear_has_meas_result();
}
inline const ::protocol::flex_eutra_ref_signal_meas& flex_eutra_measurements::meas_result() const {
  // @@protoc_insertion_point(field_get:protocol.flex_eutra_measurements.meas_result)
  return meas_result_ != NULL ? *meas_result_
                         : *::protocol::flex_eutra_ref_signal_meas::internal_default_instance();
}
inline ::protocol::flex_eutra_ref_signal_meas* flex_eutra_measurements::mutable_meas_result() {
  set_has_meas_result();
  if (meas_result_ == NULL) {
    meas_result_ = new ::protocol::flex_eutra_ref_signal_meas;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_eutra_measurements.meas_result)
  return meas_result_;
}
inline ::protocol::flex_eutra_ref_signal_meas* flex_eutra_measurements::release_meas_result() {
  // @@protoc_insertion_point(field_release:protocol.flex_eutra_measurements.meas_result)
  clear_has_meas_result();
  ::protocol::flex_eutra_ref_signal_meas* temp = meas_result_;
  meas_result_ = NULL;
  return temp;
}
inline void flex_eutra_measurements::set_allocated_meas_result(::protocol::flex_eutra_ref_signal_meas* meas_result) {
  delete meas_result_;
  meas_result_ = meas_result;
  if (meas_result) {
    set_has_meas_result();
  } else {
    clear_has_meas_result();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_eutra_measurements.meas_result)
}

// -------------------------------------------------------------------

// flex_eutra_cgi_measurements

// optional .protocol.flex_cell_global_eutra_id cgi = 1;
inline bool flex_eutra_cgi_measurements::has_cgi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_eutra_cgi_measurements::set_has_cgi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_eutra_cgi_measurements::clear_has_cgi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_eutra_cgi_measurements::clear_cgi() {
  if (cgi_ != NULL) cgi_->::protocol::flex_cell_global_eutra_id::Clear();
  clear_has_cgi();
}
inline const ::protocol::flex_cell_global_eutra_id& flex_eutra_cgi_measurements::cgi() const {
  // @@protoc_insertion_point(field_get:protocol.flex_eutra_cgi_measurements.cgi)
  return cgi_ != NULL ? *cgi_
                         : *::protocol::flex_cell_global_eutra_id::internal_default_instance();
}
inline ::protocol::flex_cell_global_eutra_id* flex_eutra_cgi_measurements::mutable_cgi() {
  set_has_cgi();
  if (cgi_ == NULL) {
    cgi_ = new ::protocol::flex_cell_global_eutra_id;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_eutra_cgi_measurements.cgi)
  return cgi_;
}
inline ::protocol::flex_cell_global_eutra_id* flex_eutra_cgi_measurements::release_cgi() {
  // @@protoc_insertion_point(field_release:protocol.flex_eutra_cgi_measurements.cgi)
  clear_has_cgi();
  ::protocol::flex_cell_global_eutra_id* temp = cgi_;
  cgi_ = NULL;
  return temp;
}
inline void flex_eutra_cgi_measurements::set_allocated_cgi(::protocol::flex_cell_global_eutra_id* cgi) {
  delete cgi_;
  cgi_ = cgi;
  if (cgi) {
    set_has_cgi();
  } else {
    clear_has_cgi();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_eutra_cgi_measurements.cgi)
}

// optional uint32 tracking_area_code = 2;
inline bool flex_eutra_cgi_measurements::has_tracking_area_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_eutra_cgi_measurements::set_has_tracking_area_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_eutra_cgi_measurements::clear_has_tracking_area_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_eutra_cgi_measurements::clear_tracking_area_code() {
  tracking_area_code_ = 0u;
  clear_has_tracking_area_code();
}
inline ::google::protobuf::uint32 flex_eutra_cgi_measurements::tracking_area_code() const {
  // @@protoc_insertion_point(field_get:protocol.flex_eutra_cgi_measurements.tracking_area_code)
  return tracking_area_code_;
}
inline void flex_eutra_cgi_measurements::set_tracking_area_code(::google::protobuf::uint32 value) {
  set_has_tracking_area_code();
  tracking_area_code_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_eutra_cgi_measurements.tracking_area_code)
}

// repeated .protocol.flex_plmn plmn = 3;
inline int flex_eutra_cgi_measurements::plmn_size() const {
  return plmn_.size();
}
inline void flex_eutra_cgi_measurements::clear_plmn() {
  plmn_.Clear();
}
inline const ::protocol::flex_plmn& flex_eutra_cgi_measurements::plmn(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_eutra_cgi_measurements.plmn)
  return plmn_.Get(index);
}
inline ::protocol::flex_plmn* flex_eutra_cgi_measurements::mutable_plmn(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_eutra_cgi_measurements.plmn)
  return plmn_.Mutable(index);
}
inline ::protocol::flex_plmn* flex_eutra_cgi_measurements::add_plmn() {
  // @@protoc_insertion_point(field_add:protocol.flex_eutra_cgi_measurements.plmn)
  return plmn_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_plmn >*
flex_eutra_cgi_measurements::mutable_plmn() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_eutra_cgi_measurements.plmn)
  return &plmn_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_plmn >&
flex_eutra_cgi_measurements::plmn() const {
  // @@protoc_insertion_point(field_list:protocol.flex_eutra_cgi_measurements.plmn)
  return plmn_;
}

// -------------------------------------------------------------------

// flex_cell_global_eutra_id

// optional .protocol.flex_plmn plmn = 1;
inline bool flex_cell_global_eutra_id::has_plmn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_cell_global_eutra_id::set_has_plmn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_cell_global_eutra_id::clear_has_plmn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_cell_global_eutra_id::clear_plmn() {
  if (plmn_ != NULL) plmn_->::protocol::flex_plmn::Clear();
  clear_has_plmn();
}
inline const ::protocol::flex_plmn& flex_cell_global_eutra_id::plmn() const {
  // @@protoc_insertion_point(field_get:protocol.flex_cell_global_eutra_id.plmn)
  return plmn_ != NULL ? *plmn_
                         : *::protocol::flex_plmn::internal_default_instance();
}
inline ::protocol::flex_plmn* flex_cell_global_eutra_id::mutable_plmn() {
  set_has_plmn();
  if (plmn_ == NULL) {
    plmn_ = new ::protocol::flex_plmn;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_cell_global_eutra_id.plmn)
  return plmn_;
}
inline ::protocol::flex_plmn* flex_cell_global_eutra_id::release_plmn() {
  // @@protoc_insertion_point(field_release:protocol.flex_cell_global_eutra_id.plmn)
  clear_has_plmn();
  ::protocol::flex_plmn* temp = plmn_;
  plmn_ = NULL;
  return temp;
}
inline void flex_cell_global_eutra_id::set_allocated_plmn(::protocol::flex_plmn* plmn) {
  delete plmn_;
  plmn_ = plmn;
  if (plmn) {
    set_has_plmn();
  } else {
    clear_has_plmn();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_cell_global_eutra_id.plmn)
}

// optional uint32 cell_id = 2;
inline bool flex_cell_global_eutra_id::has_cell_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_cell_global_eutra_id::set_has_cell_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_cell_global_eutra_id::clear_has_cell_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_cell_global_eutra_id::clear_cell_id() {
  cell_id_ = 0u;
  clear_has_cell_id();
}
inline ::google::protobuf::uint32 flex_cell_global_eutra_id::cell_id() const {
  // @@protoc_insertion_point(field_get:protocol.flex_cell_global_eutra_id.cell_id)
  return cell_id_;
}
inline void flex_cell_global_eutra_id::set_cell_id(::google::protobuf::uint32 value) {
  set_has_cell_id();
  cell_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_cell_global_eutra_id.cell_id)
}

// -------------------------------------------------------------------

// flex_eutra_ref_signal_meas

// optional int32 rsrp = 1;
inline bool flex_eutra_ref_signal_meas::has_rsrp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_eutra_ref_signal_meas::set_has_rsrp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_eutra_ref_signal_meas::clear_has_rsrp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_eutra_ref_signal_meas::clear_rsrp() {
  rsrp_ = 0;
  clear_has_rsrp();
}
inline ::google::protobuf::int32 flex_eutra_ref_signal_meas::rsrp() const {
  // @@protoc_insertion_point(field_get:protocol.flex_eutra_ref_signal_meas.rsrp)
  return rsrp_;
}
inline void flex_eutra_ref_signal_meas::set_rsrp(::google::protobuf::int32 value) {
  set_has_rsrp();
  rsrp_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_eutra_ref_signal_meas.rsrp)
}

// optional int32 rsrq = 2;
inline bool flex_eutra_ref_signal_meas::has_rsrq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_eutra_ref_signal_meas::set_has_rsrq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_eutra_ref_signal_meas::clear_has_rsrq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_eutra_ref_signal_meas::clear_rsrq() {
  rsrq_ = 0;
  clear_has_rsrq();
}
inline ::google::protobuf::int32 flex_eutra_ref_signal_meas::rsrq() const {
  // @@protoc_insertion_point(field_get:protocol.flex_eutra_ref_signal_meas.rsrq)
  return rsrq_;
}
inline void flex_eutra_ref_signal_meas::set_rsrq(::google::protobuf::int32 value) {
  set_has_rsrq();
  rsrq_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_eutra_ref_signal_meas.rsrq)
}

// -------------------------------------------------------------------

// flex_pdcp_stats

// optional uint32 pkt_tx = 1;
inline bool flex_pdcp_stats::has_pkt_tx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_tx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_pdcp_stats::clear_has_pkt_tx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_pdcp_stats::clear_pkt_tx() {
  pkt_tx_ = 0u;
  clear_has_pkt_tx();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_tx() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_tx)
  return pkt_tx_;
}
inline void flex_pdcp_stats::set_pkt_tx(::google::protobuf::uint32 value) {
  set_has_pkt_tx();
  pkt_tx_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_tx)
}

// optional uint32 pkt_tx_bytes = 2;
inline bool flex_pdcp_stats::has_pkt_tx_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_tx_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_pdcp_stats::clear_has_pkt_tx_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_pdcp_stats::clear_pkt_tx_bytes() {
  pkt_tx_bytes_ = 0u;
  clear_has_pkt_tx_bytes();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_tx_bytes() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_tx_bytes)
  return pkt_tx_bytes_;
}
inline void flex_pdcp_stats::set_pkt_tx_bytes(::google::protobuf::uint32 value) {
  set_has_pkt_tx_bytes();
  pkt_tx_bytes_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_tx_bytes)
}

// optional uint32 pkt_tx_sn = 3;
inline bool flex_pdcp_stats::has_pkt_tx_sn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_tx_sn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_pdcp_stats::clear_has_pkt_tx_sn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_pdcp_stats::clear_pkt_tx_sn() {
  pkt_tx_sn_ = 0u;
  clear_has_pkt_tx_sn();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_tx_sn() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_tx_sn)
  return pkt_tx_sn_;
}
inline void flex_pdcp_stats::set_pkt_tx_sn(::google::protobuf::uint32 value) {
  set_has_pkt_tx_sn();
  pkt_tx_sn_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_tx_sn)
}

// optional uint32 pkt_tx_w = 4;
inline bool flex_pdcp_stats::has_pkt_tx_w() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_tx_w() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_pdcp_stats::clear_has_pkt_tx_w() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_pdcp_stats::clear_pkt_tx_w() {
  pkt_tx_w_ = 0u;
  clear_has_pkt_tx_w();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_tx_w() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_tx_w)
  return pkt_tx_w_;
}
inline void flex_pdcp_stats::set_pkt_tx_w(::google::protobuf::uint32 value) {
  set_has_pkt_tx_w();
  pkt_tx_w_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_tx_w)
}

// optional uint32 pkt_tx_bytes_w = 5;
inline bool flex_pdcp_stats::has_pkt_tx_bytes_w() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_tx_bytes_w() {
  _has_bits_[0] |= 0x00000010u;
}
inline void flex_pdcp_stats::clear_has_pkt_tx_bytes_w() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void flex_pdcp_stats::clear_pkt_tx_bytes_w() {
  pkt_tx_bytes_w_ = 0u;
  clear_has_pkt_tx_bytes_w();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_tx_bytes_w() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_tx_bytes_w)
  return pkt_tx_bytes_w_;
}
inline void flex_pdcp_stats::set_pkt_tx_bytes_w(::google::protobuf::uint32 value) {
  set_has_pkt_tx_bytes_w();
  pkt_tx_bytes_w_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_tx_bytes_w)
}

// optional uint32 pkt_tx_aiat = 7;
inline bool flex_pdcp_stats::has_pkt_tx_aiat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_tx_aiat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void flex_pdcp_stats::clear_has_pkt_tx_aiat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void flex_pdcp_stats::clear_pkt_tx_aiat() {
  pkt_tx_aiat_ = 0u;
  clear_has_pkt_tx_aiat();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_tx_aiat() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_tx_aiat)
  return pkt_tx_aiat_;
}
inline void flex_pdcp_stats::set_pkt_tx_aiat(::google::protobuf::uint32 value) {
  set_has_pkt_tx_aiat();
  pkt_tx_aiat_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_tx_aiat)
}

// optional uint32 pkt_tx_aiat_w = 8;
inline bool flex_pdcp_stats::has_pkt_tx_aiat_w() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_tx_aiat_w() {
  _has_bits_[0] |= 0x00000040u;
}
inline void flex_pdcp_stats::clear_has_pkt_tx_aiat_w() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void flex_pdcp_stats::clear_pkt_tx_aiat_w() {
  pkt_tx_aiat_w_ = 0u;
  clear_has_pkt_tx_aiat_w();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_tx_aiat_w() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_tx_aiat_w)
  return pkt_tx_aiat_w_;
}
inline void flex_pdcp_stats::set_pkt_tx_aiat_w(::google::protobuf::uint32 value) {
  set_has_pkt_tx_aiat_w();
  pkt_tx_aiat_w_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_tx_aiat_w)
}

// optional uint32 pkt_rx = 9;
inline bool flex_pdcp_stats::has_pkt_rx() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_rx() {
  _has_bits_[0] |= 0x00000080u;
}
inline void flex_pdcp_stats::clear_has_pkt_rx() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void flex_pdcp_stats::clear_pkt_rx() {
  pkt_rx_ = 0u;
  clear_has_pkt_rx();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_rx() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_rx)
  return pkt_rx_;
}
inline void flex_pdcp_stats::set_pkt_rx(::google::protobuf::uint32 value) {
  set_has_pkt_rx();
  pkt_rx_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_rx)
}

// optional uint32 pkt_rx_bytes = 10;
inline bool flex_pdcp_stats::has_pkt_rx_bytes() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_rx_bytes() {
  _has_bits_[0] |= 0x00000100u;
}
inline void flex_pdcp_stats::clear_has_pkt_rx_bytes() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void flex_pdcp_stats::clear_pkt_rx_bytes() {
  pkt_rx_bytes_ = 0u;
  clear_has_pkt_rx_bytes();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_rx_bytes() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_rx_bytes)
  return pkt_rx_bytes_;
}
inline void flex_pdcp_stats::set_pkt_rx_bytes(::google::protobuf::uint32 value) {
  set_has_pkt_rx_bytes();
  pkt_rx_bytes_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_rx_bytes)
}

// optional uint32 pkt_rx_sn = 11;
inline bool flex_pdcp_stats::has_pkt_rx_sn() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_rx_sn() {
  _has_bits_[0] |= 0x00000200u;
}
inline void flex_pdcp_stats::clear_has_pkt_rx_sn() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void flex_pdcp_stats::clear_pkt_rx_sn() {
  pkt_rx_sn_ = 0u;
  clear_has_pkt_rx_sn();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_rx_sn() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_rx_sn)
  return pkt_rx_sn_;
}
inline void flex_pdcp_stats::set_pkt_rx_sn(::google::protobuf::uint32 value) {
  set_has_pkt_rx_sn();
  pkt_rx_sn_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_rx_sn)
}

// optional uint32 pkt_rx_w = 12;
inline bool flex_pdcp_stats::has_pkt_rx_w() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_rx_w() {
  _has_bits_[0] |= 0x00000400u;
}
inline void flex_pdcp_stats::clear_has_pkt_rx_w() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void flex_pdcp_stats::clear_pkt_rx_w() {
  pkt_rx_w_ = 0u;
  clear_has_pkt_rx_w();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_rx_w() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_rx_w)
  return pkt_rx_w_;
}
inline void flex_pdcp_stats::set_pkt_rx_w(::google::protobuf::uint32 value) {
  set_has_pkt_rx_w();
  pkt_rx_w_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_rx_w)
}

// optional uint32 pkt_rx_bytes_w = 13;
inline bool flex_pdcp_stats::has_pkt_rx_bytes_w() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_rx_bytes_w() {
  _has_bits_[0] |= 0x00000800u;
}
inline void flex_pdcp_stats::clear_has_pkt_rx_bytes_w() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void flex_pdcp_stats::clear_pkt_rx_bytes_w() {
  pkt_rx_bytes_w_ = 0u;
  clear_has_pkt_rx_bytes_w();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_rx_bytes_w() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_rx_bytes_w)
  return pkt_rx_bytes_w_;
}
inline void flex_pdcp_stats::set_pkt_rx_bytes_w(::google::protobuf::uint32 value) {
  set_has_pkt_rx_bytes_w();
  pkt_rx_bytes_w_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_rx_bytes_w)
}

// optional uint32 pkt_rx_aiat = 14;
inline bool flex_pdcp_stats::has_pkt_rx_aiat() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_rx_aiat() {
  _has_bits_[0] |= 0x00001000u;
}
inline void flex_pdcp_stats::clear_has_pkt_rx_aiat() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void flex_pdcp_stats::clear_pkt_rx_aiat() {
  pkt_rx_aiat_ = 0u;
  clear_has_pkt_rx_aiat();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_rx_aiat() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_rx_aiat)
  return pkt_rx_aiat_;
}
inline void flex_pdcp_stats::set_pkt_rx_aiat(::google::protobuf::uint32 value) {
  set_has_pkt_rx_aiat();
  pkt_rx_aiat_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_rx_aiat)
}

// optional uint32 pkt_rx_aiat_w = 15;
inline bool flex_pdcp_stats::has_pkt_rx_aiat_w() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_rx_aiat_w() {
  _has_bits_[0] |= 0x00002000u;
}
inline void flex_pdcp_stats::clear_has_pkt_rx_aiat_w() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void flex_pdcp_stats::clear_pkt_rx_aiat_w() {
  pkt_rx_aiat_w_ = 0u;
  clear_has_pkt_rx_aiat_w();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_rx_aiat_w() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_rx_aiat_w)
  return pkt_rx_aiat_w_;
}
inline void flex_pdcp_stats::set_pkt_rx_aiat_w(::google::protobuf::uint32 value) {
  set_has_pkt_rx_aiat_w();
  pkt_rx_aiat_w_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_rx_aiat_w)
}

// optional uint32 pkt_rx_oo = 16;
inline bool flex_pdcp_stats::has_pkt_rx_oo() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void flex_pdcp_stats::set_has_pkt_rx_oo() {
  _has_bits_[0] |= 0x00008000u;
}
inline void flex_pdcp_stats::clear_has_pkt_rx_oo() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void flex_pdcp_stats::clear_pkt_rx_oo() {
  pkt_rx_oo_ = 0u;
  clear_has_pkt_rx_oo();
}
inline ::google::protobuf::uint32 flex_pdcp_stats::pkt_rx_oo() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.pkt_rx_oo)
  return pkt_rx_oo_;
}
inline void flex_pdcp_stats::set_pkt_rx_oo(::google::protobuf::uint32 value) {
  set_has_pkt_rx_oo();
  pkt_rx_oo_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.pkt_rx_oo)
}

// optional uint64 sfn = 17;
inline bool flex_pdcp_stats::has_sfn() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void flex_pdcp_stats::set_has_sfn() {
  _has_bits_[0] |= 0x00004000u;
}
inline void flex_pdcp_stats::clear_has_sfn() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void flex_pdcp_stats::clear_sfn() {
  sfn_ = GOOGLE_ULONGLONG(0);
  clear_has_sfn();
}
inline ::google::protobuf::uint64 flex_pdcp_stats::sfn() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcp_stats.sfn)
  return sfn_;
}
inline void flex_pdcp_stats::set_sfn(::google::protobuf::uint64 value) {
  set_has_sfn();
  sfn_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcp_stats.sfn)
}

// -------------------------------------------------------------------

// flex_mac_stats

// optional uint32 tbs_dl = 1;
inline bool flex_mac_stats::has_tbs_dl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_mac_stats::set_has_tbs_dl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_mac_stats::clear_has_tbs_dl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_mac_stats::clear_tbs_dl() {
  tbs_dl_ = 0u;
  clear_has_tbs_dl();
}
inline ::google::protobuf::uint32 flex_mac_stats::tbs_dl() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.tbs_dl)
  return tbs_dl_;
}
inline void flex_mac_stats::set_tbs_dl(::google::protobuf::uint32 value) {
  set_has_tbs_dl();
  tbs_dl_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.tbs_dl)
}

// optional uint32 tbs_ul = 2;
inline bool flex_mac_stats::has_tbs_ul() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_mac_stats::set_has_tbs_ul() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_mac_stats::clear_has_tbs_ul() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_mac_stats::clear_tbs_ul() {
  tbs_ul_ = 0u;
  clear_has_tbs_ul();
}
inline ::google::protobuf::uint32 flex_mac_stats::tbs_ul() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.tbs_ul)
  return tbs_ul_;
}
inline void flex_mac_stats::set_tbs_ul(::google::protobuf::uint32 value) {
  set_has_tbs_ul();
  tbs_ul_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.tbs_ul)
}

// optional uint32 prb_retx_dl = 3;
inline bool flex_mac_stats::has_prb_retx_dl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_mac_stats::set_has_prb_retx_dl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_mac_stats::clear_has_prb_retx_dl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_mac_stats::clear_prb_retx_dl() {
  prb_retx_dl_ = 0u;
  clear_has_prb_retx_dl();
}
inline ::google::protobuf::uint32 flex_mac_stats::prb_retx_dl() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.prb_retx_dl)
  return prb_retx_dl_;
}
inline void flex_mac_stats::set_prb_retx_dl(::google::protobuf::uint32 value) {
  set_has_prb_retx_dl();
  prb_retx_dl_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.prb_retx_dl)
}

// optional uint32 prb_retx_ul = 4;
inline bool flex_mac_stats::has_prb_retx_ul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_mac_stats::set_has_prb_retx_ul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_mac_stats::clear_has_prb_retx_ul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_mac_stats::clear_prb_retx_ul() {
  prb_retx_ul_ = 0u;
  clear_has_prb_retx_ul();
}
inline ::google::protobuf::uint32 flex_mac_stats::prb_retx_ul() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.prb_retx_ul)
  return prb_retx_ul_;
}
inline void flex_mac_stats::set_prb_retx_ul(::google::protobuf::uint32 value) {
  set_has_prb_retx_ul();
  prb_retx_ul_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.prb_retx_ul)
}

// optional uint32 prb_dl = 5;
inline bool flex_mac_stats::has_prb_dl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void flex_mac_stats::set_has_prb_dl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void flex_mac_stats::clear_has_prb_dl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void flex_mac_stats::clear_prb_dl() {
  prb_dl_ = 0u;
  clear_has_prb_dl();
}
inline ::google::protobuf::uint32 flex_mac_stats::prb_dl() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.prb_dl)
  return prb_dl_;
}
inline void flex_mac_stats::set_prb_dl(::google::protobuf::uint32 value) {
  set_has_prb_dl();
  prb_dl_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.prb_dl)
}

// optional uint32 prb_ul = 6;
inline bool flex_mac_stats::has_prb_ul() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void flex_mac_stats::set_has_prb_ul() {
  _has_bits_[0] |= 0x00000020u;
}
inline void flex_mac_stats::clear_has_prb_ul() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void flex_mac_stats::clear_prb_ul() {
  prb_ul_ = 0u;
  clear_has_prb_ul();
}
inline ::google::protobuf::uint32 flex_mac_stats::prb_ul() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.prb_ul)
  return prb_ul_;
}
inline void flex_mac_stats::set_prb_ul(::google::protobuf::uint32 value) {
  set_has_prb_ul();
  prb_ul_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.prb_ul)
}

// optional uint32 mcs1_dl = 7;
inline bool flex_mac_stats::has_mcs1_dl() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void flex_mac_stats::set_has_mcs1_dl() {
  _has_bits_[0] |= 0x00000040u;
}
inline void flex_mac_stats::clear_has_mcs1_dl() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void flex_mac_stats::clear_mcs1_dl() {
  mcs1_dl_ = 0u;
  clear_has_mcs1_dl();
}
inline ::google::protobuf::uint32 flex_mac_stats::mcs1_dl() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.mcs1_dl)
  return mcs1_dl_;
}
inline void flex_mac_stats::set_mcs1_dl(::google::protobuf::uint32 value) {
  set_has_mcs1_dl();
  mcs1_dl_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.mcs1_dl)
}

// optional uint32 mcs2_dl = 8;
inline bool flex_mac_stats::has_mcs2_dl() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void flex_mac_stats::set_has_mcs2_dl() {
  _has_bits_[0] |= 0x00000080u;
}
inline void flex_mac_stats::clear_has_mcs2_dl() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void flex_mac_stats::clear_mcs2_dl() {
  mcs2_dl_ = 0u;
  clear_has_mcs2_dl();
}
inline ::google::protobuf::uint32 flex_mac_stats::mcs2_dl() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.mcs2_dl)
  return mcs2_dl_;
}
inline void flex_mac_stats::set_mcs2_dl(::google::protobuf::uint32 value) {
  set_has_mcs2_dl();
  mcs2_dl_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.mcs2_dl)
}

// optional uint32 mcs1_ul = 9;
inline bool flex_mac_stats::has_mcs1_ul() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void flex_mac_stats::set_has_mcs1_ul() {
  _has_bits_[0] |= 0x00000100u;
}
inline void flex_mac_stats::clear_has_mcs1_ul() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void flex_mac_stats::clear_mcs1_ul() {
  mcs1_ul_ = 0u;
  clear_has_mcs1_ul();
}
inline ::google::protobuf::uint32 flex_mac_stats::mcs1_ul() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.mcs1_ul)
  return mcs1_ul_;
}
inline void flex_mac_stats::set_mcs1_ul(::google::protobuf::uint32 value) {
  set_has_mcs1_ul();
  mcs1_ul_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.mcs1_ul)
}

// optional uint32 mcs2_ul = 10;
inline bool flex_mac_stats::has_mcs2_ul() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void flex_mac_stats::set_has_mcs2_ul() {
  _has_bits_[0] |= 0x00000200u;
}
inline void flex_mac_stats::clear_has_mcs2_ul() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void flex_mac_stats::clear_mcs2_ul() {
  mcs2_ul_ = 0u;
  clear_has_mcs2_ul();
}
inline ::google::protobuf::uint32 flex_mac_stats::mcs2_ul() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.mcs2_ul)
  return mcs2_ul_;
}
inline void flex_mac_stats::set_mcs2_ul(::google::protobuf::uint32 value) {
  set_has_mcs2_ul();
  mcs2_ul_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.mcs2_ul)
}

// optional uint32 total_bytes_sdus_ul = 11;
inline bool flex_mac_stats::has_total_bytes_sdus_ul() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void flex_mac_stats::set_has_total_bytes_sdus_ul() {
  _has_bits_[0] |= 0x00000400u;
}
inline void flex_mac_stats::clear_has_total_bytes_sdus_ul() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void flex_mac_stats::clear_total_bytes_sdus_ul() {
  total_bytes_sdus_ul_ = 0u;
  clear_has_total_bytes_sdus_ul();
}
inline ::google::protobuf::uint32 flex_mac_stats::total_bytes_sdus_ul() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.total_bytes_sdus_ul)
  return total_bytes_sdus_ul_;
}
inline void flex_mac_stats::set_total_bytes_sdus_ul(::google::protobuf::uint32 value) {
  set_has_total_bytes_sdus_ul();
  total_bytes_sdus_ul_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.total_bytes_sdus_ul)
}

// optional uint32 total_bytes_sdus_dl = 12;
inline bool flex_mac_stats::has_total_bytes_sdus_dl() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void flex_mac_stats::set_has_total_bytes_sdus_dl() {
  _has_bits_[0] |= 0x00000800u;
}
inline void flex_mac_stats::clear_has_total_bytes_sdus_dl() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void flex_mac_stats::clear_total_bytes_sdus_dl() {
  total_bytes_sdus_dl_ = 0u;
  clear_has_total_bytes_sdus_dl();
}
inline ::google::protobuf::uint32 flex_mac_stats::total_bytes_sdus_dl() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.total_bytes_sdus_dl)
  return total_bytes_sdus_dl_;
}
inline void flex_mac_stats::set_total_bytes_sdus_dl(::google::protobuf::uint32 value) {
  set_has_total_bytes_sdus_dl();
  total_bytes_sdus_dl_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.total_bytes_sdus_dl)
}

// optional uint32 total_prb_retx_dl = 13;
inline bool flex_mac_stats::has_total_prb_retx_dl() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void flex_mac_stats::set_has_total_prb_retx_dl() {
  _has_bits_[0] |= 0x00001000u;
}
inline void flex_mac_stats::clear_has_total_prb_retx_dl() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void flex_mac_stats::clear_total_prb_retx_dl() {
  total_prb_retx_dl_ = 0u;
  clear_has_total_prb_retx_dl();
}
inline ::google::protobuf::uint32 flex_mac_stats::total_prb_retx_dl() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.total_prb_retx_dl)
  return total_prb_retx_dl_;
}
inline void flex_mac_stats::set_total_prb_retx_dl(::google::protobuf::uint32 value) {
  set_has_total_prb_retx_dl();
  total_prb_retx_dl_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.total_prb_retx_dl)
}

// optional uint32 total_prb_retx_ul = 14;
inline bool flex_mac_stats::has_total_prb_retx_ul() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void flex_mac_stats::set_has_total_prb_retx_ul() {
  _has_bits_[0] |= 0x00002000u;
}
inline void flex_mac_stats::clear_has_total_prb_retx_ul() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void flex_mac_stats::clear_total_prb_retx_ul() {
  total_prb_retx_ul_ = 0u;
  clear_has_total_prb_retx_ul();
}
inline ::google::protobuf::uint32 flex_mac_stats::total_prb_retx_ul() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.total_prb_retx_ul)
  return total_prb_retx_ul_;
}
inline void flex_mac_stats::set_total_prb_retx_ul(::google::protobuf::uint32 value) {
  set_has_total_prb_retx_ul();
  total_prb_retx_ul_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.total_prb_retx_ul)
}

// optional uint32 total_prb_dl = 15;
inline bool flex_mac_stats::has_total_prb_dl() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void flex_mac_stats::set_has_total_prb_dl() {
  _has_bits_[0] |= 0x00004000u;
}
inline void flex_mac_stats::clear_has_total_prb_dl() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void flex_mac_stats::clear_total_prb_dl() {
  total_prb_dl_ = 0u;
  clear_has_total_prb_dl();
}
inline ::google::protobuf::uint32 flex_mac_stats::total_prb_dl() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.total_prb_dl)
  return total_prb_dl_;
}
inline void flex_mac_stats::set_total_prb_dl(::google::protobuf::uint32 value) {
  set_has_total_prb_dl();
  total_prb_dl_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.total_prb_dl)
}

// optional uint32 total_prb_ul = 16;
inline bool flex_mac_stats::has_total_prb_ul() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void flex_mac_stats::set_has_total_prb_ul() {
  _has_bits_[0] |= 0x00008000u;
}
inline void flex_mac_stats::clear_has_total_prb_ul() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void flex_mac_stats::clear_total_prb_ul() {
  total_prb_ul_ = 0u;
  clear_has_total_prb_ul();
}
inline ::google::protobuf::uint32 flex_mac_stats::total_prb_ul() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.total_prb_ul)
  return total_prb_ul_;
}
inline void flex_mac_stats::set_total_prb_ul(::google::protobuf::uint32 value) {
  set_has_total_prb_ul();
  total_prb_ul_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.total_prb_ul)
}

// optional uint32 total_pdu_dl = 17;
inline bool flex_mac_stats::has_total_pdu_dl() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void flex_mac_stats::set_has_total_pdu_dl() {
  _has_bits_[0] |= 0x00010000u;
}
inline void flex_mac_stats::clear_has_total_pdu_dl() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void flex_mac_stats::clear_total_pdu_dl() {
  total_pdu_dl_ = 0u;
  clear_has_total_pdu_dl();
}
inline ::google::protobuf::uint32 flex_mac_stats::total_pdu_dl() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.total_pdu_dl)
  return total_pdu_dl_;
}
inline void flex_mac_stats::set_total_pdu_dl(::google::protobuf::uint32 value) {
  set_has_total_pdu_dl();
  total_pdu_dl_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.total_pdu_dl)
}

// optional uint32 total_pdu_ul = 18;
inline bool flex_mac_stats::has_total_pdu_ul() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void flex_mac_stats::set_has_total_pdu_ul() {
  _has_bits_[0] |= 0x00020000u;
}
inline void flex_mac_stats::clear_has_total_pdu_ul() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void flex_mac_stats::clear_total_pdu_ul() {
  total_pdu_ul_ = 0u;
  clear_has_total_pdu_ul();
}
inline ::google::protobuf::uint32 flex_mac_stats::total_pdu_ul() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.total_pdu_ul)
  return total_pdu_ul_;
}
inline void flex_mac_stats::set_total_pdu_ul(::google::protobuf::uint32 value) {
  set_has_total_pdu_ul();
  total_pdu_ul_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.total_pdu_ul)
}

// optional uint32 total_tbs_dl = 19;
inline bool flex_mac_stats::has_total_tbs_dl() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void flex_mac_stats::set_has_total_tbs_dl() {
  _has_bits_[0] |= 0x00040000u;
}
inline void flex_mac_stats::clear_has_total_tbs_dl() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void flex_mac_stats::clear_total_tbs_dl() {
  total_tbs_dl_ = 0u;
  clear_has_total_tbs_dl();
}
inline ::google::protobuf::uint32 flex_mac_stats::total_tbs_dl() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.total_tbs_dl)
  return total_tbs_dl_;
}
inline void flex_mac_stats::set_total_tbs_dl(::google::protobuf::uint32 value) {
  set_has_total_tbs_dl();
  total_tbs_dl_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.total_tbs_dl)
}

// optional uint32 total_tbs_ul = 20;
inline bool flex_mac_stats::has_total_tbs_ul() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void flex_mac_stats::set_has_total_tbs_ul() {
  _has_bits_[0] |= 0x00080000u;
}
inline void flex_mac_stats::clear_has_total_tbs_ul() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void flex_mac_stats::clear_total_tbs_ul() {
  total_tbs_ul_ = 0u;
  clear_has_total_tbs_ul();
}
inline ::google::protobuf::uint32 flex_mac_stats::total_tbs_ul() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.total_tbs_ul)
  return total_tbs_ul_;
}
inline void flex_mac_stats::set_total_tbs_ul(::google::protobuf::uint32 value) {
  set_has_total_tbs_ul();
  total_tbs_ul_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.total_tbs_ul)
}

// repeated .protocol.flex_mac_sdus_dl mac_sdus_dl = 21;
inline int flex_mac_stats::mac_sdus_dl_size() const {
  return mac_sdus_dl_.size();
}
inline void flex_mac_stats::clear_mac_sdus_dl() {
  mac_sdus_dl_.Clear();
}
inline const ::protocol::flex_mac_sdus_dl& flex_mac_stats::mac_sdus_dl(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.mac_sdus_dl)
  return mac_sdus_dl_.Get(index);
}
inline ::protocol::flex_mac_sdus_dl* flex_mac_stats::mutable_mac_sdus_dl(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_mac_stats.mac_sdus_dl)
  return mac_sdus_dl_.Mutable(index);
}
inline ::protocol::flex_mac_sdus_dl* flex_mac_stats::add_mac_sdus_dl() {
  // @@protoc_insertion_point(field_add:protocol.flex_mac_stats.mac_sdus_dl)
  return mac_sdus_dl_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_mac_sdus_dl >*
flex_mac_stats::mutable_mac_sdus_dl() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_mac_stats.mac_sdus_dl)
  return &mac_sdus_dl_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_mac_sdus_dl >&
flex_mac_stats::mac_sdus_dl() const {
  // @@protoc_insertion_point(field_list:protocol.flex_mac_stats.mac_sdus_dl)
  return mac_sdus_dl_;
}

// optional uint32 harq_round = 22;
inline bool flex_mac_stats::has_harq_round() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void flex_mac_stats::set_has_harq_round() {
  _has_bits_[0] |= 0x00100000u;
}
inline void flex_mac_stats::clear_has_harq_round() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void flex_mac_stats::clear_harq_round() {
  harq_round_ = 0u;
  clear_has_harq_round();
}
inline ::google::protobuf::uint32 flex_mac_stats::harq_round() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_stats.harq_round)
  return harq_round_;
}
inline void flex_mac_stats::set_harq_round(::google::protobuf::uint32 value) {
  set_has_harq_round();
  harq_round_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_stats.harq_round)
}

// -------------------------------------------------------------------

// flex_mac_sdus_dl

// optional uint32 sdu_length = 1;
inline bool flex_mac_sdus_dl::has_sdu_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_mac_sdus_dl::set_has_sdu_length() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_mac_sdus_dl::clear_has_sdu_length() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_mac_sdus_dl::clear_sdu_length() {
  sdu_length_ = 0u;
  clear_has_sdu_length();
}
inline ::google::protobuf::uint32 flex_mac_sdus_dl::sdu_length() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_sdus_dl.sdu_length)
  return sdu_length_;
}
inline void flex_mac_sdus_dl::set_sdu_length(::google::protobuf::uint32 value) {
  set_has_sdu_length();
  sdu_length_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_sdus_dl.sdu_length)
}

// optional uint32 lcid = 2;
inline bool flex_mac_sdus_dl::has_lcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_mac_sdus_dl::set_has_lcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_mac_sdus_dl::clear_has_lcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_mac_sdus_dl::clear_lcid() {
  lcid_ = 0u;
  clear_has_lcid();
}
inline ::google::protobuf::uint32 flex_mac_sdus_dl::lcid() const {
  // @@protoc_insertion_point(field_get:protocol.flex_mac_sdus_dl.lcid)
  return lcid_;
}
inline void flex_mac_sdus_dl::set_lcid(::google::protobuf::uint32 value) {
  set_has_lcid();
  lcid_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_mac_sdus_dl.lcid)
}

// -------------------------------------------------------------------

// flex_gtp_stats

// optional uint32 e_rab_id = 1;
inline bool flex_gtp_stats::has_e_rab_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_gtp_stats::set_has_e_rab_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_gtp_stats::clear_has_e_rab_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_gtp_stats::clear_e_rab_id() {
  e_rab_id_ = 0u;
  clear_has_e_rab_id();
}
inline ::google::protobuf::uint32 flex_gtp_stats::e_rab_id() const {
  // @@protoc_insertion_point(field_get:protocol.flex_gtp_stats.e_rab_id)
  return e_rab_id_;
}
inline void flex_gtp_stats::set_e_rab_id(::google::protobuf::uint32 value) {
  set_has_e_rab_id();
  e_rab_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_gtp_stats.e_rab_id)
}

// optional uint32 teid_enb = 2;
inline bool flex_gtp_stats::has_teid_enb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_gtp_stats::set_has_teid_enb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_gtp_stats::clear_has_teid_enb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_gtp_stats::clear_teid_enb() {
  teid_enb_ = 0u;
  clear_has_teid_enb();
}
inline ::google::protobuf::uint32 flex_gtp_stats::teid_enb() const {
  // @@protoc_insertion_point(field_get:protocol.flex_gtp_stats.teid_enb)
  return teid_enb_;
}
inline void flex_gtp_stats::set_teid_enb(::google::protobuf::uint32 value) {
  set_has_teid_enb();
  teid_enb_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_gtp_stats.teid_enb)
}

// optional string addr_enb = 3;
inline bool flex_gtp_stats::has_addr_enb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_gtp_stats::set_has_addr_enb() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_gtp_stats::clear_has_addr_enb() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_gtp_stats::clear_addr_enb() {
  addr_enb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr_enb();
}
inline const ::std::string& flex_gtp_stats::addr_enb() const {
  // @@protoc_insertion_point(field_get:protocol.flex_gtp_stats.addr_enb)
  return addr_enb_.GetNoArena();
}
inline void flex_gtp_stats::set_addr_enb(const ::std::string& value) {
  set_has_addr_enb();
  addr_enb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.flex_gtp_stats.addr_enb)
}
#if LANG_CXX11
inline void flex_gtp_stats::set_addr_enb(::std::string&& value) {
  set_has_addr_enb();
  addr_enb_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.flex_gtp_stats.addr_enb)
}
#endif
inline void flex_gtp_stats::set_addr_enb(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_addr_enb();
  addr_enb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.flex_gtp_stats.addr_enb)
}
inline void flex_gtp_stats::set_addr_enb(const char* value, size_t size) {
  set_has_addr_enb();
  addr_enb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.flex_gtp_stats.addr_enb)
}
inline ::std::string* flex_gtp_stats::mutable_addr_enb() {
  set_has_addr_enb();
  // @@protoc_insertion_point(field_mutable:protocol.flex_gtp_stats.addr_enb)
  return addr_enb_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* flex_gtp_stats::release_addr_enb() {
  // @@protoc_insertion_point(field_release:protocol.flex_gtp_stats.addr_enb)
  clear_has_addr_enb();
  return addr_enb_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void flex_gtp_stats::set_allocated_addr_enb(::std::string* addr_enb) {
  if (addr_enb != NULL) {
    set_has_addr_enb();
  } else {
    clear_has_addr_enb();
  }
  addr_enb_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr_enb);
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_gtp_stats.addr_enb)
}

// optional uint32 teid_sgw = 4;
inline bool flex_gtp_stats::has_teid_sgw() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void flex_gtp_stats::set_has_teid_sgw() {
  _has_bits_[0] |= 0x00000010u;
}
inline void flex_gtp_stats::clear_has_teid_sgw() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void flex_gtp_stats::clear_teid_sgw() {
  teid_sgw_ = 0u;
  clear_has_teid_sgw();
}
inline ::google::protobuf::uint32 flex_gtp_stats::teid_sgw() const {
  // @@protoc_insertion_point(field_get:protocol.flex_gtp_stats.teid_sgw)
  return teid_sgw_;
}
inline void flex_gtp_stats::set_teid_sgw(::google::protobuf::uint32 value) {
  set_has_teid_sgw();
  teid_sgw_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_gtp_stats.teid_sgw)
}

// optional string addr_sgw = 5;
inline bool flex_gtp_stats::has_addr_sgw() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_gtp_stats::set_has_addr_sgw() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_gtp_stats::clear_has_addr_sgw() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_gtp_stats::clear_addr_sgw() {
  addr_sgw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr_sgw();
}
inline const ::std::string& flex_gtp_stats::addr_sgw() const {
  // @@protoc_insertion_point(field_get:protocol.flex_gtp_stats.addr_sgw)
  return addr_sgw_.GetNoArena();
}
inline void flex_gtp_stats::set_addr_sgw(const ::std::string& value) {
  set_has_addr_sgw();
  addr_sgw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.flex_gtp_stats.addr_sgw)
}
#if LANG_CXX11
inline void flex_gtp_stats::set_addr_sgw(::std::string&& value) {
  set_has_addr_sgw();
  addr_sgw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.flex_gtp_stats.addr_sgw)
}
#endif
inline void flex_gtp_stats::set_addr_sgw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_addr_sgw();
  addr_sgw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.flex_gtp_stats.addr_sgw)
}
inline void flex_gtp_stats::set_addr_sgw(const char* value, size_t size) {
  set_has_addr_sgw();
  addr_sgw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.flex_gtp_stats.addr_sgw)
}
inline ::std::string* flex_gtp_stats::mutable_addr_sgw() {
  set_has_addr_sgw();
  // @@protoc_insertion_point(field_mutable:protocol.flex_gtp_stats.addr_sgw)
  return addr_sgw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* flex_gtp_stats::release_addr_sgw() {
  // @@protoc_insertion_point(field_release:protocol.flex_gtp_stats.addr_sgw)
  clear_has_addr_sgw();
  return addr_sgw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void flex_gtp_stats::set_allocated_addr_sgw(::std::string* addr_sgw) {
  if (addr_sgw != NULL) {
    set_has_addr_sgw();
  } else {
    clear_has_addr_sgw();
  }
  addr_sgw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr_sgw);
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_gtp_stats.addr_sgw)
}

// -------------------------------------------------------------------

// flex_s1ap_ue

// optional string mme_s1_ip = 1;
inline bool flex_s1ap_ue::has_mme_s1_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_s1ap_ue::set_has_mme_s1_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_s1ap_ue::clear_has_mme_s1_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_s1ap_ue::clear_mme_s1_ip() {
  mme_s1_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mme_s1_ip();
}
inline const ::std::string& flex_s1ap_ue::mme_s1_ip() const {
  // @@protoc_insertion_point(field_get:protocol.flex_s1ap_ue.mme_s1_ip)
  return mme_s1_ip_.GetNoArena();
}
inline void flex_s1ap_ue::set_mme_s1_ip(const ::std::string& value) {
  set_has_mme_s1_ip();
  mme_s1_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.flex_s1ap_ue.mme_s1_ip)
}
#if LANG_CXX11
inline void flex_s1ap_ue::set_mme_s1_ip(::std::string&& value) {
  set_has_mme_s1_ip();
  mme_s1_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.flex_s1ap_ue.mme_s1_ip)
}
#endif
inline void flex_s1ap_ue::set_mme_s1_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mme_s1_ip();
  mme_s1_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.flex_s1ap_ue.mme_s1_ip)
}
inline void flex_s1ap_ue::set_mme_s1_ip(const char* value, size_t size) {
  set_has_mme_s1_ip();
  mme_s1_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.flex_s1ap_ue.mme_s1_ip)
}
inline ::std::string* flex_s1ap_ue::mutable_mme_s1_ip() {
  set_has_mme_s1_ip();
  // @@protoc_insertion_point(field_mutable:protocol.flex_s1ap_ue.mme_s1_ip)
  return mme_s1_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* flex_s1ap_ue::release_mme_s1_ip() {
  // @@protoc_insertion_point(field_release:protocol.flex_s1ap_ue.mme_s1_ip)
  clear_has_mme_s1_ip();
  return mme_s1_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void flex_s1ap_ue::set_allocated_mme_s1_ip(::std::string* mme_s1_ip) {
  if (mme_s1_ip != NULL) {
    set_has_mme_s1_ip();
  } else {
    clear_has_mme_s1_ip();
  }
  mme_s1_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mme_s1_ip);
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_s1ap_ue.mme_s1_ip)
}

// optional uint32 enb_ue_s1ap_id = 2;
inline bool flex_s1ap_ue::has_enb_ue_s1ap_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_s1ap_ue::set_has_enb_ue_s1ap_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_s1ap_ue::clear_has_enb_ue_s1ap_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_s1ap_ue::clear_enb_ue_s1ap_id() {
  enb_ue_s1ap_id_ = 0u;
  clear_has_enb_ue_s1ap_id();
}
inline ::google::protobuf::uint32 flex_s1ap_ue::enb_ue_s1ap_id() const {
  // @@protoc_insertion_point(field_get:protocol.flex_s1ap_ue.enb_ue_s1ap_id)
  return enb_ue_s1ap_id_;
}
inline void flex_s1ap_ue::set_enb_ue_s1ap_id(::google::protobuf::uint32 value) {
  set_has_enb_ue_s1ap_id();
  enb_ue_s1ap_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_s1ap_ue.enb_ue_s1ap_id)
}

// optional uint32 mme_ue_s1ap_id = 3;
inline bool flex_s1ap_ue::has_mme_ue_s1ap_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_s1ap_ue::set_has_mme_ue_s1ap_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_s1ap_ue::clear_has_mme_ue_s1ap_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_s1ap_ue::clear_mme_ue_s1ap_id() {
  mme_ue_s1ap_id_ = 0u;
  clear_has_mme_ue_s1ap_id();
}
inline ::google::protobuf::uint32 flex_s1ap_ue::mme_ue_s1ap_id() const {
  // @@protoc_insertion_point(field_get:protocol.flex_s1ap_ue.mme_ue_s1ap_id)
  return mme_ue_s1ap_id_;
}
inline void flex_s1ap_ue::set_mme_ue_s1ap_id(::google::protobuf::uint32 value) {
  set_has_mme_ue_s1ap_id();
  mme_ue_s1ap_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_s1ap_ue.mme_ue_s1ap_id)
}

// optional .protocol.flex_plmn selected_plmn = 4;
inline bool flex_s1ap_ue::has_selected_plmn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_s1ap_ue::set_has_selected_plmn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_s1ap_ue::clear_has_selected_plmn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_s1ap_ue::clear_selected_plmn() {
  if (selected_plmn_ != NULL) selected_plmn_->::protocol::flex_plmn::Clear();
  clear_has_selected_plmn();
}
inline const ::protocol::flex_plmn& flex_s1ap_ue::selected_plmn() const {
  // @@protoc_insertion_point(field_get:protocol.flex_s1ap_ue.selected_plmn)
  return selected_plmn_ != NULL ? *selected_plmn_
                         : *::protocol::flex_plmn::internal_default_instance();
}
inline ::protocol::flex_plmn* flex_s1ap_ue::mutable_selected_plmn() {
  set_has_selected_plmn();
  if (selected_plmn_ == NULL) {
    selected_plmn_ = new ::protocol::flex_plmn;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_s1ap_ue.selected_plmn)
  return selected_plmn_;
}
inline ::protocol::flex_plmn* flex_s1ap_ue::release_selected_plmn() {
  // @@protoc_insertion_point(field_release:protocol.flex_s1ap_ue.selected_plmn)
  clear_has_selected_plmn();
  ::protocol::flex_plmn* temp = selected_plmn_;
  selected_plmn_ = NULL;
  return temp;
}
inline void flex_s1ap_ue::set_allocated_selected_plmn(::protocol::flex_plmn* selected_plmn) {
  delete selected_plmn_;
  selected_plmn_ = selected_plmn;
  if (selected_plmn) {
    set_has_selected_plmn();
  } else {
    clear_has_selected_plmn();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_s1ap_ue.selected_plmn)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protocol::flex_ce_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::flex_ce_type>() {
  return ::protocol::flex_ce_type_descriptor();
}
template <> struct is_proto_enum< ::protocol::flex_csi_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::flex_csi_type>() {
  return ::protocol::flex_csi_type_descriptor();
}
template <> struct is_proto_enum< ::protocol::flex_ul_cqi_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::flex_ul_cqi_type>() {
  return ::protocol::flex_ul_cqi_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_stats_5fcommon_2eproto__INCLUDED
