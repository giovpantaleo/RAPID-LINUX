// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_commands.proto

#ifndef PROTOBUF_controller_5fcommands_2eproto__INCLUDED
#define PROTOBUF_controller_5fcommands_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "mac_primitives.pb.h"
// @@protoc_insertion_point(includes)
namespace protocol {
class flex_dl_broadcast;
class flex_dl_broadcastDefaultTypeInternal;
extern flex_dl_broadcastDefaultTypeInternal _flex_dl_broadcast_default_instance_;
class flex_dl_data;
class flex_dl_dataDefaultTypeInternal;
extern flex_dl_dataDefaultTypeInternal _flex_dl_data_default_instance_;
class flex_dl_dci;
class flex_dl_dciDefaultTypeInternal;
extern flex_dl_dciDefaultTypeInternal _flex_dl_dci_default_instance_;
class flex_dl_rar;
class flex_dl_rarDefaultTypeInternal;
extern flex_dl_rarDefaultTypeInternal _flex_dl_rar_default_instance_;
class flex_pdcch_ofdm_sym_count;
class flex_pdcch_ofdm_sym_countDefaultTypeInternal;
extern flex_pdcch_ofdm_sym_countDefaultTypeInternal _flex_pdcch_ofdm_sym_count_default_instance_;
class flex_rlc_pdu;
class flex_rlc_pduDefaultTypeInternal;
extern flex_rlc_pduDefaultTypeInternal _flex_rlc_pdu_default_instance_;
class flex_rlc_pdu_tb;
class flex_rlc_pdu_tbDefaultTypeInternal;
extern flex_rlc_pdu_tbDefaultTypeInternal _flex_rlc_pdu_tb_default_instance_;
class flex_ul_data;
class flex_ul_dataDefaultTypeInternal;
extern flex_ul_dataDefaultTypeInternal _flex_ul_data_default_instance_;
class flex_ul_dci;
class flex_ul_dciDefaultTypeInternal;
extern flex_ul_dciDefaultTypeInternal _flex_ul_dci_default_instance_;
}  // namespace protocol

namespace protocol {

namespace protobuf_controller_5fcommands_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_controller_5fcommands_2eproto

enum flex_broadcast_type {
  FLBT_BCCH = 0,
  FLBT_PCCH = 1
};
bool flex_broadcast_type_IsValid(int value);
const flex_broadcast_type flex_broadcast_type_MIN = FLBT_BCCH;
const flex_broadcast_type flex_broadcast_type_MAX = FLBT_PCCH;
const int flex_broadcast_type_ARRAYSIZE = flex_broadcast_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* flex_broadcast_type_descriptor();
inline const ::std::string& flex_broadcast_type_Name(flex_broadcast_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    flex_broadcast_type_descriptor(), value);
}
inline bool flex_broadcast_type_Parse(
    const ::std::string& name, flex_broadcast_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<flex_broadcast_type>(
    flex_broadcast_type_descriptor(), name, value);
}
// ===================================================================

class flex_dl_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_dl_data) */ {
 public:
  flex_dl_data();
  virtual ~flex_dl_data();

  flex_dl_data(const flex_dl_data& from);

  inline flex_dl_data& operator=(const flex_dl_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_dl_data& default_instance();

  static inline const flex_dl_data* internal_default_instance() {
    return reinterpret_cast<const flex_dl_data*>(
               &_flex_dl_data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(flex_dl_data* other);

  // implements Message ----------------------------------------------

  inline flex_dl_data* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_dl_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_dl_data& from);
  void MergeFrom(const flex_dl_data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_dl_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ce_bitmap = 3;
  int ce_bitmap_size() const;
  void clear_ce_bitmap();
  static const int kCeBitmapFieldNumber = 3;
  ::google::protobuf::uint32 ce_bitmap(int index) const;
  void set_ce_bitmap(int index, ::google::protobuf::uint32 value);
  void add_ce_bitmap(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ce_bitmap() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ce_bitmap();

  // repeated .protocol.flex_rlc_pdu rlc_pdu = 4;
  int rlc_pdu_size() const;
  void clear_rlc_pdu();
  static const int kRlcPduFieldNumber = 4;
  const ::protocol::flex_rlc_pdu& rlc_pdu(int index) const;
  ::protocol::flex_rlc_pdu* mutable_rlc_pdu(int index);
  ::protocol::flex_rlc_pdu* add_rlc_pdu();
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_rlc_pdu >*
      mutable_rlc_pdu();
  const ::google::protobuf::RepeatedPtrField< ::protocol::flex_rlc_pdu >&
      rlc_pdu() const;

  // optional .protocol.flex_dl_dci dl_dci = 2;
  bool has_dl_dci() const;
  void clear_dl_dci();
  static const int kDlDciFieldNumber = 2;
  const ::protocol::flex_dl_dci& dl_dci() const;
  ::protocol::flex_dl_dci* mutable_dl_dci();
  ::protocol::flex_dl_dci* release_dl_dci();
  void set_allocated_dl_dci(::protocol::flex_dl_dci* dl_dci);

  // optional uint32 rnti = 1;
  bool has_rnti() const;
  void clear_rnti();
  static const int kRntiFieldNumber = 1;
  ::google::protobuf::uint32 rnti() const;
  void set_rnti(::google::protobuf::uint32 value);

  // optional uint32 serv_cell_index = 5;
  bool has_serv_cell_index() const;
  void clear_serv_cell_index();
  static const int kServCellIndexFieldNumber = 5;
  ::google::protobuf::uint32 serv_cell_index() const;
  void set_serv_cell_index(::google::protobuf::uint32 value);

  // optional uint32 act_deact_ce = 6;
  bool has_act_deact_ce() const;
  void clear_act_deact_ce();
  static const int kActDeactCeFieldNumber = 6;
  ::google::protobuf::uint32 act_deact_ce() const;
  void set_act_deact_ce(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_dl_data)
 private:
  void set_has_rnti();
  void clear_has_rnti();
  void set_has_dl_dci();
  void clear_has_dl_dci();
  void set_has_serv_cell_index();
  void clear_has_serv_cell_index();
  void set_has_act_deact_ce();
  void clear_has_act_deact_ce();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ce_bitmap_;
  ::google::protobuf::RepeatedPtrField< ::protocol::flex_rlc_pdu > rlc_pdu_;
  ::protocol::flex_dl_dci* dl_dci_;
  ::google::protobuf::uint32 rnti_;
  ::google::protobuf::uint32 serv_cell_index_;
  ::google::protobuf::uint32 act_deact_ce_;
  friend struct protobuf_controller_5fcommands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_ul_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_ul_data) */ {
 public:
  flex_ul_data();
  virtual ~flex_ul_data();

  flex_ul_data(const flex_ul_data& from);

  inline flex_ul_data& operator=(const flex_ul_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_ul_data& default_instance();

  static inline const flex_ul_data* internal_default_instance() {
    return reinterpret_cast<const flex_ul_data*>(
               &_flex_ul_data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(flex_ul_data* other);

  // implements Message ----------------------------------------------

  inline flex_ul_data* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_ul_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_ul_data& from);
  void MergeFrom(const flex_ul_data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_ul_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.flex_ul_dci ul_dci = 2;
  bool has_ul_dci() const;
  void clear_ul_dci();
  static const int kUlDciFieldNumber = 2;
  const ::protocol::flex_ul_dci& ul_dci() const;
  ::protocol::flex_ul_dci* mutable_ul_dci();
  ::protocol::flex_ul_dci* release_ul_dci();
  void set_allocated_ul_dci(::protocol::flex_ul_dci* ul_dci);

  // optional uint32 rnti = 1;
  bool has_rnti() const;
  void clear_rnti();
  static const int kRntiFieldNumber = 1;
  ::google::protobuf::uint32 rnti() const;
  void set_rnti(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_ul_data)
 private:
  void set_has_rnti();
  void clear_has_rnti();
  void set_has_ul_dci();
  void clear_has_ul_dci();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::protocol::flex_ul_dci* ul_dci_;
  ::google::protobuf::uint32 rnti_;
  friend struct protobuf_controller_5fcommands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_dl_rar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_dl_rar) */ {
 public:
  flex_dl_rar();
  virtual ~flex_dl_rar();

  flex_dl_rar(const flex_dl_rar& from);

  inline flex_dl_rar& operator=(const flex_dl_rar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_dl_rar& default_instance();

  static inline const flex_dl_rar* internal_default_instance() {
    return reinterpret_cast<const flex_dl_rar*>(
               &_flex_dl_rar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(flex_dl_rar* other);

  // implements Message ----------------------------------------------

  inline flex_dl_rar* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_dl_rar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_dl_rar& from);
  void MergeFrom(const flex_dl_rar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_dl_rar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.flex_dl_dci rar_dci = 3;
  bool has_rar_dci() const;
  void clear_rar_dci();
  static const int kRarDciFieldNumber = 3;
  const ::protocol::flex_dl_dci& rar_dci() const;
  ::protocol::flex_dl_dci* mutable_rar_dci();
  ::protocol::flex_dl_dci* release_rar_dci();
  void set_allocated_rar_dci(::protocol::flex_dl_dci* rar_dci);

  // optional uint32 rnti = 1;
  bool has_rnti() const;
  void clear_rnti();
  static const int kRntiFieldNumber = 1;
  ::google::protobuf::uint32 rnti() const;
  void set_rnti(::google::protobuf::uint32 value);

  // optional uint32 grant = 2;
  bool has_grant() const;
  void clear_grant();
  static const int kGrantFieldNumber = 2;
  ::google::protobuf::uint32 grant() const;
  void set_grant(::google::protobuf::uint32 value);

  // optional uint32 carrier_index = 4;
  bool has_carrier_index() const;
  void clear_carrier_index();
  static const int kCarrierIndexFieldNumber = 4;
  ::google::protobuf::uint32 carrier_index() const;
  void set_carrier_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_dl_rar)
 private:
  void set_has_rnti();
  void clear_has_rnti();
  void set_has_grant();
  void clear_has_grant();
  void set_has_rar_dci();
  void clear_has_rar_dci();
  void set_has_carrier_index();
  void clear_has_carrier_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::protocol::flex_dl_dci* rar_dci_;
  ::google::protobuf::uint32 rnti_;
  ::google::protobuf::uint32 grant_;
  ::google::protobuf::uint32 carrier_index_;
  friend struct protobuf_controller_5fcommands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_dl_broadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_dl_broadcast) */ {
 public:
  flex_dl_broadcast();
  virtual ~flex_dl_broadcast();

  flex_dl_broadcast(const flex_dl_broadcast& from);

  inline flex_dl_broadcast& operator=(const flex_dl_broadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_dl_broadcast& default_instance();

  static inline const flex_dl_broadcast* internal_default_instance() {
    return reinterpret_cast<const flex_dl_broadcast*>(
               &_flex_dl_broadcast_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(flex_dl_broadcast* other);

  // implements Message ----------------------------------------------

  inline flex_dl_broadcast* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_dl_broadcast* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_dl_broadcast& from);
  void MergeFrom(const flex_dl_broadcast& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_dl_broadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.flex_dl_dci broad_dci = 3;
  bool has_broad_dci() const;
  void clear_broad_dci();
  static const int kBroadDciFieldNumber = 3;
  const ::protocol::flex_dl_dci& broad_dci() const;
  ::protocol::flex_dl_dci* mutable_broad_dci();
  ::protocol::flex_dl_dci* release_broad_dci();
  void set_allocated_broad_dci(::protocol::flex_dl_dci* broad_dci);

  // optional uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // optional uint32 carrier_index = 4;
  bool has_carrier_index() const;
  void clear_carrier_index();
  static const int kCarrierIndexFieldNumber = 4;
  ::google::protobuf::uint32 carrier_index() const;
  void set_carrier_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_dl_broadcast)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_index();
  void clear_has_index();
  void set_has_broad_dci();
  void clear_has_broad_dci();
  void set_has_carrier_index();
  void clear_has_carrier_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::protocol::flex_dl_dci* broad_dci_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 carrier_index_;
  friend struct protobuf_controller_5fcommands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class flex_pdcch_ofdm_sym_count : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_pdcch_ofdm_sym_count) */ {
 public:
  flex_pdcch_ofdm_sym_count();
  virtual ~flex_pdcch_ofdm_sym_count();

  flex_pdcch_ofdm_sym_count(const flex_pdcch_ofdm_sym_count& from);

  inline flex_pdcch_ofdm_sym_count& operator=(const flex_pdcch_ofdm_sym_count& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_pdcch_ofdm_sym_count& default_instance();

  static inline const flex_pdcch_ofdm_sym_count* internal_default_instance() {
    return reinterpret_cast<const flex_pdcch_ofdm_sym_count*>(
               &_flex_pdcch_ofdm_sym_count_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(flex_pdcch_ofdm_sym_count* other);

  // implements Message ----------------------------------------------

  inline flex_pdcch_ofdm_sym_count* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_pdcch_ofdm_sym_count* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_pdcch_ofdm_sym_count& from);
  void MergeFrom(const flex_pdcch_ofdm_sym_count& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_pdcch_ofdm_sym_count* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 carrier_index = 1;
  bool has_carrier_index() const;
  void clear_carrier_index();
  static const int kCarrierIndexFieldNumber = 1;
  ::google::protobuf::uint32 carrier_index() const;
  void set_carrier_index(::google::protobuf::uint32 value);

  // optional uint32 num_pdcch_ofdm_symbols = 2;
  bool has_num_pdcch_ofdm_symbols() const;
  void clear_num_pdcch_ofdm_symbols();
  static const int kNumPdcchOfdmSymbolsFieldNumber = 2;
  ::google::protobuf::uint32 num_pdcch_ofdm_symbols() const;
  void set_num_pdcch_ofdm_symbols(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_pdcch_ofdm_sym_count)
 private:
  void set_has_carrier_index();
  void clear_has_carrier_index();
  void set_has_num_pdcch_ofdm_symbols();
  void clear_has_num_pdcch_ofdm_symbols();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 carrier_index_;
  ::google::protobuf::uint32 num_pdcch_ofdm_symbols_;
  friend struct protobuf_controller_5fcommands_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// flex_dl_data

// optional uint32 rnti = 1;
inline bool flex_dl_data::has_rnti() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_dl_data::set_has_rnti() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_dl_data::clear_has_rnti() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_dl_data::clear_rnti() {
  rnti_ = 0u;
  clear_has_rnti();
}
inline ::google::protobuf::uint32 flex_dl_data::rnti() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_data.rnti)
  return rnti_;
}
inline void flex_dl_data::set_rnti(::google::protobuf::uint32 value) {
  set_has_rnti();
  rnti_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_data.rnti)
}

// optional .protocol.flex_dl_dci dl_dci = 2;
inline bool flex_dl_data::has_dl_dci() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_dl_data::set_has_dl_dci() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_dl_data::clear_has_dl_dci() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_dl_data::clear_dl_dci() {
  if (dl_dci_ != NULL) dl_dci_->::protocol::flex_dl_dci::Clear();
  clear_has_dl_dci();
}
inline const ::protocol::flex_dl_dci& flex_dl_data::dl_dci() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_data.dl_dci)
  return dl_dci_ != NULL ? *dl_dci_
                         : *::protocol::flex_dl_dci::internal_default_instance();
}
inline ::protocol::flex_dl_dci* flex_dl_data::mutable_dl_dci() {
  set_has_dl_dci();
  if (dl_dci_ == NULL) {
    dl_dci_ = new ::protocol::flex_dl_dci;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_data.dl_dci)
  return dl_dci_;
}
inline ::protocol::flex_dl_dci* flex_dl_data::release_dl_dci() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_data.dl_dci)
  clear_has_dl_dci();
  ::protocol::flex_dl_dci* temp = dl_dci_;
  dl_dci_ = NULL;
  return temp;
}
inline void flex_dl_data::set_allocated_dl_dci(::protocol::flex_dl_dci* dl_dci) {
  delete dl_dci_;
  dl_dci_ = dl_dci;
  if (dl_dci) {
    set_has_dl_dci();
  } else {
    clear_has_dl_dci();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_data.dl_dci)
}

// repeated uint32 ce_bitmap = 3;
inline int flex_dl_data::ce_bitmap_size() const {
  return ce_bitmap_.size();
}
inline void flex_dl_data::clear_ce_bitmap() {
  ce_bitmap_.Clear();
}
inline ::google::protobuf::uint32 flex_dl_data::ce_bitmap(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_data.ce_bitmap)
  return ce_bitmap_.Get(index);
}
inline void flex_dl_data::set_ce_bitmap(int index, ::google::protobuf::uint32 value) {
  ce_bitmap_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.flex_dl_data.ce_bitmap)
}
inline void flex_dl_data::add_ce_bitmap(::google::protobuf::uint32 value) {
  ce_bitmap_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.flex_dl_data.ce_bitmap)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
flex_dl_data::ce_bitmap() const {
  // @@protoc_insertion_point(field_list:protocol.flex_dl_data.ce_bitmap)
  return ce_bitmap_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
flex_dl_data::mutable_ce_bitmap() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_dl_data.ce_bitmap)
  return &ce_bitmap_;
}

// repeated .protocol.flex_rlc_pdu rlc_pdu = 4;
inline int flex_dl_data::rlc_pdu_size() const {
  return rlc_pdu_.size();
}
inline void flex_dl_data::clear_rlc_pdu() {
  rlc_pdu_.Clear();
}
inline const ::protocol::flex_rlc_pdu& flex_dl_data::rlc_pdu(int index) const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_data.rlc_pdu)
  return rlc_pdu_.Get(index);
}
inline ::protocol::flex_rlc_pdu* flex_dl_data::mutable_rlc_pdu(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_data.rlc_pdu)
  return rlc_pdu_.Mutable(index);
}
inline ::protocol::flex_rlc_pdu* flex_dl_data::add_rlc_pdu() {
  // @@protoc_insertion_point(field_add:protocol.flex_dl_data.rlc_pdu)
  return rlc_pdu_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::flex_rlc_pdu >*
flex_dl_data::mutable_rlc_pdu() {
  // @@protoc_insertion_point(field_mutable_list:protocol.flex_dl_data.rlc_pdu)
  return &rlc_pdu_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::flex_rlc_pdu >&
flex_dl_data::rlc_pdu() const {
  // @@protoc_insertion_point(field_list:protocol.flex_dl_data.rlc_pdu)
  return rlc_pdu_;
}

// optional uint32 serv_cell_index = 5;
inline bool flex_dl_data::has_serv_cell_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_dl_data::set_has_serv_cell_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_dl_data::clear_has_serv_cell_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_dl_data::clear_serv_cell_index() {
  serv_cell_index_ = 0u;
  clear_has_serv_cell_index();
}
inline ::google::protobuf::uint32 flex_dl_data::serv_cell_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_data.serv_cell_index)
  return serv_cell_index_;
}
inline void flex_dl_data::set_serv_cell_index(::google::protobuf::uint32 value) {
  set_has_serv_cell_index();
  serv_cell_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_data.serv_cell_index)
}

// optional uint32 act_deact_ce = 6;
inline bool flex_dl_data::has_act_deact_ce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_dl_data::set_has_act_deact_ce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_dl_data::clear_has_act_deact_ce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_dl_data::clear_act_deact_ce() {
  act_deact_ce_ = 0u;
  clear_has_act_deact_ce();
}
inline ::google::protobuf::uint32 flex_dl_data::act_deact_ce() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_data.act_deact_ce)
  return act_deact_ce_;
}
inline void flex_dl_data::set_act_deact_ce(::google::protobuf::uint32 value) {
  set_has_act_deact_ce();
  act_deact_ce_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_data.act_deact_ce)
}

// -------------------------------------------------------------------

// flex_ul_data

// optional uint32 rnti = 1;
inline bool flex_ul_data::has_rnti() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_ul_data::set_has_rnti() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_ul_data::clear_has_rnti() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_ul_data::clear_rnti() {
  rnti_ = 0u;
  clear_has_rnti();
}
inline ::google::protobuf::uint32 flex_ul_data::rnti() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ul_data.rnti)
  return rnti_;
}
inline void flex_ul_data::set_rnti(::google::protobuf::uint32 value) {
  set_has_rnti();
  rnti_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_ul_data.rnti)
}

// optional .protocol.flex_ul_dci ul_dci = 2;
inline bool flex_ul_data::has_ul_dci() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_ul_data::set_has_ul_dci() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_ul_data::clear_has_ul_dci() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_ul_data::clear_ul_dci() {
  if (ul_dci_ != NULL) ul_dci_->::protocol::flex_ul_dci::Clear();
  clear_has_ul_dci();
}
inline const ::protocol::flex_ul_dci& flex_ul_data::ul_dci() const {
  // @@protoc_insertion_point(field_get:protocol.flex_ul_data.ul_dci)
  return ul_dci_ != NULL ? *ul_dci_
                         : *::protocol::flex_ul_dci::internal_default_instance();
}
inline ::protocol::flex_ul_dci* flex_ul_data::mutable_ul_dci() {
  set_has_ul_dci();
  if (ul_dci_ == NULL) {
    ul_dci_ = new ::protocol::flex_ul_dci;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_ul_data.ul_dci)
  return ul_dci_;
}
inline ::protocol::flex_ul_dci* flex_ul_data::release_ul_dci() {
  // @@protoc_insertion_point(field_release:protocol.flex_ul_data.ul_dci)
  clear_has_ul_dci();
  ::protocol::flex_ul_dci* temp = ul_dci_;
  ul_dci_ = NULL;
  return temp;
}
inline void flex_ul_data::set_allocated_ul_dci(::protocol::flex_ul_dci* ul_dci) {
  delete ul_dci_;
  ul_dci_ = ul_dci;
  if (ul_dci) {
    set_has_ul_dci();
  } else {
    clear_has_ul_dci();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_ul_data.ul_dci)
}

// -------------------------------------------------------------------

// flex_dl_rar

// optional uint32 rnti = 1;
inline bool flex_dl_rar::has_rnti() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_dl_rar::set_has_rnti() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_dl_rar::clear_has_rnti() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_dl_rar::clear_rnti() {
  rnti_ = 0u;
  clear_has_rnti();
}
inline ::google::protobuf::uint32 flex_dl_rar::rnti() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_rar.rnti)
  return rnti_;
}
inline void flex_dl_rar::set_rnti(::google::protobuf::uint32 value) {
  set_has_rnti();
  rnti_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_rar.rnti)
}

// optional uint32 grant = 2;
inline bool flex_dl_rar::has_grant() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_dl_rar::set_has_grant() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_dl_rar::clear_has_grant() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_dl_rar::clear_grant() {
  grant_ = 0u;
  clear_has_grant();
}
inline ::google::protobuf::uint32 flex_dl_rar::grant() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_rar.grant)
  return grant_;
}
inline void flex_dl_rar::set_grant(::google::protobuf::uint32 value) {
  set_has_grant();
  grant_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_rar.grant)
}

// optional .protocol.flex_dl_dci rar_dci = 3;
inline bool flex_dl_rar::has_rar_dci() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_dl_rar::set_has_rar_dci() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_dl_rar::clear_has_rar_dci() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_dl_rar::clear_rar_dci() {
  if (rar_dci_ != NULL) rar_dci_->::protocol::flex_dl_dci::Clear();
  clear_has_rar_dci();
}
inline const ::protocol::flex_dl_dci& flex_dl_rar::rar_dci() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_rar.rar_dci)
  return rar_dci_ != NULL ? *rar_dci_
                         : *::protocol::flex_dl_dci::internal_default_instance();
}
inline ::protocol::flex_dl_dci* flex_dl_rar::mutable_rar_dci() {
  set_has_rar_dci();
  if (rar_dci_ == NULL) {
    rar_dci_ = new ::protocol::flex_dl_dci;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_rar.rar_dci)
  return rar_dci_;
}
inline ::protocol::flex_dl_dci* flex_dl_rar::release_rar_dci() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_rar.rar_dci)
  clear_has_rar_dci();
  ::protocol::flex_dl_dci* temp = rar_dci_;
  rar_dci_ = NULL;
  return temp;
}
inline void flex_dl_rar::set_allocated_rar_dci(::protocol::flex_dl_dci* rar_dci) {
  delete rar_dci_;
  rar_dci_ = rar_dci;
  if (rar_dci) {
    set_has_rar_dci();
  } else {
    clear_has_rar_dci();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_rar.rar_dci)
}

// optional uint32 carrier_index = 4;
inline bool flex_dl_rar::has_carrier_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_dl_rar::set_has_carrier_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_dl_rar::clear_has_carrier_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_dl_rar::clear_carrier_index() {
  carrier_index_ = 0u;
  clear_has_carrier_index();
}
inline ::google::protobuf::uint32 flex_dl_rar::carrier_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_rar.carrier_index)
  return carrier_index_;
}
inline void flex_dl_rar::set_carrier_index(::google::protobuf::uint32 value) {
  set_has_carrier_index();
  carrier_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_rar.carrier_index)
}

// -------------------------------------------------------------------

// flex_dl_broadcast

// optional uint32 type = 1;
inline bool flex_dl_broadcast::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_dl_broadcast::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_dl_broadcast::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_dl_broadcast::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 flex_dl_broadcast::type() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_broadcast.type)
  return type_;
}
inline void flex_dl_broadcast::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_broadcast.type)
}

// optional uint32 index = 2;
inline bool flex_dl_broadcast::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_dl_broadcast::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_dl_broadcast::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_dl_broadcast::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 flex_dl_broadcast::index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_broadcast.index)
  return index_;
}
inline void flex_dl_broadcast::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_broadcast.index)
}

// optional .protocol.flex_dl_dci broad_dci = 3;
inline bool flex_dl_broadcast::has_broad_dci() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_dl_broadcast::set_has_broad_dci() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_dl_broadcast::clear_has_broad_dci() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_dl_broadcast::clear_broad_dci() {
  if (broad_dci_ != NULL) broad_dci_->::protocol::flex_dl_dci::Clear();
  clear_has_broad_dci();
}
inline const ::protocol::flex_dl_dci& flex_dl_broadcast::broad_dci() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_broadcast.broad_dci)
  return broad_dci_ != NULL ? *broad_dci_
                         : *::protocol::flex_dl_dci::internal_default_instance();
}
inline ::protocol::flex_dl_dci* flex_dl_broadcast::mutable_broad_dci() {
  set_has_broad_dci();
  if (broad_dci_ == NULL) {
    broad_dci_ = new ::protocol::flex_dl_dci;
  }
  // @@protoc_insertion_point(field_mutable:protocol.flex_dl_broadcast.broad_dci)
  return broad_dci_;
}
inline ::protocol::flex_dl_dci* flex_dl_broadcast::release_broad_dci() {
  // @@protoc_insertion_point(field_release:protocol.flex_dl_broadcast.broad_dci)
  clear_has_broad_dci();
  ::protocol::flex_dl_dci* temp = broad_dci_;
  broad_dci_ = NULL;
  return temp;
}
inline void flex_dl_broadcast::set_allocated_broad_dci(::protocol::flex_dl_dci* broad_dci) {
  delete broad_dci_;
  broad_dci_ = broad_dci;
  if (broad_dci) {
    set_has_broad_dci();
  } else {
    clear_has_broad_dci();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.flex_dl_broadcast.broad_dci)
}

// optional uint32 carrier_index = 4;
inline bool flex_dl_broadcast::has_carrier_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flex_dl_broadcast::set_has_carrier_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flex_dl_broadcast::clear_has_carrier_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flex_dl_broadcast::clear_carrier_index() {
  carrier_index_ = 0u;
  clear_has_carrier_index();
}
inline ::google::protobuf::uint32 flex_dl_broadcast::carrier_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_dl_broadcast.carrier_index)
  return carrier_index_;
}
inline void flex_dl_broadcast::set_carrier_index(::google::protobuf::uint32 value) {
  set_has_carrier_index();
  carrier_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_dl_broadcast.carrier_index)
}

// -------------------------------------------------------------------

// flex_pdcch_ofdm_sym_count

// optional uint32 carrier_index = 1;
inline bool flex_pdcch_ofdm_sym_count::has_carrier_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_pdcch_ofdm_sym_count::set_has_carrier_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_pdcch_ofdm_sym_count::clear_has_carrier_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_pdcch_ofdm_sym_count::clear_carrier_index() {
  carrier_index_ = 0u;
  clear_has_carrier_index();
}
inline ::google::protobuf::uint32 flex_pdcch_ofdm_sym_count::carrier_index() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcch_ofdm_sym_count.carrier_index)
  return carrier_index_;
}
inline void flex_pdcch_ofdm_sym_count::set_carrier_index(::google::protobuf::uint32 value) {
  set_has_carrier_index();
  carrier_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcch_ofdm_sym_count.carrier_index)
}

// optional uint32 num_pdcch_ofdm_symbols = 2;
inline bool flex_pdcch_ofdm_sym_count::has_num_pdcch_ofdm_symbols() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_pdcch_ofdm_sym_count::set_has_num_pdcch_ofdm_symbols() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_pdcch_ofdm_sym_count::clear_has_num_pdcch_ofdm_symbols() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_pdcch_ofdm_sym_count::clear_num_pdcch_ofdm_symbols() {
  num_pdcch_ofdm_symbols_ = 0u;
  clear_has_num_pdcch_ofdm_symbols();
}
inline ::google::protobuf::uint32 flex_pdcch_ofdm_sym_count::num_pdcch_ofdm_symbols() const {
  // @@protoc_insertion_point(field_get:protocol.flex_pdcch_ofdm_sym_count.num_pdcch_ofdm_symbols)
  return num_pdcch_ofdm_symbols_;
}
inline void flex_pdcch_ofdm_sym_count::set_num_pdcch_ofdm_symbols(::google::protobuf::uint32 value) {
  set_has_num_pdcch_ofdm_symbols();
  num_pdcch_ofdm_symbols_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_pdcch_ofdm_sym_count.num_pdcch_ofdm_symbols)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protocol::flex_broadcast_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::flex_broadcast_type>() {
  return ::protocol::flex_broadcast_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_controller_5fcommands_2eproto__INCLUDED
