// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: header.proto

#ifndef PROTOBUF_header_2eproto__INCLUDED
#define PROTOBUF_header_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace protocol {
class flex_header;
class flex_headerDefaultTypeInternal;
extern flex_headerDefaultTypeInternal _flex_header_default_instance_;
}  // namespace protocol

namespace protocol {

namespace protobuf_header_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_header_2eproto

enum flex_type {
  FLPT_HELLO = 0,
  FLPT_ECHO_REQUEST = 1,
  FLPT_ECHO_REPLY = 2,
  FLPT_DISCONNECT = 20,
  FLPT_STATS_REQUEST = 3,
  FLPT_STATS_REPLY = 4,
  FLPT_SF_TRIGGER = 5,
  FLPT_UL_SR_INFO = 6,
  FLPT_GET_ENB_CONFIG_REQUEST = 7,
  FLPT_GET_ENB_CONFIG_REPLY = 8,
  FLPT_GET_UE_CONFIG_REQUEST = 9,
  FLPT_GET_UE_CONFIG_REPLY = 10,
  FLPT_GET_LC_CONFIG_REQUEST = 11,
  FLPT_GET_LC_CONFIG_REPLY = 12,
  FLPT_DL_MAC_CONFIG = 13,
  FLPT_HO_COMMAND = 21,
  FLPT_UE_STATE_CHANGE = 14,
  FLPT_DELEGATE_CONTROL = 15,
  FLPT_RECONFIGURE_AGENT = 16,
  FLPT_RRC_TRIGGERING = 17,
  FLPT_UL_MAC_CONFIG = 18
};
bool flex_type_IsValid(int value);
const flex_type flex_type_MIN = FLPT_HELLO;
const flex_type flex_type_MAX = FLPT_HO_COMMAND;
const int flex_type_ARRAYSIZE = flex_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* flex_type_descriptor();
inline const ::std::string& flex_type_Name(flex_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    flex_type_descriptor(), value);
}
inline bool flex_type_Parse(
    const ::std::string& name, flex_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<flex_type>(
    flex_type_descriptor(), name, value);
}
// ===================================================================

class flex_header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.flex_header) */ {
 public:
  flex_header();
  virtual ~flex_header();

  flex_header(const flex_header& from);

  inline flex_header& operator=(const flex_header& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flex_header& default_instance();

  static inline const flex_header* internal_default_instance() {
    return reinterpret_cast<const flex_header*>(
               &_flex_header_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(flex_header* other);

  // implements Message ----------------------------------------------

  inline flex_header* New() const PROTOBUF_FINAL { return New(NULL); }

  flex_header* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const flex_header& from);
  void MergeFrom(const flex_header& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(flex_header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 xid = 4;
  bool has_xid() const;
  void clear_xid();
  static const int kXidFieldNumber = 4;
  ::google::protobuf::uint32 xid() const;
  void set_xid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.flex_header)
 private:
  void set_has_version();
  void clear_has_version();
  void set_has_type();
  void clear_has_type();
  void set_has_xid();
  void clear_has_xid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 xid_;
  friend struct protobuf_header_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// flex_header

// optional uint32 version = 1;
inline bool flex_header::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flex_header::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flex_header::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flex_header::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 flex_header::version() const {
  // @@protoc_insertion_point(field_get:protocol.flex_header.version)
  return version_;
}
inline void flex_header::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_header.version)
}

// optional uint32 type = 2;
inline bool flex_header::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flex_header::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flex_header::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flex_header::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 flex_header::type() const {
  // @@protoc_insertion_point(field_get:protocol.flex_header.type)
  return type_;
}
inline void flex_header::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_header.type)
}

// optional uint32 xid = 4;
inline bool flex_header::has_xid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flex_header::set_has_xid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flex_header::clear_has_xid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flex_header::clear_xid() {
  xid_ = 0u;
  clear_has_xid();
}
inline ::google::protobuf::uint32 flex_header::xid() const {
  // @@protoc_insertion_point(field_get:protocol.flex_header.xid)
  return xid_;
}
inline void flex_header::set_xid(::google::protobuf::uint32 value) {
  set_has_xid();
  xid_ = value;
  // @@protoc_insertion_point(field_set:protocol.flex_header.xid)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protocol::flex_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::flex_type>() {
  return ::protocol::flex_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_header_2eproto__INCLUDED
